@page "/journal"
@inject SparkleBot.Interfaces.ISparkleService SparkleService
<div class="journal-page-container">
<PageTitle>Journal Poster</PageTitle>

<h1>Journal Poster</h1>
<p>Use this page to manually trigger the creation of a new journal entry and post it to Mastodon.</p>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Step 1: Create Journal Entry</h5>
        <p>This will generate a long-form journal entry based on Sparkle's recent history.</p>
        <button class="btn btn-primary" @onclick="HandleCreateJournal" disabled="@_isBusy">
            Create Journal
        </button>

        @if (!string.IsNullOrEmpty(_journalContent))
        {
            <div class="mt-3">
                <h6>Generated Journal Entry:</h6>
                <pre class="p-2 bg-light border rounded">@_journalContent</pre>
            </div>
        }
    </div>
</div>

@if (!string.IsNullOrEmpty(_journalContent))
{
    <div class="card mt-3">
        <div class="card-body">
            <h5 class="card-title">Step 2: Create Mastodon Post</h5>
            <p>This will summarize the journal entry into a Mastodon-ready post (under 500 characters).</p>
            <button class="btn btn-primary" @onclick="HandleCreatePost" disabled="@(_isBusy || string.IsNullOrEmpty(_journalContent))">
                Create Post from Journal
            </button>

            @if (!string.IsNullOrEmpty(_postContent))
            {
                <div class="mt-3">
                    <h6>Generated Mastodon Post:</h6>
                    <pre class="p-2 bg-light border rounded">@_postContent</pre>
                </div>
            }
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(_postContent))
{
    <div class="card mt-3">
        <div class="card-body">
            <h5 class="card-title">Step 3: Post to Mastodon</h5>
            <p>This will publish the generated post to the configured Mastodon account.</p>
            <button class="btn btn-success" @onclick="HandlePostToMastodon" disabled="@(_isBusy || string.IsNullOrEmpty(_postContent))">
                Post to Mastodon
            </button>
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(_statusMessage))
{
    <div class="alert alert-info mt-3" role="alert">
        @_statusMessage
    </div>
}

</div>

@code {
    private bool _isBusy;
    private string _journalContent = "";
    private string _postContent = "";
    private string _statusMessage = "";

    private async Task HandleCreateJournal()
    {
        _isBusy = true;
        _postContent = "";
        _journalContent = "";
        _statusMessage = "Creating journal entry...";
        StateHasChanged();

        _journalContent = await SparkleService.CreateJournal();
        
        _statusMessage = "Journal entry created successfully. You can now create a Mastodon post from it.";
        _isBusy = false;
        StateHasChanged();
    }

    private async Task HandleCreatePost()
    {
        _isBusy = true;
        _statusMessage = "Creating Mastodon post from journal...";
        StateHasChanged();
        
        _postContent = await SparkleService.CreateJournalPost(_journalContent);

        _statusMessage = "Mastodon post created successfully. You can now publish it.";
        _isBusy = false;
        StateHasChanged();
    }

    private async Task HandlePostToMastodon()
    {
        _isBusy = true;
        _statusMessage = "Posting to Mastodon...";
        StateHasChanged();

        await SparkleService.PostToMastodon(_postContent);
        
        _statusMessage = "Successfully posted to Mastodon! The process is complete.";
        _isBusy = false;
        StateHasChanged();
    }
}
