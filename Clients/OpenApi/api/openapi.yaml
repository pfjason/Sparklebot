openapi: 3.1.0
info:
  title: Open WebUI
  version: 0.1.0
servers:
- url: /
paths:
  /ollama/:
    get:
      operationId: get_status_ollama__get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Status
      tags:
      - ollama
    head:
      operationId: get_status_ollama__head
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Status
      tags:
      - ollama
  /ollama/verify:
    post:
      operationId: verify_connection_ollama_verify_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/open_webui__routers__ollama__ConnectionVerificationForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Verify Connection
      tags:
      - ollama
  /ollama/config:
    get:
      operationId: get_config_ollama_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Config
      tags:
      - ollama
  /ollama/config/update:
    post:
      operationId: update_config_ollama_config_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/open_webui__routers__ollama__OllamaConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Config
      tags:
      - ollama
  /ollama/api/tags/{url_idx}:
    get:
      operationId: get_ollama_tags_ollama_api_tags__url_idx__get
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Ollama Tags
      tags:
      - ollama
  /ollama/api/tags:
    get:
      operationId: get_ollama_tags_ollama_api_tags_get
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Ollama Tags
      tags:
      - ollama
  /ollama/api/ps:
    get:
      description: "List models that are currently loaded into Ollama memory, and\
        \ which node they are loaded on."
      operationId: get_ollama_loaded_models_ollama_api_ps_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Ollama Loaded Models
      tags:
      - ollama
  /ollama/api/version/{url_idx}:
    get:
      operationId: get_ollama_versions_ollama_api_version__url_idx__get
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Get Ollama Versions
      tags:
      - ollama
  /ollama/api/version:
    get:
      operationId: get_ollama_versions_ollama_api_version_get
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Get Ollama Versions
      tags:
      - ollama
  /ollama/api/unload:
    post:
      operationId: unload_model_ollama_api_unload_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelNameForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Unload Model
      tags:
      - ollama
  /ollama/api/pull/{url_idx}:
    post:
      operationId: pull_model_ollama_api_pull__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          title: Url Idx
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelNameForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Pull Model
      tags:
      - ollama
  /ollama/api/pull:
    post:
      operationId: pull_model_ollama_api_pull_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          default: 0
          title: Url Idx
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelNameForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Pull Model
      tags:
      - ollama
  /ollama/api/push/{url_idx}:
    delete:
      operationId: push_model_ollama_api_push__url_idx__delete
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PushModelForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Push Model
      tags:
      - ollama
  /ollama/api/push:
    delete:
      operationId: push_model_ollama_api_push_delete
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PushModelForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Push Model
      tags:
      - ollama
  /ollama/api/create/{url_idx}:
    post:
      operationId: create_model_ollama_api_create__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          title: Url Idx
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateModelForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Model
      tags:
      - ollama
  /ollama/api/create:
    post:
      operationId: create_model_ollama_api_create_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          default: 0
          title: Url Idx
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateModelForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Model
      tags:
      - ollama
  /ollama/api/copy/{url_idx}:
    post:
      operationId: copy_model_ollama_api_copy__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CopyModelForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Copy Model
      tags:
      - ollama
  /ollama/api/copy:
    post:
      operationId: copy_model_ollama_api_copy_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CopyModelForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Copy Model
      tags:
      - ollama
  /ollama/api/delete/{url_idx}:
    delete:
      operationId: delete_model_ollama_api_delete__url_idx__delete
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelNameForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Model
      tags:
      - ollama
  /ollama/api/delete:
    delete:
      operationId: delete_model_ollama_api_delete_delete
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelNameForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Model
      tags:
      - ollama
  /ollama/api/show:
    post:
      operationId: show_model_info_ollama_api_show_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelNameForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Show Model Info
      tags:
      - ollama
  /ollama/api/embed/{url_idx}:
    post:
      operationId: embed_ollama_api_embed__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateEmbedForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Embed
      tags:
      - ollama
  /ollama/api/embed:
    post:
      operationId: embed_ollama_api_embed_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateEmbedForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Embed
      tags:
      - ollama
  /ollama/api/embeddings/{url_idx}:
    post:
      operationId: embeddings_ollama_api_embeddings__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateEmbeddingsForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Embeddings
      tags:
      - ollama
  /ollama/api/embeddings:
    post:
      operationId: embeddings_ollama_api_embeddings_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateEmbeddingsForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Embeddings
      tags:
      - ollama
  /ollama/api/generate/{url_idx}:
    post:
      operationId: generate_completion_ollama_api_generate__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateCompletionForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Completion
      tags:
      - ollama
  /ollama/api/generate:
    post:
      operationId: generate_completion_ollama_api_generate_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateCompletionForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Completion
      tags:
      - ollama
  /ollama/api/chat/{url_idx}:
    post:
      operationId: generate_chat_completion_ollama_api_chat__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      - explode: true
        in: query
        name: bypass_filter
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Chat Completion
      tags:
      - ollama
  /ollama/api/chat:
    post:
      operationId: generate_chat_completion_ollama_api_chat_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: bypass_filter
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Chat Completion
      tags:
      - ollama
  /ollama/v1/completions/{url_idx}:
    post:
      operationId: generate_openai_completion_ollama_v1_completions__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Openai Completion
      tags:
      - ollama
  /ollama/v1/completions:
    post:
      operationId: generate_openai_completion_ollama_v1_completions_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Openai Completion
      tags:
      - ollama
  /ollama/v1/chat/completions/{url_idx}:
    post:
      operationId: generate_openai_chat_completion_ollama_v1_chat_completions__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Openai Chat Completion
      tags:
      - ollama
  /ollama/v1/chat/completions:
    post:
      operationId: generate_openai_chat_completion_ollama_v1_chat_completions_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Openai Chat Completion
      tags:
      - ollama
  /ollama/v1/models/{url_idx}:
    get:
      operationId: get_openai_models_ollama_v1_models__url_idx__get
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Openai Models
      tags:
      - ollama
  /ollama/v1/models:
    get:
      operationId: get_openai_models_ollama_v1_models_get
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Openai Models
      tags:
      - ollama
  /ollama/models/download/{url_idx}:
    post:
      operationId: download_model_ollama_models_download__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UrlForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Download Model
      tags:
      - ollama
  /ollama/models/download:
    post:
      operationId: download_model_ollama_models_download_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UrlForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Download Model
      tags:
      - ollama
  /ollama/models/upload/{url_idx}:
    post:
      operationId: upload_model_ollama_models_upload__url_idx__post
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_upload_model_ollama_models_upload__url_idx__post"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Upload Model
      tags:
      - ollama
  /ollama/models/upload:
    post:
      operationId: upload_model_ollama_models_upload_post
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_upload_model_ollama_models_upload_post"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Upload Model
      tags:
      - ollama
  /openai/config:
    get:
      operationId: get_config_openai_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Config
      tags:
      - openai
  /openai/config/update:
    post:
      operationId: update_config_openai_config_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/open_webui__routers__openai__OpenAIConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Config
      tags:
      - openai
  /openai/audio/speech:
    post:
      operationId: speech_openai_audio_speech_post
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Speech
      tags:
      - openai
  /openai/models/{url_idx}:
    get:
      operationId: get_models_openai_models__url_idx__get
      parameters:
      - explode: false
        in: path
        name: url_idx
        required: true
        schema:
          nullable: true
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Models
      tags:
      - openai
  /openai/models:
    get:
      operationId: get_models_openai_models_get
      parameters:
      - explode: true
        in: query
        name: url_idx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Models
      tags:
      - openai
  /openai/verify:
    post:
      operationId: verify_connection_openai_verify_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/open_webui__routers__openai__ConnectionVerificationForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Verify Connection
      tags:
      - openai
  /openai/chat/completions:
    post:
      operationId: generate_chat_completion_openai_chat_completions_post
      parameters:
      - explode: true
        in: query
        name: bypass_filter
        required: false
        schema:
          nullable: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Chat Completion
      tags:
      - openai
  /openai/{path}:
    delete:
      description: "Deprecated: proxy all requests to OpenAI API"
      operationId: proxy_openai__path__delete
      parameters:
      - explode: false
        in: path
        name: path
        required: true
        schema:
          title: Path
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Proxy
      tags:
      - openai
    get:
      description: "Deprecated: proxy all requests to OpenAI API"
      operationId: proxy_openai__path__delete
      parameters:
      - explode: false
        in: path
        name: path
        required: true
        schema:
          title: Path
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Proxy
      tags:
      - openai
    post:
      description: "Deprecated: proxy all requests to OpenAI API"
      operationId: proxy_openai__path__delete
      parameters:
      - explode: false
        in: path
        name: path
        required: true
        schema:
          title: Path
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Proxy
      tags:
      - openai
    put:
      description: "Deprecated: proxy all requests to OpenAI API"
      operationId: proxy_openai__path__delete
      parameters:
      - explode: false
        in: path
        name: path
        required: true
        schema:
          title: Path
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Proxy
      tags:
      - openai
  /api/v1/pipelines/list:
    get:
      operationId: get_pipelines_list_api_v1_pipelines_list_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Pipelines List
      tags:
      - pipelines
  /api/v1/pipelines/upload:
    post:
      operationId: upload_pipeline_api_v1_pipelines_upload_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_upload_pipeline_api_v1_pipelines_upload_post"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Upload Pipeline
      tags:
      - pipelines
  /api/v1/pipelines/add:
    post:
      operationId: add_pipeline_api_v1_pipelines_add_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddPipelineForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add Pipeline
      tags:
      - pipelines
  /api/v1/pipelines/delete:
    delete:
      operationId: delete_pipeline_api_v1_pipelines_delete_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePipelineForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Pipeline
      tags:
      - pipelines
  /api/v1/pipelines/:
    get:
      operationId: get_pipelines_api_v1_pipelines__get
      parameters:
      - explode: true
        in: query
        name: urlIdx
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Pipelines
      tags:
      - pipelines
  /api/v1/pipelines/{pipeline_id}/valves:
    get:
      operationId: get_pipeline_valves_api_v1_pipelines__pipeline_id__valves_get
      parameters:
      - explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          title: Pipeline Id
          type: string
        style: simple
      - explode: true
        in: query
        name: urlIdx
        required: true
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Pipeline Valves
      tags:
      - pipelines
  /api/v1/pipelines/{pipeline_id}/valves/spec:
    get:
      operationId: get_pipeline_valves_spec_api_v1_pipelines__pipeline_id__valves_spec_get
      parameters:
      - explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          title: Pipeline Id
          type: string
        style: simple
      - explode: true
        in: query
        name: urlIdx
        required: true
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Pipeline Valves Spec
      tags:
      - pipelines
  /api/v1/pipelines/{pipeline_id}/valves/update:
    post:
      operationId: update_pipeline_valves_api_v1_pipelines__pipeline_id__valves_update_post
      parameters:
      - explode: false
        in: path
        name: pipeline_id
        required: true
        schema:
          title: Pipeline Id
          type: string
        style: simple
      - explode: true
        in: query
        name: urlIdx
        required: true
        schema:
          nullable: true
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Pipeline Valves
      tags:
      - pipelines
  /api/v1/tasks/config:
    get:
      operationId: get_task_config_api_v1_tasks_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Task Config
      tags:
      - tasks
  /api/v1/tasks/config/update:
    post:
      operationId: update_task_config_api_v1_tasks_config_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Task Config
      tags:
      - tasks
  /api/v1/tasks/title/completions:
    post:
      operationId: generate_title_api_v1_tasks_title_completions_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Title
      tags:
      - tasks
  /api/v1/tasks/follow_up/completions:
    post:
      operationId: generate_follow_ups_api_v1_tasks_follow_up_completions_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Follow Ups
      tags:
      - tasks
  /api/v1/tasks/tags/completions:
    post:
      operationId: generate_chat_tags_api_v1_tasks_tags_completions_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Chat Tags
      tags:
      - tasks
  /api/v1/tasks/image_prompt/completions:
    post:
      operationId: generate_image_prompt_api_v1_tasks_image_prompt_completions_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Image Prompt
      tags:
      - tasks
  /api/v1/tasks/queries/completions:
    post:
      operationId: generate_queries_api_v1_tasks_queries_completions_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Queries
      tags:
      - tasks
  /api/v1/tasks/auto/completions:
    post:
      operationId: generate_autocompletion_api_v1_tasks_auto_completions_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Autocompletion
      tags:
      - tasks
  /api/v1/tasks/emoji/completions:
    post:
      operationId: generate_emoji_api_v1_tasks_emoji_completions_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Emoji
      tags:
      - tasks
  /api/v1/tasks/moa/completions:
    post:
      operationId: generate_moa_response_api_v1_tasks_moa_completions_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Generate Moa Response
      tags:
      - tasks
  /api/v1/images/config:
    get:
      operationId: get_config_api_v1_images_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Config
      tags:
      - images
  /api/v1/images/config/update:
    post:
      operationId: update_config_api_v1_images_config_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/open_webui__routers__images__ConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Config
      tags:
      - images
  /api/v1/images/config/url/verify:
    get:
      operationId: verify_url_api_v1_images_config_url_verify_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Verify Url
      tags:
      - images
  /api/v1/images/image/config:
    get:
      operationId: get_image_config_api_v1_images_image_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Image Config
      tags:
      - images
  /api/v1/images/image/config/update:
    post:
      operationId: update_image_config_api_v1_images_image_config_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImageConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Image Config
      tags:
      - images
  /api/v1/images/models:
    get:
      operationId: get_models_api_v1_images_models_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Models
      tags:
      - images
  /api/v1/images/generations:
    post:
      operationId: image_generations_api_v1_images_generations_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateImageForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Image Generations
      tags:
      - images
  /api/v1/audio/config:
    get:
      operationId: get_audio_config_api_v1_audio_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Audio Config
      tags:
      - audio
  /api/v1/audio/config/update:
    post:
      operationId: update_audio_config_api_v1_audio_config_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AudioConfigUpdateForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Audio Config
      tags:
      - audio
  /api/v1/audio/speech:
    post:
      operationId: speech_api_v1_audio_speech_post
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Speech
      tags:
      - audio
  /api/v1/audio/transcriptions:
    post:
      operationId: transcription_api_v1_audio_transcriptions_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_transcription_api_v1_audio_transcriptions_post"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Transcription
      tags:
      - audio
  /api/v1/audio/models:
    get:
      operationId: get_models_api_v1_audio_models_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Models
      tags:
      - audio
  /api/v1/audio/voices:
    get:
      operationId: get_voices_api_v1_audio_voices_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Voices
      tags:
      - audio
  /api/v1/retrieval/:
    get:
      operationId: get_status_api_v1_retrieval__get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Status
      tags:
      - retrieval
  /api/v1/retrieval/embedding:
    get:
      operationId: get_embedding_config_api_v1_retrieval_embedding_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Embedding Config
      tags:
      - retrieval
  /api/v1/retrieval/embedding/update:
    post:
      operationId: update_embedding_config_api_v1_retrieval_embedding_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmbeddingModelUpdateForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Embedding Config
      tags:
      - retrieval
  /api/v1/retrieval/config:
    get:
      operationId: get_rag_config_api_v1_retrieval_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Rag Config
      tags:
      - retrieval
  /api/v1/retrieval/config/update:
    post:
      operationId: update_rag_config_api_v1_retrieval_config_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/open_webui__routers__retrieval__ConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Rag Config
      tags:
      - retrieval
  /api/v1/retrieval/process/file:
    post:
      operationId: process_file_api_v1_retrieval_process_file_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessFileForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Process File
      tags:
      - retrieval
  /api/v1/retrieval/process/text:
    post:
      operationId: process_text_api_v1_retrieval_process_text_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessTextForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Process Text
      tags:
      - retrieval
  /api/v1/retrieval/process/youtube:
    post:
      operationId: process_youtube_video_api_v1_retrieval_process_youtube_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessUrlForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Process Youtube Video
      tags:
      - retrieval
  /api/v1/retrieval/process/web:
    post:
      operationId: process_web_api_v1_retrieval_process_web_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProcessUrlForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Process Web
      tags:
      - retrieval
  /api/v1/retrieval/process/web/search:
    post:
      operationId: process_web_search_api_v1_retrieval_process_web_search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Process Web Search
      tags:
      - retrieval
  /api/v1/retrieval/query/doc:
    post:
      operationId: query_doc_handler_api_v1_retrieval_query_doc_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryDocForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Query Doc Handler
      tags:
      - retrieval
  /api/v1/retrieval/query/collection:
    post:
      operationId: query_collection_handler_api_v1_retrieval_query_collection_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryCollectionsForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Query Collection Handler
      tags:
      - retrieval
  /api/v1/retrieval/delete:
    post:
      operationId: delete_entries_from_collection_api_v1_retrieval_delete_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Entries From Collection
      tags:
      - retrieval
  /api/v1/retrieval/reset/db:
    post:
      operationId: reset_vector_db_api_v1_retrieval_reset_db_post
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Reset Vector Db
      tags:
      - retrieval
  /api/v1/retrieval/reset/uploads:
    post:
      operationId: reset_upload_dir_api_v1_retrieval_reset_uploads_post
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Reset Upload Dir Api V1 Retrieval Reset Uploads Post
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Reset Upload Dir
      tags:
      - retrieval
  /api/v1/retrieval/ef/{text}:
    get:
      operationId: get_embeddings_api_v1_retrieval_ef__text__get
      parameters:
      - explode: false
        in: path
        name: text
        required: true
        schema:
          nullable: true
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Get Embeddings
      tags:
      - retrieval
  /api/v1/retrieval/process/files/batch:
    post:
      description: Process a batch of files and save them to the vector database.
      operationId: process_files_batch_api_v1_retrieval_process_files_batch_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchProcessFilesForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchProcessFilesResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Process Files Batch
      tags:
      - retrieval
  /api/v1/configs/import:
    post:
      operationId: import_config_api_v1_configs_import_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ImportConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Import Config Api V1 Configs Import Post
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Import Config
      tags:
      - configs
  /api/v1/configs/export:
    get:
      operationId: export_config_api_v1_configs_export_get
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Export Config Api V1 Configs Export Get
                type: object
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Export Config
      tags:
      - configs
  /api/v1/configs/direct_connections:
    get:
      operationId: get_direct_connections_config_api_v1_configs_direct_connections_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectionsConfigForm"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Direct Connections Config
      tags:
      - configs
    post:
      operationId: set_direct_connections_config_api_v1_configs_direct_connections_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DirectConnectionsConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectConnectionsConfigForm"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Set Direct Connections Config
      tags:
      - configs
  /api/v1/configs/tool_servers:
    get:
      operationId: get_tool_servers_config_api_v1_configs_tool_servers_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ToolServersConfigForm"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Tool Servers Config
      tags:
      - configs
    post:
      operationId: set_tool_servers_config_api_v1_configs_tool_servers_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToolServersConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ToolServersConfigForm"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Set Tool Servers Config
      tags:
      - configs
  /api/v1/configs/tool_servers/verify:
    post:
      description: Verify the connection to the tool server.
      operationId: verify_tool_servers_config_api_v1_configs_tool_servers_verify_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToolServerConnection"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Verify Tool Servers Config
      tags:
      - configs
  /api/v1/configs/code_execution:
    get:
      operationId: get_code_execution_config_api_v1_configs_code_execution_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodeInterpreterConfigForm"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Code Execution Config
      tags:
      - configs
    post:
      operationId: set_code_execution_config_api_v1_configs_code_execution_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeInterpreterConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CodeInterpreterConfigForm"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Set Code Execution Config
      tags:
      - configs
  /api/v1/configs/models:
    get:
      operationId: get_models_config_api_v1_configs_models_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelsConfigForm"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Models Config
      tags:
      - configs
    post:
      operationId: set_models_config_api_v1_configs_models_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelsConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelsConfigForm"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Set Models Config
      tags:
      - configs
  /api/v1/configs/suggestions:
    post:
      operationId: set_default_suggestions_api_v1_configs_suggestions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetDefaultSuggestionsForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PromptSuggestion"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Set Default Suggestions
      tags:
      - configs
  /api/v1/configs/banners:
    get:
      operationId: get_banners_api_v1_configs_banners_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BannerModel"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Banners
      tags:
      - configs
    post:
      operationId: set_banners_api_v1_configs_banners_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetBannersForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BannerModel"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Set Banners
      tags:
      - configs
  /api/v1/auths/:
    get:
      operationId: get_session_user_api_v1_auths__get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionUserResponse"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Session User
      tags:
      - auths
  /api/v1/auths/update/profile:
    post:
      operationId: update_profile_api_v1_auths_update_profile_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateProfileForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/open_webui__models__auths__UserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Profile
      tags:
      - auths
  /api/v1/auths/update/password:
    post:
      operationId: update_password_api_v1_auths_update_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePasswordForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Update Password Api V1 Auths Update Password Post
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Password
      tags:
      - auths
  /api/v1/auths/ldap:
    post:
      operationId: ldap_auth_api_v1_auths_ldap_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LdapForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionUserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Ldap Auth
      tags:
      - auths
  /api/v1/auths/signin:
    post:
      operationId: signin_api_v1_auths_signin_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SigninForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionUserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Signin
      tags:
      - auths
  /api/v1/auths/signup:
    post:
      operationId: signup_api_v1_auths_signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignupForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionUserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Signup
      tags:
      - auths
  /api/v1/auths/signout:
    get:
      operationId: signout_api_v1_auths_signout_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Signout
      tags:
      - auths
  /api/v1/auths/add:
    post:
      operationId: add_user_api_v1_auths_add_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddUserForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SigninResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add User
      tags:
      - auths
  /api/v1/auths/admin/details:
    get:
      operationId: get_admin_details_api_v1_auths_admin_details_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Admin Details
      tags:
      - auths
  /api/v1/auths/admin/config:
    get:
      operationId: get_admin_config_api_v1_auths_admin_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Admin Config
      tags:
      - auths
    post:
      operationId: update_admin_config_api_v1_auths_admin_config_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdminConfig"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Admin Config
      tags:
      - auths
  /api/v1/auths/admin/config/ldap/server:
    get:
      operationId: get_ldap_server_api_v1_auths_admin_config_ldap_server_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LdapServerConfig"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Ldap Server
      tags:
      - auths
    post:
      operationId: update_ldap_server_api_v1_auths_admin_config_ldap_server_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LdapServerConfig"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Ldap Server
      tags:
      - auths
  /api/v1/auths/admin/config/ldap:
    get:
      operationId: get_ldap_config_api_v1_auths_admin_config_ldap_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Ldap Config
      tags:
      - auths
    post:
      operationId: update_ldap_config_api_v1_auths_admin_config_ldap_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LdapConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Ldap Config
      tags:
      - auths
  /api/v1/auths/api_key:
    delete:
      operationId: delete_api_key_api_v1_auths_api_key_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Api Key Api V1 Auths Api Key Delete
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete Api Key
      tags:
      - auths
    get:
      operationId: get_api_key_api_v1_auths_api_key_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKey"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Api Key
      tags:
      - auths
    post:
      operationId: generate_api_key_api_v1_auths_api_key_post
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKey"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Generate Api Key
      tags:
      - auths
  /api/v1/users/active:
    get:
      description: Get a list of active users.
      operationId: get_active_users_api_v1_users_active_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Active Users
      tags:
      - users
  /api/v1/users/:
    get:
      operationId: get_users_api_v1_users__get
      parameters:
      - explode: true
        in: query
        name: query
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: direction
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Users
      tags:
      - users
  /api/v1/users/all:
    get:
      operationId: get_all_users_api_v1_users_all_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserListResponse"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get All Users
      tags:
      - users
  /api/v1/users/groups:
    get:
      operationId: get_user_groups_api_v1_users_groups_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Groups
      tags:
      - users
  /api/v1/users/permissions:
    get:
      operationId: get_user_permissisions_api_v1_users_permissions_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Permissisions
      tags:
      - users
  /api/v1/users/default/permissions:
    get:
      operationId: get_default_user_permissions_api_v1_users_default_permissions_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPermissions"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Default User Permissions
      tags:
      - users
    post:
      operationId: update_default_user_permissions_api_v1_users_default_permissions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserPermissions"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Default User Permissions
      tags:
      - users
  /api/v1/users/user/settings:
    get:
      operationId: get_user_settings_by_session_user_api_v1_users_user_settings_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettings"
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Settings By Session User
      tags:
      - users
  /api/v1/users/user/settings/update:
    post:
      operationId: update_user_settings_by_session_user_api_v1_users_user_settings_update_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSettings"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettings"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update User Settings By Session User
      tags:
      - users
  /api/v1/users/user/info:
    get:
      operationId: get_user_info_by_session_user_api_v1_users_user_info_get
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Info By Session User
      tags:
      - users
  /api/v1/users/user/info/update:
    post:
      operationId: update_user_info_by_session_user_api_v1_users_user_info_update_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update User Info By Session User
      tags:
      - users
  /api/v1/users/{user_id}:
    delete:
      operationId: delete_user_by_id_api_v1_users__user_id__delete
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete User By Id Api V1 Users  User Id  Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete User By Id
      tags:
      - users
    get:
      operationId: get_user_by_id_api_v1_users__user_id__get
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/open_webui__routers__users__UserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get User By Id
      tags:
      - users
  /api/v1/users/{user_id}/active:
    get:
      operationId: get_user_active_status_by_id_api_v1_users__user_id__active_get
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Get User Active Status By Id Api V1 Users  User Id  Active
                  Get
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get User Active Status By Id
      tags:
      - users
  /api/v1/users/{user_id}/update:
    post:
      operationId: update_user_by_id_api_v1_users__user_id__update_post
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update User By Id
      tags:
      - users
  /api/v1/channels/:
    get:
      operationId: get_channels_api_v1_channels__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChannelModel"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Channels
      tags:
      - channels
  /api/v1/channels/create:
    post:
      operationId: create_new_channel_api_v1_channels_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChannelForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Channel
      tags:
      - channels
  /api/v1/channels/{id}:
    get:
      operationId: get_channel_by_id_api_v1_channels__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Channel By Id
      tags:
      - channels
  /api/v1/channels/{id}/update:
    post:
      operationId: update_channel_by_id_api_v1_channels__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChannelForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChannelModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Channel By Id
      tags:
      - channels
  /api/v1/channels/{id}/delete:
    delete:
      operationId: delete_channel_by_id_api_v1_channels__id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Channel By Id Api V1 Channels  Id  Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Channel By Id
      tags:
      - channels
  /api/v1/channels/{id}/messages:
    get:
      operationId: get_channel_messages_api_v1_channels__id__messages_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MessageUserResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Channel Messages
      tags:
      - channels
  /api/v1/channels/{id}/messages/post:
    post:
      operationId: post_new_message_api_v1_channels__id__messages_post_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/open_webui__models__messages__MessageForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Post New Message
      tags:
      - channels
  /api/v1/channels/{id}/messages/{message_id}:
    get:
      operationId: get_channel_message_api_v1_channels__id__messages__message_id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      - explode: false
        in: path
        name: message_id
        required: true
        schema:
          title: Message Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageUserResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Channel Message
      tags:
      - channels
  /api/v1/channels/{id}/messages/{message_id}/thread:
    get:
      operationId: get_channel_thread_messages_api_v1_channels__id__messages__message_id__thread_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      - explode: false
        in: path
        name: message_id
        required: true
        schema:
          title: Message Id
          type: string
        style: simple
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          title: Skip
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MessageUserResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Channel Thread Messages
      tags:
      - channels
  /api/v1/channels/{id}/messages/{message_id}/update:
    post:
      operationId: update_message_by_id_api_v1_channels__id__messages__message_id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      - explode: false
        in: path
        name: message_id
        required: true
        schema:
          title: Message Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/open_webui__models__messages__MessageForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Message By Id
      tags:
      - channels
  /api/v1/channels/{id}/messages/{message_id}/reactions/add:
    post:
      operationId: add_reaction_to_message_api_v1_channels__id__messages__message_id__reactions_add_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      - explode: false
        in: path
        name: message_id
        required: true
        schema:
          title: Message Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReactionForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Add Reaction To Message Api V1 Channels  Id  Messages  Message
                  Id  Reactions Add Post
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add Reaction To Message
      tags:
      - channels
  /api/v1/channels/{id}/messages/{message_id}/reactions/remove:
    post:
      operationId: remove_reaction_by_id_and_user_id_and_name_api_v1_channels__id__messages__message_id__reactions_remove_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      - explode: false
        in: path
        name: message_id
        required: true
        schema:
          title: Message Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReactionForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Remove Reaction By Id And User Id And Name Api V1
                  Channels  Id  Messages  Message Id  Reactions Remove Post
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Remove Reaction By Id And User Id And Name
      tags:
      - channels
  /api/v1/channels/{id}/messages/{message_id}/delete:
    delete:
      operationId: delete_message_by_id_api_v1_channels__id__messages__message_id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      - explode: false
        in: path
        name: message_id
        required: true
        schema:
          title: Message Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Message By Id Api V1 Channels  Id  Messages  Message
                  Id  Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Message By Id
      tags:
      - channels
  /api/v1/chats/list:
    get:
      operationId: get_session_user_chat_list_api_v1_chats_list_get
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatTitleIdResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Session User Chat List
      tags:
      - chats
  /api/v1/chats/:
    delete:
      operationId: delete_all_user_chats_api_v1_chats__delete
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete All User Chats Api V1 Chats  Delete
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete All User Chats
      tags:
      - chats
    get:
      operationId: get_session_user_chat_list_api_v1_chats__get
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatTitleIdResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Session User Chat List
      tags:
      - chats
  /api/v1/chats/list/user/{user_id}:
    get:
      operationId: get_user_chat_list_by_user_id_api_v1_chats_list_user__user_id__get
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: query
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: direction
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatTitleIdResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get User Chat List By User Id
      tags:
      - chats
  /api/v1/chats/new:
    post:
      operationId: create_new_chat_api_v1_chats_new_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Chat
      tags:
      - chats
  /api/v1/chats/import:
    post:
      operationId: import_chat_api_v1_chats_import_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatImportForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Import Chat
      tags:
      - chats
  /api/v1/chats/search:
    get:
      operationId: search_user_chats_api_v1_chats_search_get
      parameters:
      - explode: true
        in: query
        name: text
        required: true
        schema:
          title: Text
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatTitleIdResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search User Chats
      tags:
      - chats
  /api/v1/chats/folder/{folder_id}:
    get:
      operationId: get_chats_by_folder_id_api_v1_chats_folder__folder_id__get
      parameters:
      - explode: false
        in: path
        name: folder_id
        required: true
        schema:
          title: Folder Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Chats By Folder Id
      tags:
      - chats
  /api/v1/chats/pinned:
    get:
      operationId: get_user_pinned_chats_api_v1_chats_pinned_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatTitleIdResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Pinned Chats
      tags:
      - chats
  /api/v1/chats/all:
    get:
      operationId: get_user_chats_api_v1_chats_all_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Chats
      tags:
      - chats
  /api/v1/chats/all/archived:
    get:
      operationId: get_user_archived_chats_api_v1_chats_all_archived_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get User Archived Chats
      tags:
      - chats
  /api/v1/chats/all/tags:
    get:
      operationId: get_all_user_tags_api_v1_chats_all_tags_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagModel"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get All User Tags
      tags:
      - chats
  /api/v1/chats/all/db:
    get:
      operationId: get_all_user_chats_in_db_api_v1_chats_all_db_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get All User Chats In Db
      tags:
      - chats
  /api/v1/chats/archived:
    get:
      operationId: get_archived_session_user_chat_list_api_v1_chats_archived_get
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: query
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: order_by
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: direction
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatTitleIdResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Archived Session User Chat List
      tags:
      - chats
  /api/v1/chats/archive/all:
    post:
      operationId: archive_all_chats_api_v1_chats_archive_all_post
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Archive All Chats Api V1 Chats Archive All Post
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Archive All Chats
      tags:
      - chats
  /api/v1/chats/share/{share_id}:
    get:
      operationId: get_shared_chat_by_id_api_v1_chats_share__share_id__get
      parameters:
      - explode: false
        in: path
        name: share_id
        required: true
        schema:
          title: Share Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Shared Chat By Id
      tags:
      - chats
  /api/v1/chats/tags:
    post:
      operationId: get_user_chat_list_by_tag_name_api_v1_chats_tags_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagFilterForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ChatTitleIdResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get User Chat List By Tag Name
      tags:
      - chats
  /api/v1/chats/{id}:
    delete:
      operationId: delete_chat_by_id_api_v1_chats__id__delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Chat By Id Api V1 Chats  Id  Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Chat By Id
      tags:
      - chats
    get:
      operationId: get_chat_by_id_api_v1_chats__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Chat By Id
      tags:
      - chats
    post:
      operationId: update_chat_by_id_api_v1_chats__id__post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Chat By Id
      tags:
      - chats
  /api/v1/chats/{id}/messages/{message_id}:
    post:
      operationId: update_chat_message_by_id_api_v1_chats__id__messages__message_id__post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      - explode: false
        in: path
        name: message_id
        required: true
        schema:
          title: Message Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/open_webui__routers__chats__MessageForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Chat Message By Id
      tags:
      - chats
  /api/v1/chats/{id}/messages/{message_id}/event:
    post:
      operationId: send_chat_message_event_by_id_api_v1_chats__id__messages__message_id__event_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      - explode: false
        in: path
        name: message_id
        required: true
        schema:
          title: Message Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Send Chat Message Event By Id
      tags:
      - chats
  /api/v1/chats/{id}/pinned:
    get:
      operationId: get_pinned_status_by_id_api_v1_chats__id__pinned_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Pinned Status By Id
      tags:
      - chats
  /api/v1/chats/{id}/pin:
    post:
      operationId: pin_chat_by_id_api_v1_chats__id__pin_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Pin Chat By Id
      tags:
      - chats
  /api/v1/chats/{id}/clone:
    post:
      operationId: clone_chat_by_id_api_v1_chats__id__clone_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CloneForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Clone Chat By Id
      tags:
      - chats
  /api/v1/chats/{id}/clone/shared:
    post:
      operationId: clone_shared_chat_by_id_api_v1_chats__id__clone_shared_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Clone Shared Chat By Id
      tags:
      - chats
  /api/v1/chats/{id}/archive:
    post:
      operationId: archive_chat_by_id_api_v1_chats__id__archive_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Archive Chat By Id
      tags:
      - chats
  /api/v1/chats/{id}/share:
    delete:
      operationId: delete_shared_chat_by_id_api_v1_chats__id__share_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Shared Chat By Id
      tags:
      - chats
    post:
      operationId: share_chat_by_id_api_v1_chats__id__share_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Share Chat By Id
      tags:
      - chats
  /api/v1/chats/{id}/folder:
    post:
      operationId: update_chat_folder_id_by_id_api_v1_chats__id__folder_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatFolderIdForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Chat Folder Id By Id
      tags:
      - chats
  /api/v1/chats/{id}/tags:
    delete:
      operationId: delete_tag_by_id_and_tag_name_api_v1_chats__id__tags_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagModel"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Tag By Id And Tag Name
      tags:
      - chats
    get:
      operationId: get_chat_tags_by_id_api_v1_chats__id__tags_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagModel"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Chat Tags By Id
      tags:
      - chats
    post:
      operationId: add_tag_by_id_and_tag_name_api_v1_chats__id__tags_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/TagModel"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add Tag By Id And Tag Name
      tags:
      - chats
  /api/v1/chats/{id}/tags/all:
    delete:
      operationId: delete_all_tags_by_id_api_v1_chats__id__tags_all_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete All Tags By Id
      tags:
      - chats
  /api/v1/notes/:
    get:
      operationId: get_notes_api_v1_notes__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/NoteUserResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Notes
      tags:
      - notes
  /api/v1/notes/list:
    get:
      operationId: get_note_list_api_v1_notes_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/NoteUserResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Note List
      tags:
      - notes
  /api/v1/notes/create:
    post:
      operationId: create_new_note_api_v1_notes_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoteModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Note
      tags:
      - notes
  /api/v1/notes/{id}:
    get:
      operationId: get_note_by_id_api_v1_notes__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoteModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Note By Id
      tags:
      - notes
  /api/v1/notes/{id}/update:
    post:
      operationId: update_note_by_id_api_v1_notes__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NoteForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoteModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Note By Id
      tags:
      - notes
  /api/v1/notes/{id}/delete:
    delete:
      operationId: delete_note_by_id_api_v1_notes__id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Note By Id Api V1 Notes  Id  Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Note By Id
      tags:
      - notes
  /api/v1/models/:
    get:
      operationId: get_models_api_v1_models__get
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ModelUserResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Models
      tags:
      - models
  /api/v1/models/base:
    get:
      operationId: get_base_models_api_v1_models_base_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ModelResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Base Models
      tags:
      - models
  /api/v1/models/create:
    post:
      operationId: create_new_model_api_v1_models_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Model
      tags:
      - models
  /api/v1/models/model:
    get:
      operationId: get_model_by_id_api_v1_models_model_get
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Model By Id
      tags:
      - models
  /api/v1/models/model/toggle:
    post:
      operationId: toggle_model_by_id_api_v1_models_model_toggle_post
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Toggle Model By Id
      tags:
      - models
  /api/v1/models/model/update:
    post:
      operationId: update_model_by_id_api_v1_models_model_update_post
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModelForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ModelModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Model By Id
      tags:
      - models
  /api/v1/models/model/delete:
    delete:
      operationId: delete_model_by_id_api_v1_models_model_delete_delete
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Model By Id Api V1 Models Model Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Model By Id
      tags:
      - models
  /api/v1/models/delete/all:
    delete:
      operationId: delete_all_models_api_v1_models_delete_all_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete All Models Api V1 Models Delete All Delete
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete All Models
      tags:
      - models
  /api/v1/knowledge/:
    get:
      operationId: get_knowledge_api_v1_knowledge__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/KnowledgeUserResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Knowledge
      tags:
      - knowledge
  /api/v1/knowledge/list:
    get:
      operationId: get_knowledge_list_api_v1_knowledge_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/KnowledgeUserResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Knowledge List
      tags:
      - knowledge
  /api/v1/knowledge/create:
    post:
      operationId: create_new_knowledge_api_v1_knowledge_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowledgeResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Knowledge
      tags:
      - knowledge
  /api/v1/knowledge/reindex:
    post:
      operationId: reindex_knowledge_files_api_v1_knowledge_reindex_post
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Reindex Knowledge Files Api V1 Knowledge Reindex Post
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Reindex Knowledge Files
      tags:
      - knowledge
  /api/v1/knowledge/{id}:
    get:
      operationId: get_knowledge_by_id_api_v1_knowledge__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowledgeFilesResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Knowledge By Id
      tags:
      - knowledge
  /api/v1/knowledge/{id}/update:
    post:
      operationId: update_knowledge_by_id_api_v1_knowledge__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowledgeFilesResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Knowledge By Id
      tags:
      - knowledge
  /api/v1/knowledge/{id}/file/add:
    post:
      operationId: add_file_to_knowledge_by_id_api_v1_knowledge__id__file_add_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeFileIdForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowledgeFilesResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add File To Knowledge By Id
      tags:
      - knowledge
  /api/v1/knowledge/{id}/file/update:
    post:
      operationId: update_file_from_knowledge_by_id_api_v1_knowledge__id__file_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeFileIdForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowledgeFilesResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update File From Knowledge By Id
      tags:
      - knowledge
  /api/v1/knowledge/{id}/file/remove:
    post:
      operationId: remove_file_from_knowledge_by_id_api_v1_knowledge__id__file_remove_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KnowledgeFileIdForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowledgeFilesResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Remove File From Knowledge By Id
      tags:
      - knowledge
  /api/v1/knowledge/{id}/delete:
    delete:
      operationId: delete_knowledge_by_id_api_v1_knowledge__id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Knowledge By Id Api V1 Knowledge  Id  Delete
                  Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Knowledge By Id
      tags:
      - knowledge
  /api/v1/knowledge/{id}/reset:
    post:
      operationId: reset_knowledge_by_id_api_v1_knowledge__id__reset_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowledgeResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Reset Knowledge By Id
      tags:
      - knowledge
  /api/v1/knowledge/{id}/files/batch/add:
    post:
      description: Add multiple files to a knowledge base
      operationId: add_files_to_knowledge_batch_api_v1_knowledge__id__files_batch_add_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/KnowledgeFileIdForm"
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KnowledgeFilesResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add Files To Knowledge Batch
      tags:
      - knowledge
  /api/v1/prompts/:
    get:
      operationId: get_prompts_api_v1_prompts__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PromptModel"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Prompts
      tags:
      - prompts
  /api/v1/prompts/list:
    get:
      operationId: get_prompt_list_api_v1_prompts_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PromptUserResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Prompt List
      tags:
      - prompts
  /api/v1/prompts/create:
    post:
      operationId: create_new_prompt_api_v1_prompts_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Prompt
      tags:
      - prompts
  /api/v1/prompts/command/{command}:
    get:
      operationId: get_prompt_by_command_api_v1_prompts_command__command__get
      parameters:
      - explode: false
        in: path
        name: command
        required: true
        schema:
          title: Command
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Prompt By Command
      tags:
      - prompts
  /api/v1/prompts/command/{command}/update:
    post:
      operationId: update_prompt_by_command_api_v1_prompts_command__command__update_post
      parameters:
      - explode: false
        in: path
        name: command
        required: true
        schema:
          title: Command
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PromptForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PromptModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Prompt By Command
      tags:
      - prompts
  /api/v1/prompts/command/{command}/delete:
    delete:
      operationId: delete_prompt_by_command_api_v1_prompts_command__command__delete_delete
      parameters:
      - explode: false
        in: path
        name: command
        required: true
        schema:
          title: Command
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Prompt By Command Api V1 Prompts Command  Command  Delete
                  Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Prompt By Command
      tags:
      - prompts
  /api/v1/tools/:
    get:
      operationId: get_tools_api_v1_tools__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ToolUserResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Tools
      tags:
      - tools
  /api/v1/tools/list:
    get:
      operationId: get_tool_list_api_v1_tools_list_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ToolUserResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Tool List
      tags:
      - tools
  /api/v1/tools/load/url:
    post:
      operationId: load_tool_from_url_api_v1_tools_load_url_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadUrlForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Load Tool From Url
      tags:
      - tools
  /api/v1/tools/export:
    get:
      operationId: export_tools_api_v1_tools_export_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ToolModel"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Export Tools
      tags:
      - tools
  /api/v1/tools/create:
    post:
      operationId: create_new_tools_api_v1_tools_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToolForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ToolResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Tools
      tags:
      - tools
  /api/v1/tools/id/{id}:
    get:
      operationId: get_tools_by_id_api_v1_tools_id__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ToolModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tools By Id
      tags:
      - tools
  /api/v1/tools/id/{id}/update:
    post:
      operationId: update_tools_by_id_api_v1_tools_id__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToolForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ToolModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Tools By Id
      tags:
      - tools
  /api/v1/tools/id/{id}/delete:
    delete:
      operationId: delete_tools_by_id_api_v1_tools_id__id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Tools By Id Api V1 Tools Id  Id  Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Tools By Id
      tags:
      - tools
  /api/v1/tools/id/{id}/valves:
    get:
      operationId: get_tools_valves_by_id_api_v1_tools_id__id__valves_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tools Valves By Id
      tags:
      - tools
  /api/v1/tools/id/{id}/valves/spec:
    get:
      operationId: get_tools_valves_spec_by_id_api_v1_tools_id__id__valves_spec_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tools Valves Spec By Id
      tags:
      - tools
  /api/v1/tools/id/{id}/valves/update:
    post:
      operationId: update_tools_valves_by_id_api_v1_tools_id__id__valves_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Tools Valves By Id
      tags:
      - tools
  /api/v1/tools/id/{id}/valves/user:
    get:
      operationId: get_tools_user_valves_by_id_api_v1_tools_id__id__valves_user_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tools User Valves By Id
      tags:
      - tools
  /api/v1/tools/id/{id}/valves/user/spec:
    get:
      operationId: get_tools_user_valves_spec_by_id_api_v1_tools_id__id__valves_user_spec_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Tools User Valves Spec By Id
      tags:
      - tools
  /api/v1/tools/id/{id}/valves/user/update:
    post:
      operationId: update_tools_user_valves_by_id_api_v1_tools_id__id__valves_user_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Tools User Valves By Id
      tags:
      - tools
  /api/v1/memories/ef:
    get:
      operationId: get_embeddings_api_v1_memories_ef_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Embeddings
      tags:
      - memories
  /api/v1/memories/:
    get:
      operationId: get_memories_api_v1_memories__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MemoryModel"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Memories
      tags:
      - memories
  /api/v1/memories/add:
    post:
      operationId: add_memory_api_v1_memories_add_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddMemoryForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MemoryModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add Memory
      tags:
      - memories
  /api/v1/memories/query:
    post:
      operationId: query_memory_api_v1_memories_query_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryMemoryForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Query Memory
      tags:
      - memories
  /api/v1/memories/reset:
    post:
      operationId: reset_memory_from_vector_db_api_v1_memories_reset_post
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Reset Memory From Vector Db Api V1 Memories Reset
                  Post
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Reset Memory From Vector Db
      tags:
      - memories
  /api/v1/memories/delete/user:
    delete:
      operationId: delete_memory_by_user_id_api_v1_memories_delete_user_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Memory By User Id Api V1 Memories Delete User
                  Delete
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete Memory By User Id
      tags:
      - memories
  /api/v1/memories/{memory_id}/update:
    post:
      operationId: update_memory_by_id_api_v1_memories__memory_id__update_post
      parameters:
      - explode: false
        in: path
        name: memory_id
        required: true
        schema:
          title: Memory Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MemoryUpdateModel"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MemoryModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Memory By Id
      tags:
      - memories
  /api/v1/memories/{memory_id}:
    delete:
      operationId: delete_memory_by_id_api_v1_memories__memory_id__delete
      parameters:
      - explode: false
        in: path
        name: memory_id
        required: true
        schema:
          title: Memory Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Memory By Id Api V1 Memories  Memory Id  Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Memory By Id
      tags:
      - memories
  /api/v1/folders/:
    get:
      operationId: get_folders_api_v1_folders__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FolderModel"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Folders
      tags:
      - folders
    post:
      operationId: create_folder_api_v1_folders__post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FolderForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Folder
      tags:
      - folders
  /api/v1/folders/{id}:
    delete:
      operationId: delete_folder_by_id_api_v1_folders__id__delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Folder By Id
      tags:
      - folders
    get:
      operationId: get_folder_by_id_api_v1_folders__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FolderModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Folder By Id
      tags:
      - folders
  /api/v1/folders/{id}/update:
    post:
      operationId: update_folder_name_by_id_api_v1_folders__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FolderForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Folder Name By Id
      tags:
      - folders
  /api/v1/folders/{id}/update/parent:
    post:
      operationId: update_folder_parent_id_by_id_api_v1_folders__id__update_parent_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FolderParentIdForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Folder Parent Id By Id
      tags:
      - folders
  /api/v1/folders/{id}/update/expanded:
    post:
      operationId: update_folder_is_expanded_by_id_api_v1_folders__id__update_expanded_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FolderIsExpandedForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Folder Is Expanded By Id
      tags:
      - folders
  /api/v1/groups/:
    get:
      operationId: get_groups_api_v1_groups__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/GroupResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Groups
      tags:
      - groups
  /api/v1/groups/create:
    post:
      operationId: create_new_group_api_v1_groups_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Group
      tags:
      - groups
  /api/v1/groups/id/{id}:
    get:
      operationId: get_group_by_id_api_v1_groups_id__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Group By Id
      tags:
      - groups
  /api/v1/groups/id/{id}/update:
    post:
      operationId: update_group_by_id_api_v1_groups_id__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupUpdateForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Group By Id
      tags:
      - groups
  /api/v1/groups/id/{id}/delete:
    delete:
      operationId: delete_group_by_id_api_v1_groups_id__id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Group By Id Api V1 Groups Id  Id  Delete Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Group By Id
      tags:
      - groups
  /api/v1/files/:
    get:
      operationId: list_files_api_v1_files__get
      parameters:
      - explode: true
        in: query
        name: content
        required: false
        schema:
          default: true
          title: Content
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FileModelResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Files
      tags:
      - files
    post:
      operationId: upload_file_api_v1_files__post
      parameters:
      - explode: true
        in: query
        name: process
        required: false
        schema:
          default: true
          title: Process
          type: boolean
        style: form
      - explode: true
        in: query
        name: internal
        required: false
        schema:
          default: false
          title: Internal
          type: boolean
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Body_upload_file_api_v1_files__post"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileModelResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Upload File
      tags:
      - files
  /api/v1/files/search:
    get:
      description: Search for files by filename with support for wildcard patterns.
      operationId: search_files_api_v1_files_search_get
      parameters:
      - description: Filename pattern to search for. Supports wildcards such as '*.txt'
        explode: true
        in: query
        name: filename
        required: true
        schema:
          description: Filename pattern to search for. Supports wildcards such as
            '*.txt'
          title: Filename
          type: string
        style: form
      - explode: true
        in: query
        name: content
        required: false
        schema:
          default: true
          title: Content
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FileModelResponse"
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Search Files
      tags:
      - files
  /api/v1/files/all:
    delete:
      operationId: delete_all_files_api_v1_files_all_delete
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete All Files
      tags:
      - files
  /api/v1/files/{id}:
    delete:
      operationId: delete_file_by_id_api_v1_files__id__delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete File By Id
      tags:
      - files
    get:
      operationId: get_file_by_id_api_v1_files__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get File By Id
      tags:
      - files
  /api/v1/files/{id}/data/content:
    get:
      operationId: get_file_data_content_by_id_api_v1_files__id__data_content_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get File Data Content By Id
      tags:
      - files
  /api/v1/files/{id}/data/content/update:
    post:
      operationId: update_file_data_content_by_id_api_v1_files__id__data_content_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContentForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update File Data Content By Id
      tags:
      - files
  /api/v1/files/{id}/content:
    get:
      operationId: get_file_content_by_id_api_v1_files__id__content_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      - explode: true
        in: query
        name: attachment
        required: false
        schema:
          default: false
          title: Attachment
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get File Content By Id
      tags:
      - files
  /api/v1/files/{id}/content/html:
    get:
      operationId: get_html_file_content_by_id_api_v1_files__id__content_html_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Html File Content By Id
      tags:
      - files
  /api/v1/files/{id}/content/{file_name}:
    get:
      operationId: get_file_content_by_id_api_v1_files__id__content__file_name__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get File Content By Id
      tags:
      - files
  /api/v1/functions/:
    get:
      operationId: get_functions_api_v1_functions__get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FunctionResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Functions
      tags:
      - functions
  /api/v1/functions/export:
    get:
      operationId: get_functions_api_v1_functions_export_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FunctionModel"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Functions
      tags:
      - functions
  /api/v1/functions/load/url:
    post:
      operationId: load_function_from_url_api_v1_functions_load_url_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoadUrlForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Load Function From Url
      tags:
      - functions
  /api/v1/functions/sync:
    post:
      operationId: sync_functions_api_v1_functions_sync_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SyncFunctionsForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Sync Functions
      tags:
      - functions
  /api/v1/functions/create:
    post:
      operationId: create_new_function_api_v1_functions_create_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FunctionForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionResponse"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create New Function
      tags:
      - functions
  /api/v1/functions/id/{id}:
    get:
      operationId: get_function_by_id_api_v1_functions_id__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Function By Id
      tags:
      - functions
  /api/v1/functions/id/{id}/toggle:
    post:
      operationId: toggle_function_by_id_api_v1_functions_id__id__toggle_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Toggle Function By Id
      tags:
      - functions
  /api/v1/functions/id/{id}/toggle/global:
    post:
      operationId: toggle_global_by_id_api_v1_functions_id__id__toggle_global_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Toggle Global By Id
      tags:
      - functions
  /api/v1/functions/id/{id}/update:
    post:
      operationId: update_function_by_id_api_v1_functions_id__id__update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FunctionForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FunctionModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Function By Id
      tags:
      - functions
  /api/v1/functions/id/{id}/delete:
    delete:
      operationId: delete_function_by_id_api_v1_functions_id__id__delete_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Function By Id Api V1 Functions Id  Id  Delete
                  Delete
                type: boolean
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Function By Id
      tags:
      - functions
  /api/v1/functions/id/{id}/valves:
    get:
      operationId: get_function_valves_by_id_api_v1_functions_id__id__valves_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Function Valves By Id
      tags:
      - functions
  /api/v1/functions/id/{id}/valves/spec:
    get:
      operationId: get_function_valves_spec_by_id_api_v1_functions_id__id__valves_spec_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Function Valves Spec By Id
      tags:
      - functions
  /api/v1/functions/id/{id}/valves/update:
    post:
      operationId: update_function_valves_by_id_api_v1_functions_id__id__valves_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Function Valves By Id
      tags:
      - functions
  /api/v1/functions/id/{id}/valves/user:
    get:
      operationId: get_function_user_valves_by_id_api_v1_functions_id__id__valves_user_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Function User Valves By Id
      tags:
      - functions
  /api/v1/functions/id/{id}/valves/user/spec:
    get:
      operationId: get_function_user_valves_spec_by_id_api_v1_functions_id__id__valves_user_spec_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Function User Valves Spec By Id
      tags:
      - functions
  /api/v1/functions/id/{id}/valves/user/update:
    post:
      operationId: update_function_user_valves_by_id_api_v1_functions_id__id__valves_user_update_post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                nullable: true
                type: object
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Function User Valves By Id
      tags:
      - functions
  /api/v1/evaluations/config:
    get:
      operationId: get_config_api_v1_evaluations_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Config
      tags:
      - evaluations
    post:
      operationId: update_config_api_v1_evaluations_config_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConfigForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Config
      tags:
      - evaluations
  /api/v1/evaluations/feedbacks/all:
    delete:
      operationId: delete_all_feedbacks_api_v1_evaluations_feedbacks_all_delete
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete All Feedbacks
      tags:
      - evaluations
    get:
      operationId: get_all_feedbacks_api_v1_evaluations_feedbacks_all_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FeedbackUserResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get All Feedbacks
      tags:
      - evaluations
  /api/v1/evaluations/feedbacks/all/export:
    get:
      operationId: get_all_feedbacks_api_v1_evaluations_feedbacks_all_export_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FeedbackModel"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get All Feedbacks
      tags:
      - evaluations
  /api/v1/evaluations/feedbacks/user:
    get:
      operationId: get_feedbacks_api_v1_evaluations_feedbacks_user_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/FeedbackUserResponse"
                type: array
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Feedbacks
      tags:
      - evaluations
  /api/v1/evaluations/feedbacks:
    delete:
      operationId: delete_feedbacks_api_v1_evaluations_feedbacks_delete
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Delete Feedbacks Api V1 Evaluations Feedbacks Delete
                type: boolean
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Delete Feedbacks
      tags:
      - evaluations
  /api/v1/evaluations/feedback:
    post:
      operationId: create_feedback_api_v1_evaluations_feedback_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Feedback
      tags:
      - evaluations
  /api/v1/evaluations/feedback/{id}:
    delete:
      operationId: delete_feedback_by_id_api_v1_evaluations_feedback__id__delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Delete Feedback By Id
      tags:
      - evaluations
    get:
      operationId: get_feedback_by_id_api_v1_evaluations_feedback__id__get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Feedback By Id
      tags:
      - evaluations
    post:
      operationId: update_feedback_by_id_api_v1_evaluations_feedback__id__post
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          title: Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FeedbackForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackModel"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Feedback By Id
      tags:
      - evaluations
  /api/v1/utils/gravatar:
    get:
      operationId: get_gravatar_api_v1_utils_gravatar_get
      parameters:
      - explode: true
        in: query
        name: email
        required: true
        schema:
          title: Email
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Gravatar
      tags:
      - utils
  /api/v1/utils/code/format:
    post:
      operationId: format_code_api_v1_utils_code_format_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Format Code
      tags:
      - utils
  /api/v1/utils/code/execute:
    post:
      operationId: execute_code_api_v1_utils_code_execute_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CodeForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Execute Code
      tags:
      - utils
  /api/v1/utils/markdown:
    post:
      operationId: get_html_from_markdown_api_v1_utils_markdown_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MarkdownForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Html From Markdown
      tags:
      - utils
  /api/v1/utils/pdf:
    post:
      operationId: download_chat_as_pdf_api_v1_utils_pdf_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatTitleMessagesForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Download Chat As Pdf
      tags:
      - utils
  /api/v1/utils/db/download:
    get:
      operationId: download_db_api_v1_utils_db_download_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Download Db
      tags:
      - utils
  /api/v1/utils/litellm/config:
    get:
      operationId: download_litellm_config_yaml_api_v1_utils_litellm_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Download Litellm Config Yaml
      tags:
      - utils
  /api/models:
    get:
      operationId: get_models_api_models_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Models
  /api/models/base:
    get:
      operationId: get_base_models_api_models_base_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Base Models
  /api/embeddings:
    post:
      description: |-
        OpenAI-compatible embeddings endpoint.

        This handler:
          - Performs user/model checks and dispatches to the correct backend.
          - Supports OpenAI, Ollama, arena models, pipelines, and any compatible provider.

        Args:
            request (Request): Request context.
            form_data (dict): OpenAI-like payload (e.g., {"model": "...", "input": [...]})
            user (UserModel): Authenticated user.

        Returns:
            dict: OpenAI-compatible embeddings response.
      operationId: embeddings_api_embeddings_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Embeddings
  /api/chat/completions:
    post:
      operationId: chat_completion_api_chat_completions_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Chat Completion
  /api/chat/completed:
    post:
      operationId: chat_completed_api_chat_completed_post
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Chat Completed
  /api/chat/actions/{action_id}:
    post:
      operationId: chat_action_api_chat_actions__action_id__post
      parameters:
      - explode: false
        in: path
        name: action_id
        required: true
        schema:
          title: Action Id
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Form Data
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Chat Action
  /api/tasks/stop/{task_id}:
    post:
      operationId: stop_task_endpoint_api_tasks_stop__task_id__post
      parameters:
      - explode: false
        in: path
        name: task_id
        required: true
        schema:
          title: Task Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Stop Task Endpoint
  /api/tasks:
    get:
      operationId: list_tasks_endpoint_api_tasks_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: List Tasks Endpoint
  /api/tasks/chat/{chat_id}:
    get:
      operationId: list_tasks_by_chat_id_endpoint_api_tasks_chat__chat_id__get
      parameters:
      - explode: false
        in: path
        name: chat_id
        required: true
        schema:
          title: Chat Id
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Tasks By Chat Id Endpoint
  /api/config:
    get:
      operationId: get_app_config_api_config_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get App Config
  /api/webhook:
    get:
      operationId: get_webhook_url_api_webhook_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Webhook Url
    post:
      operationId: update_webhook_url_api_webhook_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UrlForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Update Webhook Url
  /api/version:
    get:
      operationId: get_app_version_api_version_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get App Version
  /api/version/updates:
    get:
      operationId: get_app_latest_release_version_api_version_updates_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get App Latest Release Version
  /api/changelog:
    get:
      operationId: get_app_changelog_api_changelog_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get App Changelog
  /api/usage:
    get:
      description: |-
        Get current usage statistics for Open WebUI.
        This is an experimental endpoint and subject to change.
      operationId: get_current_usage_api_usage_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      security:
      - HTTPBearer: []
      summary: Get Current Usage
  /oauth/{provider}/login:
    get:
      operationId: oauth_login_oauth__provider__login_get
      parameters:
      - explode: false
        in: path
        name: provider
        required: true
        schema:
          title: Provider
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Oauth Login
  /oauth/{provider}/callback:
    get:
      operationId: oauth_callback_oauth__provider__callback_get
      parameters:
      - explode: false
        in: path
        name: provider
        required: true
        schema:
          title: Provider
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Oauth Callback
  /manifest.json:
    get:
      operationId: get_manifest_json_manifest_json_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Manifest Json
  /opensearch.xml:
    get:
      operationId: get_opensearch_xml_opensearch_xml_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Get Opensearch Xml
  /health:
    get:
      operationId: healthcheck_health_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Healthcheck
  /health/db:
    get:
      operationId: healthcheck_with_db_health_db_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Healthcheck With Db
  /cache/{path}:
    get:
      operationId: serve_cache_file_cache__path__get
      parameters:
      - explode: false
        in: path
        name: path
        required: true
        schema:
          title: Path
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Serve Cache File
components:
  schemas:
    AddMemoryForm:
      example:
        content: content
      properties:
        content:
          title: Content
          type: string
      required:
      - content
      title: AddMemoryForm
    AddPipelineForm:
      example:
        urlIdx: 0
        url: url
      properties:
        url:
          title: Url
          type: string
        urlIdx:
          title: Urlidx
          type: integer
      required:
      - url
      - urlIdx
      title: AddPipelineForm
    AddUserForm:
      example:
        password: password
        role: role
        name: name
        profile_image_url: profile_image_url
        email: email
      properties:
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
        profile_image_url:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
      required:
      - email
      - name
      - password
      title: AddUserForm
    AdminConfig:
      example:
        SHOW_ADMIN_DETAILS: true
        ENABLE_USER_WEBHOOKS: true
        ENABLE_API_KEY: true
        ENABLE_CHANNELS: true
        JWT_EXPIRES_IN: JWT_EXPIRES_IN
        ENABLE_NOTES: true
        WEBUI_URL: WEBUI_URL
        DEFAULT_USER_ROLE: DEFAULT_USER_ROLE
        ENABLE_MESSAGE_RATING: true
        PENDING_USER_OVERLAY_CONTENT: PENDING_USER_OVERLAY_CONTENT
        API_KEY_ALLOWED_ENDPOINTS: API_KEY_ALLOWED_ENDPOINTS
        ENABLE_COMMUNITY_SHARING: true
        ENABLE_SIGNUP: true
        PENDING_USER_OVERLAY_TITLE: PENDING_USER_OVERLAY_TITLE
        ENABLE_API_KEY_ENDPOINT_RESTRICTIONS: true
        RESPONSE_WATERMARK: RESPONSE_WATERMARK
      properties:
        SHOW_ADMIN_DETAILS:
          title: Show Admin Details
          type: boolean
        WEBUI_URL:
          title: Webui Url
          type: string
        ENABLE_SIGNUP:
          title: Enable Signup
          type: boolean
        ENABLE_API_KEY:
          title: Enable Api Key
          type: boolean
        ENABLE_API_KEY_ENDPOINT_RESTRICTIONS:
          title: Enable Api Key Endpoint Restrictions
          type: boolean
        API_KEY_ALLOWED_ENDPOINTS:
          title: Api Key Allowed Endpoints
          type: string
        DEFAULT_USER_ROLE:
          title: Default User Role
          type: string
        JWT_EXPIRES_IN:
          title: Jwt Expires In
          type: string
        ENABLE_COMMUNITY_SHARING:
          title: Enable Community Sharing
          type: boolean
        ENABLE_MESSAGE_RATING:
          title: Enable Message Rating
          type: boolean
        ENABLE_CHANNELS:
          title: Enable Channels
          type: boolean
        ENABLE_NOTES:
          title: Enable Notes
          type: boolean
        ENABLE_USER_WEBHOOKS:
          title: Enable User Webhooks
          type: boolean
        PENDING_USER_OVERLAY_TITLE:
          nullable: true
          type: string
        PENDING_USER_OVERLAY_CONTENT:
          nullable: true
          type: string
        RESPONSE_WATERMARK:
          nullable: true
          type: string
      required:
      - API_KEY_ALLOWED_ENDPOINTS
      - DEFAULT_USER_ROLE
      - ENABLE_API_KEY
      - ENABLE_API_KEY_ENDPOINT_RESTRICTIONS
      - ENABLE_CHANNELS
      - ENABLE_COMMUNITY_SHARING
      - ENABLE_MESSAGE_RATING
      - ENABLE_NOTES
      - ENABLE_SIGNUP
      - ENABLE_USER_WEBHOOKS
      - JWT_EXPIRES_IN
      - SHOW_ADMIN_DETAILS
      - WEBUI_URL
      title: AdminConfig
    ApiKey:
      example:
        api_key: api_key
      properties:
        api_key:
          nullable: true
          type: string
      title: ApiKey
    AudioConfigUpdateForm:
      example:
        tts:
          AZURE_SPEECH_OUTPUT_FORMAT: AZURE_SPEECH_OUTPUT_FORMAT
          VOICE: VOICE
          AZURE_SPEECH_BASE_URL: AZURE_SPEECH_BASE_URL
          OPENAI_API_BASE_URL: OPENAI_API_BASE_URL
          API_KEY: API_KEY
          SPLIT_ON: SPLIT_ON
          AZURE_SPEECH_REGION: AZURE_SPEECH_REGION
          ENGINE: ENGINE
          OPENAI_API_KEY: OPENAI_API_KEY
          MODEL: MODEL
        stt:
          SUPPORTED_CONTENT_TYPES:
          - SUPPORTED_CONTENT_TYPES
          - SUPPORTED_CONTENT_TYPES
          AZURE_MAX_SPEAKERS: AZURE_MAX_SPEAKERS
          OPENAI_API_BASE_URL: OPENAI_API_BASE_URL
          AZURE_API_KEY: AZURE_API_KEY
          ENGINE: ENGINE
          DEEPGRAM_API_KEY: DEEPGRAM_API_KEY
          AZURE_REGION: AZURE_REGION
          WHISPER_MODEL: WHISPER_MODEL
          AZURE_BASE_URL: AZURE_BASE_URL
          OPENAI_API_KEY: OPENAI_API_KEY
          MODEL: MODEL
          AZURE_LOCALES: AZURE_LOCALES
      properties:
        tts:
          $ref: "#/components/schemas/TTSConfigForm"
        stt:
          $ref: "#/components/schemas/STTConfigForm"
      required:
      - stt
      - tts
      title: AudioConfigUpdateForm
    Automatic1111ConfigForm:
      properties:
        AUTOMATIC1111_BASE_URL:
          title: Automatic1111 Base Url
          type: string
        AUTOMATIC1111_API_AUTH:
          title: Automatic1111 Api Auth
          type: string
        AUTOMATIC1111_CFG_SCALE:
          $ref: "#/components/schemas/Automatic1111_Cfg_Scale"
        AUTOMATIC1111_SAMPLER:
          nullable: true
          type: string
        AUTOMATIC1111_SCHEDULER:
          nullable: true
          type: string
      required:
      - AUTOMATIC1111_API_AUTH
      - AUTOMATIC1111_BASE_URL
      - AUTOMATIC1111_CFG_SCALE
      - AUTOMATIC1111_SAMPLER
      - AUTOMATIC1111_SCHEDULER
      title: Automatic1111ConfigForm
    AzureOpenAIConfigForm:
      example:
        version: version
        url: url
        key: key
      properties:
        url:
          title: Url
          type: string
        key:
          title: Key
          type: string
        version:
          title: Version
          type: string
      required:
      - key
      - url
      - version
      title: AzureOpenAIConfigForm
    BannerModel:
      example:
        dismissible: true
        id: id
        type: type
        title: title
        content: content
        timestamp: 0
      properties:
        id:
          title: Id
          type: string
        type:
          title: Type
          type: string
        title:
          nullable: true
          type: string
        content:
          title: Content
          type: string
        dismissible:
          title: Dismissible
          type: boolean
        timestamp:
          title: Timestamp
          type: integer
      required:
      - content
      - dismissible
      - id
      - timestamp
      - type
      title: BannerModel
    BatchProcessFilesForm:
      example:
        files:
        - path: path
          filename: filename
          data: "{}"
          updated_at: 6
          user_id: user_id
          meta: "{}"
          access_control: "{}"
          created_at: 0
          id: id
          hash: hash
        - path: path
          filename: filename
          data: "{}"
          updated_at: 6
          user_id: user_id
          meta: "{}"
          access_control: "{}"
          created_at: 0
          id: id
          hash: hash
        collection_name: collection_name
      properties:
        files:
          items:
            $ref: "#/components/schemas/FileModel"
          type: array
        collection_name:
          title: Collection Name
          type: string
      required:
      - collection_name
      - files
      title: BatchProcessFilesForm
    BatchProcessFilesResponse:
      example:
        results:
        - file_id: file_id
          error: error
          status: status
        - file_id: file_id
          error: error
          status: status
        errors:
        - file_id: file_id
          error: error
          status: status
        - file_id: file_id
          error: error
          status: status
      properties:
        results:
          items:
            $ref: "#/components/schemas/BatchProcessFilesResult"
          type: array
        errors:
          items:
            $ref: "#/components/schemas/BatchProcessFilesResult"
          type: array
      required:
      - errors
      - results
      title: BatchProcessFilesResponse
    BatchProcessFilesResult:
      example:
        file_id: file_id
        error: error
        status: status
      properties:
        file_id:
          title: File Id
          type: string
        status:
          title: Status
          type: string
        error:
          nullable: true
          type: string
      required:
      - file_id
      - status
      title: BatchProcessFilesResult
    Body_transcription_api_v1_audio_transcriptions_post:
      properties:
        file:
          format: binary
          title: File
          type: string
        language:
          nullable: true
          type: string
      required:
      - file
      title: Body_transcription_api_v1_audio_transcriptions_post
    Body_upload_file_api_v1_files__post:
      properties:
        file:
          format: binary
          title: File
          type: string
        metadata:
          $ref: "#/components/schemas/Metadata"
      required:
      - file
      title: Body_upload_file_api_v1_files__post
    Body_upload_model_ollama_models_upload__url_idx__post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_upload_model_ollama_models_upload__url_idx__post
    Body_upload_model_ollama_models_upload_post:
      properties:
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      title: Body_upload_model_ollama_models_upload_post
    Body_upload_pipeline_api_v1_pipelines_upload_post:
      properties:
        urlIdx:
          title: Urlidx
          type: integer
        file:
          format: binary
          title: File
          type: string
      required:
      - file
      - urlIdx
      title: Body_upload_pipeline_api_v1_pipelines_upload_post
    ChannelForm:
      example:
        data: "{}"
        meta: "{}"
        access_control: "{}"
        name: name
        description: description
      properties:
        name:
          title: Name
          type: string
        description:
          nullable: true
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
      required:
      - name
      title: ChannelForm
    ChannelModel:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        meta: "{}"
        access_control: "{}"
        name: name
        description: description
        created_at: 0
        id: id
        type: type
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        type:
          nullable: true
          type: string
        name:
          title: Name
          type: string
        description:
          nullable: true
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - created_at
      - id
      - name
      - updated_at
      - user_id
      title: ChannelModel
    ChatFolderIdForm:
      example:
        folder_id: folder_id
      properties:
        folder_id:
          nullable: true
          type: string
      title: ChatFolderIdForm
    ChatForm:
      example:
        chat: "{}"
      properties:
        chat:
          title: Chat
          type: object
      required:
      - chat
      title: ChatForm
    ChatImportForm:
      example:
        pinned: true
        chat: "{}"
        meta: "{}"
        folder_id: folder_id
      properties:
        chat:
          title: Chat
          type: object
        meta:
          nullable: true
          type: object
        pinned:
          nullable: true
          type: boolean
        folder_id:
          nullable: true
          type: string
      required:
      - chat
      title: ChatImportForm
    ChatPermissions:
      example:
        temporary: true
        controls: true
        edit: true
        system_prompt: true
        file_upload: true
        delete: true
        call: true
        stt: true
        tts: true
        temporary_enforced: false
        multiple_models: true
        share: true
        export: true
      properties:
        controls:
          default: true
          title: Controls
          type: boolean
        system_prompt:
          default: true
          title: System Prompt
          type: boolean
        file_upload:
          default: true
          title: File Upload
          type: boolean
        delete:
          default: true
          title: Delete
          type: boolean
        edit:
          default: true
          title: Edit
          type: boolean
        share:
          default: true
          title: Share
          type: boolean
        export:
          default: true
          title: Export
          type: boolean
        stt:
          default: true
          title: Stt
          type: boolean
        tts:
          default: true
          title: Tts
          type: boolean
        call:
          default: true
          title: Call
          type: boolean
        multiple_models:
          default: true
          title: Multiple Models
          type: boolean
        temporary:
          default: true
          title: Temporary
          type: boolean
        temporary_enforced:
          default: false
          title: Temporary Enforced
          type: boolean
      title: ChatPermissions
    ChatResponse:
      example:
        share_id: share_id
        archived: true
        pinned: true
        updated_at: 0
        user_id: user_id
        chat: "{}"
        meta: "{}"
        created_at: 6
        id: id
        title: title
        folder_id: folder_id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        title:
          title: Title
          type: string
        chat:
          title: Chat
          type: object
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
        share_id:
          nullable: true
          type: string
        archived:
          title: Archived
          type: boolean
        pinned:
          nullable: true
          type: boolean
        meta:
          default: {}
          title: Meta
          type: object
        folder_id:
          nullable: true
          type: string
      required:
      - archived
      - chat
      - created_at
      - id
      - title
      - updated_at
      - user_id
      title: ChatResponse
    ChatTitleIdResponse:
      example:
        updated_at: 0
        created_at: 6
        id: id
        title: title
      properties:
        id:
          title: Id
          type: string
        title:
          title: Title
          type: string
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - id
      - title
      - updated_at
      title: ChatTitleIdResponse
    ChatTitleMessagesForm:
      example:
        messages:
        - "{}"
        - "{}"
        title: title
      properties:
        title:
          title: Title
          type: string
        messages:
          items:
            type: object
          type: array
      required:
      - messages
      - title
      title: ChatTitleMessagesForm
    CloneForm:
      example:
        title: title
      properties:
        title:
          nullable: true
          type: string
      title: CloneForm
    CodeForm:
      example:
        code: code
      properties:
        code:
          title: Code
          type: string
      required:
      - code
      title: CodeForm
    CodeInterpreterConfigForm:
      example:
        CODE_INTERPRETER_JUPYTER_AUTH_TOKEN: CODE_INTERPRETER_JUPYTER_AUTH_TOKEN
        CODE_EXECUTION_JUPYTER_AUTH: CODE_EXECUTION_JUPYTER_AUTH
        CODE_EXECUTION_JUPYTER_AUTH_PASSWORD: CODE_EXECUTION_JUPYTER_AUTH_PASSWORD
        CODE_EXECUTION_ENGINE: CODE_EXECUTION_ENGINE
        CODE_EXECUTION_JUPYTER_AUTH_TOKEN: CODE_EXECUTION_JUPYTER_AUTH_TOKEN
        CODE_EXECUTION_JUPYTER_TIMEOUT: 0
        CODE_INTERPRETER_JUPYTER_AUTH: CODE_INTERPRETER_JUPYTER_AUTH
        CODE_EXECUTION_JUPYTER_URL: CODE_EXECUTION_JUPYTER_URL
        ENABLE_CODE_INTERPRETER: true
        CODE_INTERPRETER_JUPYTER_TIMEOUT: 6
        ENABLE_CODE_EXECUTION: true
        CODE_INTERPRETER_PROMPT_TEMPLATE: CODE_INTERPRETER_PROMPT_TEMPLATE
        CODE_INTERPRETER_JUPYTER_URL: CODE_INTERPRETER_JUPYTER_URL
        CODE_INTERPRETER_JUPYTER_AUTH_PASSWORD: CODE_INTERPRETER_JUPYTER_AUTH_PASSWORD
        CODE_INTERPRETER_ENGINE: CODE_INTERPRETER_ENGINE
      properties:
        ENABLE_CODE_EXECUTION:
          title: Enable Code Execution
          type: boolean
        CODE_EXECUTION_ENGINE:
          title: Code Execution Engine
          type: string
        CODE_EXECUTION_JUPYTER_URL:
          nullable: true
          type: string
        CODE_EXECUTION_JUPYTER_AUTH:
          nullable: true
          type: string
        CODE_EXECUTION_JUPYTER_AUTH_TOKEN:
          nullable: true
          type: string
        CODE_EXECUTION_JUPYTER_AUTH_PASSWORD:
          nullable: true
          type: string
        CODE_EXECUTION_JUPYTER_TIMEOUT:
          nullable: true
          type: integer
        ENABLE_CODE_INTERPRETER:
          title: Enable Code Interpreter
          type: boolean
        CODE_INTERPRETER_ENGINE:
          title: Code Interpreter Engine
          type: string
        CODE_INTERPRETER_PROMPT_TEMPLATE:
          nullable: true
          type: string
        CODE_INTERPRETER_JUPYTER_URL:
          nullable: true
          type: string
        CODE_INTERPRETER_JUPYTER_AUTH:
          nullable: true
          type: string
        CODE_INTERPRETER_JUPYTER_AUTH_TOKEN:
          nullable: true
          type: string
        CODE_INTERPRETER_JUPYTER_AUTH_PASSWORD:
          nullable: true
          type: string
        CODE_INTERPRETER_JUPYTER_TIMEOUT:
          nullable: true
          type: integer
      required:
      - CODE_EXECUTION_ENGINE
      - CODE_EXECUTION_JUPYTER_AUTH
      - CODE_EXECUTION_JUPYTER_AUTH_PASSWORD
      - CODE_EXECUTION_JUPYTER_AUTH_TOKEN
      - CODE_EXECUTION_JUPYTER_TIMEOUT
      - CODE_EXECUTION_JUPYTER_URL
      - CODE_INTERPRETER_ENGINE
      - CODE_INTERPRETER_JUPYTER_AUTH
      - CODE_INTERPRETER_JUPYTER_AUTH_PASSWORD
      - CODE_INTERPRETER_JUPYTER_AUTH_TOKEN
      - CODE_INTERPRETER_JUPYTER_TIMEOUT
      - CODE_INTERPRETER_JUPYTER_URL
      - CODE_INTERPRETER_PROMPT_TEMPLATE
      - ENABLE_CODE_EXECUTION
      - ENABLE_CODE_INTERPRETER
      title: CodeInterpreterConfigForm
    ComfyUIConfigForm:
      properties:
        COMFYUI_BASE_URL:
          title: Comfyui Base Url
          type: string
        COMFYUI_API_KEY:
          title: Comfyui Api Key
          type: string
        COMFYUI_WORKFLOW:
          title: Comfyui Workflow
          type: string
        COMFYUI_WORKFLOW_NODES:
          items:
            type: object
          type: array
      required:
      - COMFYUI_API_KEY
      - COMFYUI_BASE_URL
      - COMFYUI_WORKFLOW
      - COMFYUI_WORKFLOW_NODES
      title: ComfyUIConfigForm
    ContentForm:
      example:
        content: content
      properties:
        content:
          title: Content
          type: string
      required:
      - content
      title: ContentForm
    CopyModelForm:
      example:
        destination: destination
        source: source
      properties:
        source:
          title: Source
          type: string
        destination:
          title: Destination
          type: string
      required:
      - destination
      - source
      title: CopyModelForm
    CreateModelForm:
      additionalProperties: {}
      example:
        path: Path
        stream: true
        model: Model
      properties:
        model:
          $ref: "#/components/schemas/Model"
        stream:
          $ref: "#/components/schemas/Stream"
        path:
          $ref: "#/components/schemas/Path"
      title: CreateModelForm
    DeleteForm:
      example:
        file_id: file_id
        collection_name: collection_name
      properties:
        collection_name:
          title: Collection Name
          type: string
        file_id:
          title: File Id
          type: string
      required:
      - collection_name
      - file_id
      title: DeleteForm
    DeletePipelineForm:
      example:
        urlIdx: 0
        id: id
      properties:
        id:
          title: Id
          type: string
        urlIdx:
          title: Urlidx
          type: integer
      required:
      - id
      - urlIdx
      title: DeletePipelineForm
    DirectConnectionsConfigForm:
      example:
        ENABLE_DIRECT_CONNECTIONS: true
      properties:
        ENABLE_DIRECT_CONNECTIONS:
          title: Enable Direct Connections
          type: boolean
      required:
      - ENABLE_DIRECT_CONNECTIONS
      title: DirectConnectionsConfigForm
    EmbeddingModelUpdateForm:
      example:
        openai_config:
          url: url
          key: key
        embedding_model: embedding_model
        azure_openai_config:
          version: version
          url: url
          key: key
        embedding_batch_size: 0
        ollama_config:
          url: url
          key: key
        embedding_engine: embedding_engine
      properties:
        openai_config:
          $ref: "#/components/schemas/open_webui__routers__retrieval__OpenAIConfigForm"
        ollama_config:
          $ref: "#/components/schemas/open_webui__routers__retrieval__OllamaConfigForm"
        azure_openai_config:
          $ref: "#/components/schemas/AzureOpenAIConfigForm"
        embedding_engine:
          title: Embedding Engine
          type: string
        embedding_model:
          title: Embedding Model
          type: string
        embedding_batch_size:
          nullable: true
          type: integer
      required:
      - embedding_engine
      - embedding_model
      title: EmbeddingModelUpdateForm
    EventForm:
      example:
        data: "{}"
        type: type
      properties:
        type:
          title: Type
          type: string
        data:
          title: Data
          type: object
      required:
      - data
      - type
      title: EventForm
    FeaturesPermissions:
      example:
        image_generation: true
        web_search: true
        notes: true
        code_interpreter: true
        direct_tool_servers: false
      properties:
        direct_tool_servers:
          default: false
          title: Direct Tool Servers
          type: boolean
        web_search:
          default: true
          title: Web Search
          type: boolean
        image_generation:
          default: true
          title: Image Generation
          type: boolean
        code_interpreter:
          default: true
          title: Code Interpreter
          type: boolean
        notes:
          default: true
          title: Notes
          type: boolean
      title: FeaturesPermissions
    FeedbackForm:
      additionalProperties: {}
      example:
        data:
          reason: Reason
          sibling_model_ids:
          - Sibling_Model_Ids
          - Sibling_Model_Ids
          rating: 0
          comment: Comment
          model_id: Model_Id
        meta: "{}"
        type: type
        snapshot:
          chat: "{}"
      properties:
        type:
          title: Type
        data:
          $ref: "#/components/schemas/FeedbackForm_data"
        meta:
          $ref: "#/components/schemas/Meta"
        snapshot:
          $ref: "#/components/schemas/FeedbackForm_snapshot"
      required:
      - type
      title: FeedbackForm
    FeedbackModel:
      example:
        data: "{}"
        updated_at: 1
        user_id: user_id
        meta: "{}"
        created_at: 6
        id: id
        type: type
        version: 0
        snapshot: "{}"
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        version:
          title: Version
          type: integer
        type:
          title: Type
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        snapshot:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - created_at
      - id
      - type
      - updated_at
      - user_id
      - version
      title: FeedbackModel
    FeedbackUserResponse:
      example:
        data: "{}"
        updated_at: 1
        user_id: user_id
        meta: "{}"
        created_at: 6
        id: id
        type: type
        version: 0
        user:
          role: pending
          updated_at: 5
          last_active_at: 5
          name: name
          created_at: 2
          id: id
          email: email
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        version:
          title: Version
          type: integer
        type:
          title: Type
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        user:
          $ref: "#/components/schemas/open_webui__routers__evaluations__UserResponse"
      required:
      - created_at
      - id
      - type
      - updated_at
      - user_id
      - version
      title: FeedbackUserResponse
    FileMeta:
      additionalProperties: {}
      example:
        content_type: Content_Type
        size: 0
        name: Name
      properties:
        name:
          $ref: "#/components/schemas/Name"
        content_type:
          $ref: "#/components/schemas/Content_Type"
        size:
          $ref: "#/components/schemas/Size"
      title: FileMeta
    FileMetadataResponse:
      example:
        updated_at: 5
        meta: "{}"
        created_at: 1
        id: id
      properties:
        id:
          title: Id
          type: string
        meta:
          title: Meta
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - created_at
      - id
      - meta
      - updated_at
      title: FileMetadataResponse
    FileModel:
      example:
        path: path
        filename: filename
        data: "{}"
        updated_at: 6
        user_id: user_id
        meta: "{}"
        access_control: "{}"
        created_at: 0
        id: id
        hash: hash
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        hash:
          nullable: true
          type: string
        filename:
          title: Filename
          type: string
        path:
          nullable: true
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
        created_at:
          nullable: true
          type: integer
        updated_at:
          nullable: true
          type: integer
      required:
      - created_at
      - filename
      - id
      - updated_at
      - user_id
      title: FileModel
    FileModelResponse:
      additionalProperties: {}
      example:
        filename: filename
        data: "{}"
        updated_at: 1
        user_id: user_id
        meta:
          content_type: Content_Type
          size: 0
          name: Name
        created_at: 6
        id: id
        hash: Hash
      properties:
        id:
          title: Id
        user_id:
          title: User Id
        hash:
          $ref: "#/components/schemas/Hash"
        filename:
          title: Filename
        data:
          $ref: "#/components/schemas/Data"
        meta:
          $ref: "#/components/schemas/FileMeta"
        created_at:
          title: Created At
        updated_at:
          title: Updated At
      required:
      - created_at
      - filename
      - id
      - meta
      - updated_at
      - user_id
      title: FileModelResponse
    FolderForm:
      additionalProperties: {}
      example:
        name: name
      properties:
        name:
          title: Name
      required:
      - name
      title: FolderForm
    FolderIsExpandedForm:
      example:
        is_expanded: true
      properties:
        is_expanded:
          title: Is Expanded
          type: boolean
      required:
      - is_expanded
      title: FolderIsExpandedForm
    FolderModel:
      example:
        is_expanded: false
        updated_at: 6
        user_id: user_id
        parent_id: parent_id
        meta: "{}"
        name: name
        created_at: 0
        id: id
        items: "{}"
      properties:
        id:
          title: Id
          type: string
        parent_id:
          nullable: true
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        items:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        is_expanded:
          default: false
          title: Is Expanded
          type: boolean
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - created_at
      - id
      - name
      - updated_at
      - user_id
      title: FolderModel
    FolderParentIdForm:
      example:
        parent_id: parent_id
      properties:
        parent_id:
          nullable: true
          type: string
      title: FolderParentIdForm
    FunctionForm:
      example:
        meta:
          manifest: "{}"
          description: description
        name: name
        id: id
        content: content
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        content:
          title: Content
          type: string
        meta:
          $ref: "#/components/schemas/FunctionMeta"
      required:
      - content
      - id
      - meta
      - name
      title: FunctionForm
    FunctionMeta:
      example:
        manifest: "{}"
        description: description
      properties:
        description:
          nullable: true
          type: string
        manifest:
          nullable: true
          type: object
      title: FunctionMeta
    FunctionModel:
      example:
        is_active: false
        updated_at: 0
        user_id: user_id
        meta:
          manifest: "{}"
          description: description
        name: name
        is_global: false
        created_at: 6
        id: id
        type: type
        content: content
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        type:
          title: Type
          type: string
        content:
          title: Content
          type: string
        meta:
          $ref: "#/components/schemas/FunctionMeta"
        is_active:
          default: false
          title: Is Active
          type: boolean
        is_global:
          default: false
          title: Is Global
          type: boolean
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - content
      - created_at
      - id
      - meta
      - name
      - type
      - updated_at
      - user_id
      title: FunctionModel
    FunctionResponse:
      example:
        is_active: true
        updated_at: 0
        user_id: user_id
        meta:
          manifest: "{}"
          description: description
        name: name
        is_global: true
        created_at: 6
        id: id
        type: type
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        type:
          title: Type
          type: string
        name:
          title: Name
          type: string
        meta:
          $ref: "#/components/schemas/FunctionMeta"
        is_active:
          title: Is Active
          type: boolean
        is_global:
          title: Is Global
          type: boolean
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - id
      - is_active
      - is_global
      - meta
      - name
      - type
      - updated_at
      - user_id
      title: FunctionResponse
    GeminiConfigForm:
      properties:
        GEMINI_API_BASE_URL:
          title: Gemini Api Base Url
          type: string
        GEMINI_API_KEY:
          title: Gemini Api Key
          type: string
      required:
      - GEMINI_API_BASE_URL
      - GEMINI_API_KEY
      title: GeminiConfigForm
    GenerateCompletionForm:
      example:
        template: template
        images:
        - images
        - images
        system: system
        stream: true
        format: "{}"
        options: "{}"
        context:
        - 0
        - 0
        raw: true
        model: model
        keep_alive: 6
        suffix: suffix
        prompt: prompt
      properties:
        model:
          title: Model
          type: string
        prompt:
          title: Prompt
          type: string
        suffix:
          nullable: true
          type: string
        images:
          items:
            type: string
          nullable: true
          type: array
        format:
          $ref: "#/components/schemas/Format"
        options:
          nullable: true
          type: object
        system:
          nullable: true
          type: string
        template:
          nullable: true
          type: string
        context:
          items:
            type: integer
          nullable: true
          type: array
        stream:
          nullable: true
          type: boolean
        raw:
          nullable: true
          type: boolean
        keep_alive:
          $ref: "#/components/schemas/Keep_Alive"
      required:
      - model
      - prompt
      title: GenerateCompletionForm
    GenerateEmbedForm:
      example:
        input:
        - Input
        - Input
        truncate: true
        options: "{}"
        model: model
        keep_alive: 0
      properties:
        model:
          title: Model
          type: string
        input:
          $ref: "#/components/schemas/Input"
        truncate:
          nullable: true
          type: boolean
        options:
          nullable: true
          type: object
        keep_alive:
          $ref: "#/components/schemas/Keep_Alive"
      required:
      - input
      - model
      title: GenerateEmbedForm
    GenerateEmbeddingsForm:
      example:
        options: "{}"
        model: model
        keep_alive: 0
        prompt: prompt
      properties:
        model:
          title: Model
          type: string
        prompt:
          title: Prompt
          type: string
        options:
          nullable: true
          type: object
        keep_alive:
          $ref: "#/components/schemas/Keep_Alive"
      required:
      - model
      - prompt
      title: GenerateEmbeddingsForm
    GenerateImageForm:
      example:
        size: size
        negative_prompt: negative_prompt
        model: model
        prompt: prompt
        "n": 0
      properties:
        model:
          nullable: true
          type: string
        prompt:
          title: Prompt
          type: string
        size:
          nullable: true
          type: string
        "n":
          default: 1
          title: "N"
          type: integer
        negative_prompt:
          nullable: true
          type: string
      required:
      - prompt
      title: GenerateImageForm
    GroupForm:
      example:
        permissions: "{}"
        name: name
        description: description
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        permissions:
          nullable: true
          type: object
      required:
      - description
      - name
      title: GroupForm
    GroupResponse:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        permissions: "{}"
        meta: "{}"
        user_ids:
        - user_ids
        - user_ids
        name: name
        description: description
        created_at: 0
        id: id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        permissions:
          nullable: true
          type: object
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        user_ids:
          default: []
          items:
            type: string
          type: array
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - created_at
      - description
      - id
      - name
      - updated_at
      - user_id
      title: GroupResponse
    GroupUpdateForm:
      example:
        permissions: "{}"
        user_ids:
        - user_ids
        - user_ids
        name: name
        description: description
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        permissions:
          nullable: true
          type: object
        user_ids:
          items:
            type: string
          nullable: true
          type: array
      required:
      - description
      - name
      title: GroupUpdateForm
    HTTPValidationError:
      example:
        detail:
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
        - msg: msg
          loc:
          - ValidationError_loc_inner
          - ValidationError_loc_inner
          type: type
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          type: array
      title: HTTPValidationError
    ImageConfigForm:
      example:
        IMAGE_STEPS: 0
        IMAGE_SIZE: IMAGE_SIZE
        MODEL: MODEL
      properties:
        MODEL:
          title: Model
          type: string
        IMAGE_SIZE:
          title: Image Size
          type: string
        IMAGE_STEPS:
          title: Image Steps
          type: integer
      required:
      - IMAGE_SIZE
      - IMAGE_STEPS
      - MODEL
      title: ImageConfigForm
    ImportConfigForm:
      example:
        config: "{}"
      properties:
        config:
          title: Config
          type: object
      required:
      - config
      title: ImportConfigForm
    KnowledgeFileIdForm:
      example:
        file_id: file_id
      properties:
        file_id:
          title: File Id
          type: string
      required:
      - file_id
      title: KnowledgeFileIdForm
    KnowledgeFilesResponse:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        meta: "{}"
        access_control: "{}"
        name: name
        description: description
        created_at: 0
        files:
        - updated_at: 5
          meta: "{}"
          created_at: 1
          id: id
        - updated_at: 5
          meta: "{}"
          created_at: 1
          id: id
        id: id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        files:
          items:
            $ref: "#/components/schemas/FileMetadataResponse"
          type: array
      required:
      - created_at
      - description
      - files
      - id
      - name
      - updated_at
      - user_id
      title: KnowledgeFilesResponse
    KnowledgeForm:
      example:
        data: "{}"
        access_control: "{}"
        name: name
        description: description
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        data:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
      required:
      - description
      - name
      title: KnowledgeForm
    KnowledgeResponse:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        meta: "{}"
        access_control: "{}"
        name: name
        description: description
        created_at: 0
        files:
        - updated_at: 5
          meta: "{}"
          created_at: 1
          id: id
        - updated_at: 5
          meta: "{}"
          created_at: 1
          id: id
        id: id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        files:
          items:
            $ref: "#/components/schemas/KnowledgeResponse_files_inner"
          nullable: true
          type: array
      required:
      - created_at
      - description
      - id
      - name
      - updated_at
      - user_id
      title: KnowledgeResponse
    KnowledgeUserResponse:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        meta: "{}"
        access_control: "{}"
        name: name
        description: description
        created_at: 0
        files:
        - updated_at: 5
          meta: "{}"
          created_at: 1
          id: id
        - updated_at: 5
          meta: "{}"
          created_at: 1
          id: id
        id: id
        user:
          role: role
          name: name
          profile_image_url: profile_image_url
          id: id
          email: email
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        user:
          $ref: "#/components/schemas/open_webui__models__users__UserResponse"
        files:
          items:
            $ref: "#/components/schemas/KnowledgeResponse_files_inner"
          nullable: true
          type: array
      required:
      - created_at
      - description
      - id
      - name
      - updated_at
      - user_id
      title: KnowledgeUserResponse
    LdapConfigForm:
      example:
        enable_ldap: true
      properties:
        enable_ldap:
          nullable: true
          type: boolean
      title: LdapConfigForm
    LdapForm:
      example:
        password: password
        user: user
      properties:
        user:
          title: User
          type: string
        password:
          title: Password
          type: string
      required:
      - password
      - user
      title: LdapForm
    LdapServerConfig:
      example:
        search_filters: ""
        label: label
        app_dn: app_dn
        app_dn_password: app_dn_password
        attribute_for_mail: mail
        use_tls: true
        certificate_path: certificate_path
        port: 0
        host: host
        attribute_for_username: uid
        ciphers: ciphers
        search_base: search_base
        validate_cert: true
      properties:
        label:
          title: Label
          type: string
        host:
          title: Host
          type: string
        port:
          nullable: true
          type: integer
        attribute_for_mail:
          default: mail
          title: Attribute For Mail
          type: string
        attribute_for_username:
          default: uid
          title: Attribute For Username
          type: string
        app_dn:
          title: App Dn
          type: string
        app_dn_password:
          title: App Dn Password
          type: string
        search_base:
          title: Search Base
          type: string
        search_filters:
          default: ""
          title: Search Filters
          type: string
        use_tls:
          default: true
          title: Use Tls
          type: boolean
        certificate_path:
          nullable: true
          type: string
        validate_cert:
          default: true
          title: Validate Cert
          type: boolean
        ciphers:
          nullable: true
          type: string
      required:
      - app_dn
      - app_dn_password
      - host
      - label
      - search_base
      title: LdapServerConfig
    LoadUrlForm:
      example:
        url: https://openapi-generator.tech
      properties:
        url:
          format: uri
          maxLength: 2083
          minLength: 1
          title: Url
          type: string
      required:
      - url
      title: LoadUrlForm
    MarkdownForm:
      example:
        md: md
      properties:
        md:
          title: Md
          type: string
      required:
      - md
      title: MarkdownForm
    MemoryModel:
      example:
        updated_at: 0
        user_id: user_id
        created_at: 6
        id: id
        content: content
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        content:
          title: Content
          type: string
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - content
      - created_at
      - id
      - updated_at
      - user_id
      title: MemoryModel
    MemoryUpdateModel:
      example:
        content: content
      properties:
        content:
          nullable: true
          type: string
      title: MemoryUpdateModel
    MessageModel:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        parent_id: parent_id
        meta: "{}"
        created_at: 0
        id: id
        channel_id: channel_id
        content: content
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        channel_id:
          nullable: true
          type: string
        parent_id:
          nullable: true
          type: string
        content:
          title: Content
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - content
      - created_at
      - id
      - updated_at
      - user_id
      title: MessageModel
    MessageUserResponse:
      example:
        data: "{}"
        created_at: 0
        reply_count: 5
        content: content
        updated_at: 6
        user_id: user_id
        parent_id: parent_id
        meta: "{}"
        reactions:
        - user_ids:
          - user_ids
          - user_ids
          name: name
          count: 5
        - user_ids:
          - user_ids
          - user_ids
          name: name
          count: 5
        id: id
        latest_reply_at: 1
        channel_id: channel_id
        user:
          role: role
          name: name
          profile_image_url: profile_image_url
          id: id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        channel_id:
          nullable: true
          type: string
        parent_id:
          nullable: true
          type: string
        content:
          title: Content
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        latest_reply_at:
          nullable: true
          type: integer
        reply_count:
          title: Reply Count
          type: integer
        reactions:
          items:
            $ref: "#/components/schemas/Reactions"
          type: array
        user:
          $ref: "#/components/schemas/UserNameResponse"
      required:
      - content
      - created_at
      - id
      - latest_reply_at
      - reactions
      - reply_count
      - updated_at
      - user
      - user_id
      title: MessageUserResponse
    ModelForm:
      example:
        base_model_id: base_model_id
        is_active: true
        meta:
          capabilities: "{}"
          description: Description
          profile_image_url: Profile_Image_Url
        access_control: "{}"
        name: name
        id: id
        params:
          key: ""
      properties:
        id:
          title: Id
          type: string
        base_model_id:
          nullable: true
          type: string
        name:
          title: Name
          type: string
        meta:
          $ref: "#/components/schemas/ModelMeta"
        params:
          additionalProperties: {}
          properties: {}
          title: ModelParams
        access_control:
          nullable: true
          type: object
        is_active:
          default: true
          title: Is Active
          type: boolean
      required:
      - id
      - meta
      - name
      - params
      title: ModelForm
    ModelMeta:
      additionalProperties: {}
      example:
        capabilities: "{}"
        description: Description
        profile_image_url: Profile_Image_Url
      properties:
        profile_image_url:
          $ref: "#/components/schemas/Profile_Image_Url"
        description:
          $ref: "#/components/schemas/Description"
        capabilities:
          $ref: "#/components/schemas/Capabilities"
      title: ModelMeta
    ModelModel:
      example:
        base_model_id: base_model_id
        is_active: true
        updated_at: 0
        user_id: user_id
        meta:
          capabilities: "{}"
          description: Description
          profile_image_url: Profile_Image_Url
        access_control: "{}"
        name: name
        created_at: 6
        id: id
        params:
          key: ""
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        base_model_id:
          nullable: true
          type: string
        name:
          title: Name
          type: string
        params:
          additionalProperties: {}
          properties: {}
          title: ModelParams
        meta:
          $ref: "#/components/schemas/ModelMeta"
        access_control:
          nullable: true
          type: object
        is_active:
          title: Is Active
          type: boolean
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - id
      - is_active
      - meta
      - name
      - params
      - updated_at
      - user_id
      title: ModelModel
    ModelNameForm:
      example:
        name: name
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: ModelNameForm
    ModelParams:
      additionalProperties: {}
      properties: {}
      title: ModelParams
    ModelResponse:
      example:
        base_model_id: base_model_id
        is_active: true
        updated_at: 0
        user_id: user_id
        meta:
          capabilities: "{}"
          description: Description
          profile_image_url: Profile_Image_Url
        access_control: "{}"
        name: name
        created_at: 6
        id: id
        params:
          key: ""
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        base_model_id:
          nullable: true
          type: string
        name:
          title: Name
          type: string
        params:
          additionalProperties: {}
          properties: {}
          title: ModelParams
        meta:
          $ref: "#/components/schemas/ModelMeta"
        access_control:
          nullable: true
          type: object
        is_active:
          title: Is Active
          type: boolean
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - id
      - is_active
      - meta
      - name
      - params
      - updated_at
      - user_id
      title: ModelResponse
    ModelUserResponse:
      example:
        base_model_id: base_model_id
        is_active: true
        updated_at: 0
        user_id: user_id
        meta:
          capabilities: "{}"
          description: Description
          profile_image_url: Profile_Image_Url
        access_control: "{}"
        name: name
        created_at: 6
        id: id
        params:
          key: ""
        user:
          role: role
          name: name
          profile_image_url: profile_image_url
          id: id
          email: email
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        base_model_id:
          nullable: true
          type: string
        name:
          title: Name
          type: string
        params:
          additionalProperties: {}
          properties: {}
          title: ModelParams
        meta:
          $ref: "#/components/schemas/ModelMeta"
        access_control:
          nullable: true
          type: object
        is_active:
          title: Is Active
          type: boolean
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
        user:
          $ref: "#/components/schemas/open_webui__models__users__UserResponse"
      required:
      - created_at
      - id
      - is_active
      - meta
      - name
      - params
      - updated_at
      - user_id
      title: ModelUserResponse
    ModelsConfigForm:
      example:
        DEFAULT_MODELS: DEFAULT_MODELS
        MODEL_ORDER_LIST:
        - MODEL_ORDER_LIST
        - MODEL_ORDER_LIST
      properties:
        DEFAULT_MODELS:
          nullable: true
          type: string
        MODEL_ORDER_LIST:
          items:
            type: string
          nullable: true
          type: array
      required:
      - DEFAULT_MODELS
      - MODEL_ORDER_LIST
      title: ModelsConfigForm
    NoteForm:
      example:
        data: "{}"
        meta: "{}"
        access_control: "{}"
        title: title
      properties:
        title:
          title: Title
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
      required:
      - title
      title: NoteForm
    NoteModel:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        meta: "{}"
        access_control: "{}"
        created_at: 0
        id: id
        title: title
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        title:
          title: Title
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
      required:
      - created_at
      - id
      - title
      - updated_at
      - user_id
      title: NoteModel
    NoteUserResponse:
      example:
        data: "{}"
        updated_at: 6
        user_id: user_id
        meta: "{}"
        access_control: "{}"
        created_at: 0
        id: id
        title: title
        user:
          role: role
          name: name
          profile_image_url: profile_image_url
          id: id
          email: email
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        title:
          title: Title
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
        access_control:
          nullable: true
          type: object
        created_at:
          title: Created At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        user:
          $ref: "#/components/schemas/open_webui__models__users__UserResponse"
      required:
      - created_at
      - id
      - title
      - updated_at
      - user_id
      title: NoteUserResponse
    ProcessFileForm:
      example:
        file_id: file_id
        content: content
        collection_name: collection_name
      properties:
        file_id:
          title: File Id
          type: string
        content:
          nullable: true
          type: string
        collection_name:
          nullable: true
          type: string
      required:
      - file_id
      title: ProcessFileForm
    ProcessTextForm:
      example:
        name: name
        content: content
        collection_name: collection_name
      properties:
        name:
          title: Name
          type: string
        content:
          title: Content
          type: string
        collection_name:
          nullable: true
          type: string
      required:
      - content
      - name
      title: ProcessTextForm
    ProcessUrlForm:
      example:
        collection_name: collection_name
        url: url
      properties:
        collection_name:
          nullable: true
          type: string
        url:
          title: Url
          type: string
      required:
      - url
      title: ProcessUrlForm
    PromptForm:
      example:
        access_control: "{}"
        title: title
        command: command
        content: content
      properties:
        command:
          title: Command
          type: string
        title:
          title: Title
          type: string
        content:
          title: Content
          type: string
        access_control:
          nullable: true
          type: object
      required:
      - command
      - content
      - title
      title: PromptForm
    PromptModel:
      example:
        user_id: user_id
        access_control: "{}"
        title: title
        command: command
        content: content
        timestamp: 0
      properties:
        command:
          title: Command
          type: string
        user_id:
          title: User Id
          type: string
        title:
          title: Title
          type: string
        content:
          title: Content
          type: string
        timestamp:
          title: Timestamp
          type: integer
        access_control:
          nullable: true
          type: object
      required:
      - command
      - content
      - timestamp
      - title
      - user_id
      title: PromptModel
    PromptSuggestion:
      example:
        title:
        - title
        - title
        content: content
      properties:
        title:
          items:
            type: string
          type: array
        content:
          title: Content
          type: string
      required:
      - content
      - title
      title: PromptSuggestion
    PromptUserResponse:
      example:
        user_id: user_id
        access_control: "{}"
        title: title
        user:
          role: role
          name: name
          profile_image_url: profile_image_url
          id: id
          email: email
        command: command
        content: content
        timestamp: 0
      properties:
        command:
          title: Command
          type: string
        user_id:
          title: User Id
          type: string
        title:
          title: Title
          type: string
        content:
          title: Content
          type: string
        timestamp:
          title: Timestamp
          type: integer
        access_control:
          nullable: true
          type: object
        user:
          $ref: "#/components/schemas/open_webui__models__users__UserResponse"
      required:
      - command
      - content
      - timestamp
      - title
      - user_id
      title: PromptUserResponse
    PushModelForm:
      example:
        stream: true
        name: name
        insecure: true
      properties:
        name:
          title: Name
          type: string
        insecure:
          nullable: true
          type: boolean
        stream:
          nullable: true
          type: boolean
      required:
      - name
      title: PushModelForm
    QueryCollectionsForm:
      example:
        r: 1.4658129805029452
        hybrid: true
        k_reranker: 6
        query: query
        k: 0
        collection_names:
        - collection_names
        - collection_names
        hybrid_bm25_weight: 5.962133916683182
      properties:
        collection_names:
          items:
            type: string
          type: array
        query:
          title: Query
          type: string
        k:
          nullable: true
          type: integer
        k_reranker:
          nullable: true
          type: integer
        r:
          nullable: true
          type: number
        hybrid:
          nullable: true
          type: boolean
        hybrid_bm25_weight:
          nullable: true
          type: number
      required:
      - collection_names
      - query
      title: QueryCollectionsForm
    QueryDocForm:
      example:
        r: 1.4658129805029452
        hybrid: true
        k_reranker: 6
        query: query
        k: 0
        collection_name: collection_name
      properties:
        collection_name:
          title: Collection Name
          type: string
        query:
          title: Query
          type: string
        k:
          nullable: true
          type: integer
        k_reranker:
          nullable: true
          type: integer
        r:
          nullable: true
          type: number
        hybrid:
          nullable: true
          type: boolean
      required:
      - collection_name
      - query
      title: QueryDocForm
    QueryMemoryForm:
      example:
        k: 0
        content: content
      properties:
        content:
          title: Content
          type: string
        k:
          nullable: true
          type: integer
      required:
      - content
      title: QueryMemoryForm
    RatingData:
      additionalProperties: {}
      example:
        reason: Reason
        sibling_model_ids:
        - Sibling_Model_Ids
        - Sibling_Model_Ids
        rating: 0
        comment: Comment
        model_id: Model_Id
      properties:
        rating:
          $ref: "#/components/schemas/Rating"
        model_id:
          $ref: "#/components/schemas/Model_Id"
        sibling_model_ids:
          $ref: "#/components/schemas/Sibling_Model_Ids"
        reason:
          $ref: "#/components/schemas/Reason"
        comment:
          $ref: "#/components/schemas/Comment"
      title: RatingData
    ReactionForm:
      example:
        name: name
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: ReactionForm
    Reactions:
      example:
        user_ids:
        - user_ids
        - user_ids
        name: name
        count: 5
      properties:
        name:
          title: Name
          type: string
        user_ids:
          items:
            type: string
          type: array
        count:
          title: Count
          type: integer
      required:
      - count
      - name
      - user_ids
      title: Reactions
    STTConfigForm:
      example:
        SUPPORTED_CONTENT_TYPES:
        - SUPPORTED_CONTENT_TYPES
        - SUPPORTED_CONTENT_TYPES
        AZURE_MAX_SPEAKERS: AZURE_MAX_SPEAKERS
        OPENAI_API_BASE_URL: OPENAI_API_BASE_URL
        AZURE_API_KEY: AZURE_API_KEY
        ENGINE: ENGINE
        DEEPGRAM_API_KEY: DEEPGRAM_API_KEY
        AZURE_REGION: AZURE_REGION
        WHISPER_MODEL: WHISPER_MODEL
        AZURE_BASE_URL: AZURE_BASE_URL
        OPENAI_API_KEY: OPENAI_API_KEY
        MODEL: MODEL
        AZURE_LOCALES: AZURE_LOCALES
      properties:
        OPENAI_API_BASE_URL:
          title: Openai Api Base Url
          type: string
        OPENAI_API_KEY:
          title: Openai Api Key
          type: string
        ENGINE:
          title: Engine
          type: string
        MODEL:
          title: Model
          type: string
        SUPPORTED_CONTENT_TYPES:
          default: []
          items:
            type: string
          type: array
        WHISPER_MODEL:
          title: Whisper Model
          type: string
        DEEPGRAM_API_KEY:
          title: Deepgram Api Key
          type: string
        AZURE_API_KEY:
          title: Azure Api Key
          type: string
        AZURE_REGION:
          title: Azure Region
          type: string
        AZURE_LOCALES:
          title: Azure Locales
          type: string
        AZURE_BASE_URL:
          title: Azure Base Url
          type: string
        AZURE_MAX_SPEAKERS:
          title: Azure Max Speakers
          type: string
      required:
      - AZURE_API_KEY
      - AZURE_BASE_URL
      - AZURE_LOCALES
      - AZURE_MAX_SPEAKERS
      - AZURE_REGION
      - DEEPGRAM_API_KEY
      - ENGINE
      - MODEL
      - OPENAI_API_BASE_URL
      - OPENAI_API_KEY
      - WHISPER_MODEL
      title: STTConfigForm
    SearchForm:
      example:
        queries:
        - queries
        - queries
      properties:
        queries:
          items:
            type: string
          type: array
      required:
      - queries
      title: SearchForm
    SessionUserResponse:
      example:
        role: role
        expires_at: 0
        permissions: "{}"
        name: name
        profile_image_url: profile_image_url
        id: id
        token_type: token_type
        email: email
        token: token
      properties:
        id:
          title: Id
          type: string
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
        token:
          title: Token
          type: string
        token_type:
          title: Token Type
          type: string
        expires_at:
          nullable: true
          type: integer
        permissions:
          nullable: true
          type: object
      required:
      - email
      - id
      - name
      - profile_image_url
      - role
      - token
      - token_type
      title: SessionUserResponse
    SetBannersForm:
      example:
        banners:
        - dismissible: true
          id: id
          type: type
          title: title
          content: content
          timestamp: 0
        - dismissible: true
          id: id
          type: type
          title: title
          content: content
          timestamp: 0
      properties:
        banners:
          items:
            $ref: "#/components/schemas/BannerModel"
          type: array
      required:
      - banners
      title: SetBannersForm
    SetDefaultSuggestionsForm:
      example:
        suggestions:
        - title:
          - title
          - title
          content: content
        - title:
          - title
          - title
          content: content
      properties:
        suggestions:
          items:
            $ref: "#/components/schemas/PromptSuggestion"
          type: array
      required:
      - suggestions
      title: SetDefaultSuggestionsForm
    SharingPermissions:
      example:
        public_tools: true
        public_prompts: true
        public_models: true
        public_knowledge: true
      properties:
        public_models:
          default: true
          title: Public Models
          type: boolean
        public_knowledge:
          default: true
          title: Public Knowledge
          type: boolean
        public_prompts:
          default: true
          title: Public Prompts
          type: boolean
        public_tools:
          default: true
          title: Public Tools
          type: boolean
      title: SharingPermissions
    SigninForm:
      example:
        password: password
        email: email
      properties:
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      title: SigninForm
    SigninResponse:
      example:
        role: role
        name: name
        profile_image_url: profile_image_url
        id: id
        token_type: token_type
        email: email
        token: token
      properties:
        id:
          title: Id
          type: string
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
        token:
          title: Token
          type: string
        token_type:
          title: Token Type
          type: string
      required:
      - email
      - id
      - name
      - profile_image_url
      - role
      - token
      - token_type
      title: SigninResponse
    SignupForm:
      example:
        password: password
        name: name
        profile_image_url: profile_image_url
        email: email
      properties:
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
        profile_image_url:
          nullable: true
          type: string
      required:
      - email
      - name
      - password
      title: SignupForm
    SnapshotData:
      additionalProperties: {}
      example:
        chat: "{}"
      properties:
        chat:
          $ref: "#/components/schemas/Chat"
      title: SnapshotData
    SyncFunctionsForm:
      example:
        functions:
        - is_active: false
          updated_at: 0
          user_id: user_id
          meta:
            manifest: "{}"
            description: description
          name: name
          is_global: false
          created_at: 6
          id: id
          type: type
          content: content
        - is_active: false
          updated_at: 0
          user_id: user_id
          meta:
            manifest: "{}"
            description: description
          name: name
          is_global: false
          created_at: 6
          id: id
          type: type
          content: content
        meta:
          manifest: "{}"
          description: description
        name: name
        id: id
        content: content
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        content:
          title: Content
          type: string
        meta:
          $ref: "#/components/schemas/FunctionMeta"
        functions:
          default: []
          items:
            $ref: "#/components/schemas/FunctionModel"
          type: array
      required:
      - content
      - id
      - meta
      - name
      title: SyncFunctionsForm
    TTSConfigForm:
      example:
        AZURE_SPEECH_OUTPUT_FORMAT: AZURE_SPEECH_OUTPUT_FORMAT
        VOICE: VOICE
        AZURE_SPEECH_BASE_URL: AZURE_SPEECH_BASE_URL
        OPENAI_API_BASE_URL: OPENAI_API_BASE_URL
        API_KEY: API_KEY
        SPLIT_ON: SPLIT_ON
        AZURE_SPEECH_REGION: AZURE_SPEECH_REGION
        ENGINE: ENGINE
        OPENAI_API_KEY: OPENAI_API_KEY
        MODEL: MODEL
      properties:
        OPENAI_API_BASE_URL:
          title: Openai Api Base Url
          type: string
        OPENAI_API_KEY:
          title: Openai Api Key
          type: string
        API_KEY:
          title: Api Key
          type: string
        ENGINE:
          title: Engine
          type: string
        MODEL:
          title: Model
          type: string
        VOICE:
          title: Voice
          type: string
        SPLIT_ON:
          title: Split On
          type: string
        AZURE_SPEECH_REGION:
          title: Azure Speech Region
          type: string
        AZURE_SPEECH_BASE_URL:
          title: Azure Speech Base Url
          type: string
        AZURE_SPEECH_OUTPUT_FORMAT:
          title: Azure Speech Output Format
          type: string
      required:
      - API_KEY
      - AZURE_SPEECH_BASE_URL
      - AZURE_SPEECH_OUTPUT_FORMAT
      - AZURE_SPEECH_REGION
      - ENGINE
      - MODEL
      - OPENAI_API_BASE_URL
      - OPENAI_API_KEY
      - SPLIT_ON
      - VOICE
      title: TTSConfigForm
    TagFilterForm:
      example:
        name: name
        limit: 6
        skip: 0
      properties:
        name:
          title: Name
          type: string
        skip:
          nullable: true
          type: integer
        limit:
          nullable: true
          type: integer
      required:
      - name
      title: TagFilterForm
    TagForm:
      example:
        name: name
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: TagForm
    TagModel:
      example:
        user_id: user_id
        meta: "{}"
        name: name
        id: id
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        user_id:
          title: User Id
          type: string
        meta:
          nullable: true
          type: object
      required:
      - id
      - name
      - user_id
      title: TagModel
    TaskConfigForm:
      example:
        ENABLE_TAGS_GENERATION: true
        ENABLE_TITLE_GENERATION: true
        TASK_MODEL: TASK_MODEL
        TASK_MODEL_EXTERNAL: TASK_MODEL_EXTERNAL
        TAGS_GENERATION_PROMPT_TEMPLATE: TAGS_GENERATION_PROMPT_TEMPLATE
        ENABLE_RETRIEVAL_QUERY_GENERATION: true
        TITLE_GENERATION_PROMPT_TEMPLATE: TITLE_GENERATION_PROMPT_TEMPLATE
        QUERY_GENERATION_PROMPT_TEMPLATE: QUERY_GENERATION_PROMPT_TEMPLATE
        ENABLE_FOLLOW_UP_GENERATION: true
        ENABLE_SEARCH_QUERY_GENERATION: true
        FOLLOW_UP_GENERATION_PROMPT_TEMPLATE: FOLLOW_UP_GENERATION_PROMPT_TEMPLATE
        IMAGE_PROMPT_GENERATION_PROMPT_TEMPLATE: IMAGE_PROMPT_GENERATION_PROMPT_TEMPLATE
        ENABLE_AUTOCOMPLETE_GENERATION: true
        AUTOCOMPLETE_GENERATION_INPUT_MAX_LENGTH: 0
        TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE: TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE
      properties:
        TASK_MODEL:
          nullable: true
          type: string
        TASK_MODEL_EXTERNAL:
          nullable: true
          type: string
        ENABLE_TITLE_GENERATION:
          title: Enable Title Generation
          type: boolean
        TITLE_GENERATION_PROMPT_TEMPLATE:
          title: Title Generation Prompt Template
          type: string
        IMAGE_PROMPT_GENERATION_PROMPT_TEMPLATE:
          title: Image Prompt Generation Prompt Template
          type: string
        ENABLE_AUTOCOMPLETE_GENERATION:
          title: Enable Autocomplete Generation
          type: boolean
        AUTOCOMPLETE_GENERATION_INPUT_MAX_LENGTH:
          title: Autocomplete Generation Input Max Length
          type: integer
        TAGS_GENERATION_PROMPT_TEMPLATE:
          title: Tags Generation Prompt Template
          type: string
        FOLLOW_UP_GENERATION_PROMPT_TEMPLATE:
          title: Follow Up Generation Prompt Template
          type: string
        ENABLE_FOLLOW_UP_GENERATION:
          title: Enable Follow Up Generation
          type: boolean
        ENABLE_TAGS_GENERATION:
          title: Enable Tags Generation
          type: boolean
        ENABLE_SEARCH_QUERY_GENERATION:
          title: Enable Search Query Generation
          type: boolean
        ENABLE_RETRIEVAL_QUERY_GENERATION:
          title: Enable Retrieval Query Generation
          type: boolean
        QUERY_GENERATION_PROMPT_TEMPLATE:
          title: Query Generation Prompt Template
          type: string
        TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE:
          title: Tools Function Calling Prompt Template
          type: string
      required:
      - AUTOCOMPLETE_GENERATION_INPUT_MAX_LENGTH
      - ENABLE_AUTOCOMPLETE_GENERATION
      - ENABLE_FOLLOW_UP_GENERATION
      - ENABLE_RETRIEVAL_QUERY_GENERATION
      - ENABLE_SEARCH_QUERY_GENERATION
      - ENABLE_TAGS_GENERATION
      - ENABLE_TITLE_GENERATION
      - FOLLOW_UP_GENERATION_PROMPT_TEMPLATE
      - IMAGE_PROMPT_GENERATION_PROMPT_TEMPLATE
      - QUERY_GENERATION_PROMPT_TEMPLATE
      - TAGS_GENERATION_PROMPT_TEMPLATE
      - TASK_MODEL
      - TASK_MODEL_EXTERNAL
      - TITLE_GENERATION_PROMPT_TEMPLATE
      - TOOLS_FUNCTION_CALLING_PROMPT_TEMPLATE
      title: TaskConfigForm
    ToolForm:
      example:
        meta:
          manifest: "{}"
          description: description
        access_control: "{}"
        name: name
        id: id
        content: content
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        content:
          title: Content
          type: string
        meta:
          $ref: "#/components/schemas/ToolMeta"
        access_control:
          nullable: true
          type: object
      required:
      - content
      - id
      - meta
      - name
      title: ToolForm
    ToolMeta:
      example:
        manifest: "{}"
        description: description
      properties:
        description:
          nullable: true
          type: string
        manifest:
          nullable: true
          type: object
      title: ToolMeta
    ToolModel:
      example:
        specs:
        - "{}"
        - "{}"
        updated_at: 0
        user_id: user_id
        meta:
          manifest: "{}"
          description: description
        access_control: "{}"
        name: name
        created_at: 6
        id: id
        content: content
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        content:
          title: Content
          type: string
        specs:
          items:
            type: object
          type: array
        meta:
          $ref: "#/components/schemas/ToolMeta"
        access_control:
          nullable: true
          type: object
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - content
      - created_at
      - id
      - meta
      - name
      - specs
      - updated_at
      - user_id
      title: ToolModel
    ToolResponse:
      example:
        updated_at: 0
        user_id: user_id
        meta:
          manifest: "{}"
          description: description
        access_control: "{}"
        name: name
        created_at: 6
        id: id
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        meta:
          $ref: "#/components/schemas/ToolMeta"
        access_control:
          nullable: true
          type: object
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - id
      - meta
      - name
      - updated_at
      - user_id
      title: ToolResponse
    ToolServerConnection:
      additionalProperties: {}
      example:
        path: path
        auth_type: Auth_Type
        config: "{}"
        url: url
        key: Key
      properties:
        url:
          title: Url
        path:
          title: Path
        auth_type:
          $ref: "#/components/schemas/Auth_Type"
        key:
          $ref: "#/components/schemas/Key"
        config:
          $ref: "#/components/schemas/Config"
      required:
      - auth_type
      - config
      - key
      - path
      - url
      title: ToolServerConnection
    ToolServersConfigForm:
      example:
        TOOL_SERVER_CONNECTIONS:
        - path: path
          auth_type: Auth_Type
          config: "{}"
          url: url
          key: Key
        - path: path
          auth_type: Auth_Type
          config: "{}"
          url: url
          key: Key
      properties:
        TOOL_SERVER_CONNECTIONS:
          items:
            $ref: "#/components/schemas/ToolServerConnection"
          type: array
      required:
      - TOOL_SERVER_CONNECTIONS
      title: ToolServersConfigForm
    ToolUserResponse:
      example:
        updated_at: 0
        user_id: user_id
        meta:
          manifest: "{}"
          description: description
        access_control: "{}"
        name: name
        created_at: 6
        id: id
        user:
          role: role
          name: name
          profile_image_url: profile_image_url
          id: id
          email: email
      properties:
        id:
          title: Id
          type: string
        user_id:
          title: User Id
          type: string
        name:
          title: Name
          type: string
        meta:
          $ref: "#/components/schemas/ToolMeta"
        access_control:
          nullable: true
          type: object
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
        user:
          $ref: "#/components/schemas/open_webui__models__users__UserResponse"
      required:
      - created_at
      - id
      - meta
      - name
      - updated_at
      - user_id
      title: ToolUserResponse
    UpdateConfigForm:
      example:
        ENABLE_EVALUATION_ARENA_MODELS: true
        EVALUATION_ARENA_MODELS:
        - "{}"
        - "{}"
      properties:
        ENABLE_EVALUATION_ARENA_MODELS:
          nullable: true
          type: boolean
        EVALUATION_ARENA_MODELS:
          items:
            type: object
          nullable: true
          type: array
      title: UpdateConfigForm
    UpdatePasswordForm:
      example:
        password: password
        new_password: new_password
      properties:
        password:
          title: Password
          type: string
        new_password:
          title: New Password
          type: string
      required:
      - new_password
      - password
      title: UpdatePasswordForm
    UpdateProfileForm:
      example:
        name: name
        profile_image_url: profile_image_url
      properties:
        profile_image_url:
          title: Profile Image Url
          type: string
        name:
          title: Name
          type: string
      required:
      - name
      - profile_image_url
      title: UpdateProfileForm
    UrlForm:
      example:
        url: url
      properties:
        url:
          title: Url
          type: string
      required:
      - url
      title: UrlForm
    UserListResponse:
      example:
        total: 5
        users:
        - settings:
            ui: "{}"
          role: pending
          updated_at: 6
          last_active_at: 0
          api_key: api_key
          oauth_sub: oauth_sub
          name: name
          created_at: 1
          profile_image_url: profile_image_url
          id: id
          email: email
          info: "{}"
        - settings:
            ui: "{}"
          role: pending
          updated_at: 6
          last_active_at: 0
          api_key: api_key
          oauth_sub: oauth_sub
          name: name
          created_at: 1
          profile_image_url: profile_image_url
          id: id
          email: email
          info: "{}"
      properties:
        users:
          items:
            $ref: "#/components/schemas/UserModel"
          type: array
        total:
          title: Total
          type: integer
      required:
      - total
      - users
      title: UserListResponse
    UserModel:
      example:
        settings:
          ui: "{}"
        role: pending
        updated_at: 6
        last_active_at: 0
        api_key: api_key
        oauth_sub: oauth_sub
        name: name
        created_at: 1
        profile_image_url: profile_image_url
        id: id
        email: email
        info: "{}"
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
        role:
          default: pending
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
        last_active_at:
          title: Last Active At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
        api_key:
          nullable: true
          type: string
        settings:
          $ref: "#/components/schemas/UserSettings"
        info:
          nullable: true
          type: object
        oauth_sub:
          nullable: true
          type: string
      required:
      - created_at
      - email
      - id
      - last_active_at
      - name
      - profile_image_url
      - updated_at
      title: UserModel
    UserNameResponse:
      example:
        role: role
        name: name
        profile_image_url: profile_image_url
        id: id
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
      required:
      - id
      - name
      - profile_image_url
      - role
      title: UserNameResponse
    UserPermissions:
      example:
        features:
          image_generation: true
          web_search: true
          notes: true
          code_interpreter: true
          direct_tool_servers: false
        workspace:
          models: false
          tools: false
          prompts: false
          knowledge: false
        chat:
          temporary: true
          controls: true
          edit: true
          system_prompt: true
          file_upload: true
          delete: true
          call: true
          stt: true
          tts: true
          temporary_enforced: false
          multiple_models: true
          share: true
          export: true
        sharing:
          public_tools: true
          public_prompts: true
          public_models: true
          public_knowledge: true
      properties:
        workspace:
          $ref: "#/components/schemas/WorkspacePermissions"
        sharing:
          $ref: "#/components/schemas/SharingPermissions"
        chat:
          $ref: "#/components/schemas/ChatPermissions"
        features:
          $ref: "#/components/schemas/FeaturesPermissions"
      required:
      - chat
      - features
      - sharing
      - workspace
      title: UserPermissions
    UserSettings:
      additionalProperties: {}
      example:
        ui: "{}"
      properties:
        ui:
          $ref: "#/components/schemas/Ui"
      title: UserSettings
    UserUpdateForm:
      example:
        password: password
        role: role
        name: name
        profile_image_url: profile_image_url
        email: email
      properties:
        role:
          title: Role
          type: string
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
        password:
          nullable: true
          type: string
      required:
      - email
      - name
      - profile_image_url
      - role
      title: UserUpdateForm
    ValidationError:
      example:
        msg: msg
        loc:
        - ValidationError_loc_inner
        - ValidationError_loc_inner
        type: type
      properties:
        loc:
          items:
            $ref: "#/components/schemas/ValidationError_loc_inner"
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
    WebConfig:
      properties:
        ENABLE_WEB_SEARCH:
          nullable: true
          type: boolean
        WEB_SEARCH_ENGINE:
          nullable: true
          type: string
        WEB_SEARCH_TRUST_ENV:
          nullable: true
          type: boolean
        WEB_SEARCH_RESULT_COUNT:
          nullable: true
          type: integer
        WEB_SEARCH_CONCURRENT_REQUESTS:
          nullable: true
          type: integer
        WEB_SEARCH_DOMAIN_FILTER_LIST:
          items:
            type: string
          nullable: true
          type: array
        BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL:
          nullable: true
          type: boolean
        BYPASS_WEB_SEARCH_WEB_LOADER:
          nullable: true
          type: boolean
        SEARXNG_QUERY_URL:
          nullable: true
          type: string
        YACY_QUERY_URL:
          nullable: true
          type: string
        YACY_USERNAME:
          nullable: true
          type: string
        YACY_PASSWORD:
          nullable: true
          type: string
        GOOGLE_PSE_API_KEY:
          nullable: true
          type: string
        GOOGLE_PSE_ENGINE_ID:
          nullable: true
          type: string
        BRAVE_SEARCH_API_KEY:
          nullable: true
          type: string
        KAGI_SEARCH_API_KEY:
          nullable: true
          type: string
        MOJEEK_SEARCH_API_KEY:
          nullable: true
          type: string
        BOCHA_SEARCH_API_KEY:
          nullable: true
          type: string
        SERPSTACK_API_KEY:
          nullable: true
          type: string
        SERPSTACK_HTTPS:
          nullable: true
          type: boolean
        SERPER_API_KEY:
          nullable: true
          type: string
        SERPLY_API_KEY:
          nullable: true
          type: string
        TAVILY_API_KEY:
          nullable: true
          type: string
        SEARCHAPI_API_KEY:
          nullable: true
          type: string
        SEARCHAPI_ENGINE:
          nullable: true
          type: string
        SERPAPI_API_KEY:
          nullable: true
          type: string
        SERPAPI_ENGINE:
          nullable: true
          type: string
        JINA_API_KEY:
          nullable: true
          type: string
        BING_SEARCH_V7_ENDPOINT:
          nullable: true
          type: string
        BING_SEARCH_V7_SUBSCRIPTION_KEY:
          nullable: true
          type: string
        EXA_API_KEY:
          nullable: true
          type: string
        PERPLEXITY_API_KEY:
          nullable: true
          type: string
        PERPLEXITY_MODEL:
          nullable: true
          type: string
        PERPLEXITY_SEARCH_CONTEXT_USAGE:
          nullable: true
          type: string
        SOUGOU_API_SID:
          nullable: true
          type: string
        SOUGOU_API_SK:
          nullable: true
          type: string
        WEB_LOADER_ENGINE:
          nullable: true
          type: string
        ENABLE_WEB_LOADER_SSL_VERIFICATION:
          nullable: true
          type: boolean
        PLAYWRIGHT_WS_URL:
          nullable: true
          type: string
        PLAYWRIGHT_TIMEOUT:
          nullable: true
          type: integer
        FIRECRAWL_API_KEY:
          nullable: true
          type: string
        FIRECRAWL_API_BASE_URL:
          nullable: true
          type: string
        TAVILY_EXTRACT_DEPTH:
          nullable: true
          type: string
        EXTERNAL_WEB_SEARCH_URL:
          nullable: true
          type: string
        EXTERNAL_WEB_SEARCH_API_KEY:
          nullable: true
          type: string
        EXTERNAL_WEB_LOADER_URL:
          nullable: true
          type: string
        EXTERNAL_WEB_LOADER_API_KEY:
          nullable: true
          type: string
        YOUTUBE_LOADER_LANGUAGE:
          items:
            type: string
          nullable: true
          type: array
        YOUTUBE_LOADER_PROXY_URL:
          nullable: true
          type: string
        YOUTUBE_LOADER_TRANSLATION:
          nullable: true
          type: string
      title: WebConfig
    WorkspacePermissions:
      example:
        models: false
        tools: false
        prompts: false
        knowledge: false
      properties:
        models:
          default: false
          title: Models
          type: boolean
        knowledge:
          default: false
          title: Knowledge
          type: boolean
        prompts:
          default: false
          title: Prompts
          type: boolean
        tools:
          default: false
          title: Tools
          type: boolean
      title: WorkspacePermissions
    open_webui__models__auths__UserResponse:
      example:
        role: role
        name: name
        profile_image_url: profile_image_url
        id: id
        email: email
      properties:
        id:
          title: Id
          type: string
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
      required:
      - email
      - id
      - name
      - profile_image_url
      - role
      title: UserResponse
    open_webui__models__messages__MessageForm:
      properties:
        content:
          title: Content
          type: string
        parent_id:
          nullable: true
          type: string
        data:
          nullable: true
          type: object
        meta:
          nullable: true
          type: object
      required:
      - content
      title: MessageForm
    open_webui__models__users__UserResponse:
      example:
        role: role
        name: name
        profile_image_url: profile_image_url
        id: id
        email: email
      properties:
        id:
          title: Id
          type: string
        email:
          title: Email
          type: string
        name:
          title: Name
          type: string
        role:
          title: Role
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
      required:
      - email
      - id
      - name
      - profile_image_url
      - role
      title: UserResponse
    open_webui__routers__chats__MessageForm:
      properties:
        content:
          title: Content
          type: string
      required:
      - content
      title: MessageForm
    open_webui__routers__evaluations__UserResponse:
      example:
        role: pending
        updated_at: 5
        last_active_at: 5
        name: name
        created_at: 2
        id: id
        email: email
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
        role:
          default: pending
          title: Role
          type: string
        last_active_at:
          title: Last Active At
          type: integer
        updated_at:
          title: Updated At
          type: integer
        created_at:
          title: Created At
          type: integer
      required:
      - created_at
      - email
      - id
      - last_active_at
      - name
      - updated_at
      title: UserResponse
    open_webui__routers__images__ConfigForm:
      properties:
        enabled:
          title: Enabled
          type: boolean
        engine:
          title: Engine
          type: string
        prompt_generation:
          title: Prompt Generation
          type: boolean
        openai:
          $ref: "#/components/schemas/open_webui__routers__images__OpenAIConfigForm"
        automatic1111:
          $ref: "#/components/schemas/Automatic1111ConfigForm"
        comfyui:
          $ref: "#/components/schemas/ComfyUIConfigForm"
        gemini:
          $ref: "#/components/schemas/GeminiConfigForm"
      required:
      - automatic1111
      - comfyui
      - enabled
      - engine
      - gemini
      - openai
      - prompt_generation
      title: ConfigForm
    open_webui__routers__images__OpenAIConfigForm:
      properties:
        OPENAI_API_BASE_URL:
          title: Openai Api Base Url
          type: string
        OPENAI_API_KEY:
          title: Openai Api Key
          type: string
      required:
      - OPENAI_API_BASE_URL
      - OPENAI_API_KEY
      title: OpenAIConfigForm
    open_webui__routers__ollama__ConnectionVerificationForm:
      properties:
        url:
          title: Url
          type: string
        key:
          nullable: true
          type: string
      required:
      - url
      title: ConnectionVerificationForm
    open_webui__routers__ollama__OllamaConfigForm:
      properties:
        ENABLE_OLLAMA_API:
          nullable: true
          type: boolean
        OLLAMA_BASE_URLS:
          items:
            type: string
          type: array
        OLLAMA_API_CONFIGS:
          title: Ollama Api Configs
          type: object
      required:
      - OLLAMA_API_CONFIGS
      - OLLAMA_BASE_URLS
      title: OllamaConfigForm
    open_webui__routers__openai__ConnectionVerificationForm:
      properties:
        url:
          title: Url
          type: string
        key:
          title: Key
          type: string
        config:
          nullable: true
          type: object
      required:
      - key
      - url
      title: ConnectionVerificationForm
    open_webui__routers__openai__OpenAIConfigForm:
      properties:
        ENABLE_OPENAI_API:
          nullable: true
          type: boolean
        OPENAI_API_BASE_URLS:
          items:
            type: string
          type: array
        OPENAI_API_KEYS:
          items:
            type: string
          type: array
        OPENAI_API_CONFIGS:
          title: Openai Api Configs
          type: object
      required:
      - OPENAI_API_BASE_URLS
      - OPENAI_API_CONFIGS
      - OPENAI_API_KEYS
      title: OpenAIConfigForm
    open_webui__routers__retrieval__ConfigForm:
      properties:
        RAG_TEMPLATE:
          nullable: true
          type: string
        TOP_K:
          nullable: true
          type: integer
        BYPASS_EMBEDDING_AND_RETRIEVAL:
          nullable: true
          type: boolean
        RAG_FULL_CONTEXT:
          nullable: true
          type: boolean
        ENABLE_RAG_HYBRID_SEARCH:
          nullable: true
          type: boolean
        TOP_K_RERANKER:
          nullable: true
          type: integer
        RELEVANCE_THRESHOLD:
          nullable: true
          type: number
        HYBRID_BM25_WEIGHT:
          nullable: true
          type: number
        CONTENT_EXTRACTION_ENGINE:
          nullable: true
          type: string
        PDF_EXTRACT_IMAGES:
          nullable: true
          type: boolean
        DATALAB_MARKER_API_KEY:
          nullable: true
          type: string
        DATALAB_MARKER_LANGS:
          nullable: true
          type: string
        DATALAB_MARKER_SKIP_CACHE:
          nullable: true
          type: boolean
        DATALAB_MARKER_FORCE_OCR:
          nullable: true
          type: boolean
        DATALAB_MARKER_PAGINATE:
          nullable: true
          type: boolean
        DATALAB_MARKER_STRIP_EXISTING_OCR:
          nullable: true
          type: boolean
        DATALAB_MARKER_DISABLE_IMAGE_EXTRACTION:
          nullable: true
          type: boolean
        DATALAB_MARKER_USE_LLM:
          nullable: true
          type: boolean
        DATALAB_MARKER_OUTPUT_FORMAT:
          nullable: true
          type: string
        EXTERNAL_DOCUMENT_LOADER_URL:
          nullable: true
          type: string
        EXTERNAL_DOCUMENT_LOADER_API_KEY:
          nullable: true
          type: string
        TIKA_SERVER_URL:
          nullable: true
          type: string
        DOCLING_SERVER_URL:
          nullable: true
          type: string
        DOCLING_OCR_ENGINE:
          nullable: true
          type: string
        DOCLING_OCR_LANG:
          nullable: true
          type: string
        DOCLING_DO_PICTURE_DESCRIPTION:
          nullable: true
          type: boolean
        DOCLING_PICTURE_DESCRIPTION_MODE:
          nullable: true
          type: string
        DOCLING_PICTURE_DESCRIPTION_LOCAL:
          nullable: true
          type: object
        DOCLING_PICTURE_DESCRIPTION_API:
          nullable: true
          type: object
        DOCUMENT_INTELLIGENCE_ENDPOINT:
          nullable: true
          type: string
        DOCUMENT_INTELLIGENCE_KEY:
          nullable: true
          type: string
        MISTRAL_OCR_API_KEY:
          nullable: true
          type: string
        RAG_RERANKING_MODEL:
          nullable: true
          type: string
        RAG_RERANKING_ENGINE:
          nullable: true
          type: string
        RAG_EXTERNAL_RERANKER_URL:
          nullable: true
          type: string
        RAG_EXTERNAL_RERANKER_API_KEY:
          nullable: true
          type: string
        TEXT_SPLITTER:
          nullable: true
          type: string
        CHUNK_SIZE:
          nullable: true
          type: integer
        CHUNK_OVERLAP:
          nullable: true
          type: integer
        FILE_MAX_SIZE:
          nullable: true
          type: integer
        FILE_MAX_COUNT:
          nullable: true
          type: integer
        FILE_IMAGE_COMPRESSION_WIDTH:
          nullable: true
          type: integer
        FILE_IMAGE_COMPRESSION_HEIGHT:
          nullable: true
          type: integer
        ALLOWED_FILE_EXTENSIONS:
          items:
            type: string
          nullable: true
          type: array
        ENABLE_GOOGLE_DRIVE_INTEGRATION:
          nullable: true
          type: boolean
        ENABLE_ONEDRIVE_INTEGRATION:
          nullable: true
          type: boolean
        web:
          $ref: "#/components/schemas/WebConfig"
      title: ConfigForm
    open_webui__routers__retrieval__OllamaConfigForm:
      example:
        url: url
        key: key
      properties:
        url:
          title: Url
          type: string
        key:
          title: Key
          type: string
      required:
      - key
      - url
      title: OllamaConfigForm
    open_webui__routers__retrieval__OpenAIConfigForm:
      example:
        url: url
        key: key
      properties:
        url:
          title: Url
          type: string
        key:
          title: Key
          type: string
      required:
      - key
      - url
      title: OpenAIConfigForm
    open_webui__routers__users__UserResponse:
      example:
        name: name
        active: true
        profile_image_url: profile_image_url
      properties:
        name:
          title: Name
          type: string
        profile_image_url:
          title: Profile Image Url
          type: string
        active:
          nullable: true
          type: boolean
      required:
      - name
      - profile_image_url
      title: UserResponse
    Automatic1111_Cfg_Scale:
      anyOf:
      - type: string
      - type: number
      - type: integer
      nullable: true
      title: Automatic1111 Cfg Scale
    Metadata:
      anyOf:
      - type: object
      - type: string
      nullable: true
      title: Metadata
    Model:
      anyOf:
      - {}
      - {}
      title: Model
    Stream:
      anyOf:
      - {}
      - {}
      title: Stream
    Path:
      anyOf:
      - {}
      - {}
      title: Path
    FeedbackForm_data:
      anyOf:
      - $ref: "#/components/schemas/RatingData"
      - {}
    Meta:
      anyOf:
      - {}
      - {}
      title: Meta
    FeedbackForm_snapshot:
      anyOf:
      - $ref: "#/components/schemas/SnapshotData"
      - {}
    Name:
      anyOf:
      - {}
      - {}
      title: Name
    Content_Type:
      anyOf:
      - {}
      - {}
      title: Content Type
    Size:
      anyOf:
      - {}
      - {}
      title: Size
    Hash:
      anyOf:
      - {}
      - {}
      title: Hash
    Data:
      anyOf:
      - {}
      - {}
      title: Data
    Format:
      anyOf:
      - type: object
      - type: string
      nullable: true
      title: Format
    Keep_Alive:
      anyOf:
      - type: integer
      - type: string
      nullable: true
      title: Keep Alive
    Input:
      anyOf:
      - items:
          type: string
        type: array
      - type: string
      title: Input
    KnowledgeResponse_files_inner:
      anyOf:
      - $ref: "#/components/schemas/FileMetadataResponse"
      - type: object
    Profile_Image_Url:
      anyOf:
      - {}
      - {}
      default: /static/favicon.png
      title: Profile Image Url
    Description:
      anyOf:
      - {}
      - {}
      title: Description
    Capabilities:
      anyOf:
      - {}
      - {}
      title: Capabilities
    Rating:
      anyOf:
      - {}
      - {}
      - {}
      title: Rating
    Model_Id:
      anyOf:
      - {}
      - {}
      title: Model Id
    Sibling_Model_Ids:
      anyOf:
      - items: {}
      - {}
      title: Sibling Model Ids
    Reason:
      anyOf:
      - {}
      - {}
      title: Reason
    Comment:
      anyOf:
      - {}
      - {}
      title: Comment
    Chat:
      anyOf:
      - {}
      - {}
      title: Chat
    Auth_Type:
      anyOf:
      - {}
      - {}
      title: Auth Type
    Key:
      anyOf:
      - {}
      - {}
      title: Key
    Config:
      anyOf:
      - {}
      - {}
      title: Config
    Ui:
      anyOf:
      - {}
      - {}
      default: {}
      title: Ui
    ValidationError_loc_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http

