/*
 * Open WebUI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing TasksApi
    /// </summary>
    public sealed class TasksApiTests : ApiTestsBase
    {
        private readonly ITasksApi _instance;

        public TasksApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<ITasksApi>();
        }

        /// <summary>
        /// Test GenerateAutocompletionApiV1TasksAutoCompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateAutocompletionApiV1TasksAutoCompletionsPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.GenerateAutocompletionApiV1TasksAutoCompletionsPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateChatTagsApiV1TasksTagsCompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateChatTagsApiV1TasksTagsCompletionsPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.GenerateChatTagsApiV1TasksTagsCompletionsPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateEmojiApiV1TasksEmojiCompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateEmojiApiV1TasksEmojiCompletionsPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.GenerateEmojiApiV1TasksEmojiCompletionsPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateFollowUpsApiV1TasksFollowUpCompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateFollowUpsApiV1TasksFollowUpCompletionsPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.GenerateFollowUpsApiV1TasksFollowUpCompletionsPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateImagePromptApiV1TasksImagePromptCompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateImagePromptApiV1TasksImagePromptCompletionsPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.GenerateImagePromptApiV1TasksImagePromptCompletionsPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateMoaResponseApiV1TasksMoaCompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateMoaResponseApiV1TasksMoaCompletionsPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.GenerateMoaResponseApiV1TasksMoaCompletionsPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateQueriesApiV1TasksQueriesCompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateQueriesApiV1TasksQueriesCompletionsPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.GenerateQueriesApiV1TasksQueriesCompletionsPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateTitleApiV1TasksTitleCompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateTitleApiV1TasksTitleCompletionsPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.GenerateTitleApiV1TasksTitleCompletionsPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetTaskConfigApiV1TasksConfigGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetTaskConfigApiV1TasksConfigGetAsyncTest()
        {
            var response = await _instance.GetTaskConfigApiV1TasksConfigGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UpdateTaskConfigApiV1TasksConfigUpdatePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateTaskConfigApiV1TasksConfigUpdatePostAsyncTest()
        {
            TaskConfigForm taskConfigForm = default!;
            var response = await _instance.UpdateTaskConfigApiV1TasksConfigUpdatePostAsync(taskConfigForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }
    }
}
