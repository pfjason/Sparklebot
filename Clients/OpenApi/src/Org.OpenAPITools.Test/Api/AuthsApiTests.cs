/*
 * Open WebUI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing AuthsApi
    /// </summary>
    public sealed class AuthsApiTests : ApiTestsBase
    {
        private readonly IAuthsApi _instance;

        public AuthsApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IAuthsApi>();
        }

        /// <summary>
        /// Test AddUserApiV1AuthsAddPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task AddUserApiV1AuthsAddPostAsyncTest()
        {
            AddUserForm addUserForm = default!;
            var response = await _instance.AddUserApiV1AuthsAddPostAsync(addUserForm);
            var model = response.Ok();
            Assert.IsType<SigninResponse>(model);
        }

        /// <summary>
        /// Test DeleteApiKeyApiV1AuthsApiKeyDelete
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DeleteApiKeyApiV1AuthsApiKeyDeleteAsyncTest()
        {
            var response = await _instance.DeleteApiKeyApiV1AuthsApiKeyDeleteAsync();
            var model = response.Ok();
            Assert.IsType<bool>(model);
        }

        /// <summary>
        /// Test GenerateApiKeyApiV1AuthsApiKeyPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateApiKeyApiV1AuthsApiKeyPostAsyncTest()
        {
            var response = await _instance.GenerateApiKeyApiV1AuthsApiKeyPostAsync();
            var model = response.Ok();
            Assert.IsType<ApiKey>(model);
        }

        /// <summary>
        /// Test GetAdminConfigApiV1AuthsAdminConfigGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetAdminConfigApiV1AuthsAdminConfigGetAsyncTest()
        {
            var response = await _instance.GetAdminConfigApiV1AuthsAdminConfigGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetAdminDetailsApiV1AuthsAdminDetailsGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetAdminDetailsApiV1AuthsAdminDetailsGetAsyncTest()
        {
            var response = await _instance.GetAdminDetailsApiV1AuthsAdminDetailsGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetApiKeyApiV1AuthsApiKeyGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetApiKeyApiV1AuthsApiKeyGetAsyncTest()
        {
            var response = await _instance.GetApiKeyApiV1AuthsApiKeyGetAsync();
            var model = response.Ok();
            Assert.IsType<ApiKey>(model);
        }

        /// <summary>
        /// Test GetLdapConfigApiV1AuthsAdminConfigLdapGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetLdapConfigApiV1AuthsAdminConfigLdapGetAsyncTest()
        {
            var response = await _instance.GetLdapConfigApiV1AuthsAdminConfigLdapGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetLdapServerApiV1AuthsAdminConfigLdapServerGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetLdapServerApiV1AuthsAdminConfigLdapServerGetAsyncTest()
        {
            var response = await _instance.GetLdapServerApiV1AuthsAdminConfigLdapServerGetAsync();
            var model = response.Ok();
            Assert.IsType<LdapServerConfig>(model);
        }

        /// <summary>
        /// Test GetSessionUserApiV1AuthsGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetSessionUserApiV1AuthsGetAsyncTest()
        {
            var response = await _instance.GetSessionUserApiV1AuthsGetAsync();
            var model = response.Ok();
            Assert.IsType<SessionUserResponse>(model);
        }

        /// <summary>
        /// Test LdapAuthApiV1AuthsLdapPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task LdapAuthApiV1AuthsLdapPostAsyncTest()
        {
            LdapForm ldapForm = default!;
            var response = await _instance.LdapAuthApiV1AuthsLdapPostAsync(ldapForm);
            var model = response.Ok();
            Assert.IsType<SessionUserResponse>(model);
        }

        /// <summary>
        /// Test SigninApiV1AuthsSigninPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task SigninApiV1AuthsSigninPostAsyncTest()
        {
            SigninForm signinForm = default!;
            var response = await _instance.SigninApiV1AuthsSigninPostAsync(signinForm);
            var model = response.Ok();
            Assert.IsType<SessionUserResponse>(model);
        }

        /// <summary>
        /// Test SignoutApiV1AuthsSignoutGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task SignoutApiV1AuthsSignoutGetAsyncTest()
        {
            var response = await _instance.SignoutApiV1AuthsSignoutGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test SignupApiV1AuthsSignupPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task SignupApiV1AuthsSignupPostAsyncTest()
        {
            SignupForm signupForm = default!;
            var response = await _instance.SignupApiV1AuthsSignupPostAsync(signupForm);
            var model = response.Ok();
            Assert.IsType<SessionUserResponse>(model);
        }

        /// <summary>
        /// Test UpdateAdminConfigApiV1AuthsAdminConfigPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateAdminConfigApiV1AuthsAdminConfigPostAsyncTest()
        {
            AdminConfig adminConfig = default!;
            var response = await _instance.UpdateAdminConfigApiV1AuthsAdminConfigPostAsync(adminConfig);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UpdateLdapConfigApiV1AuthsAdminConfigLdapPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateLdapConfigApiV1AuthsAdminConfigLdapPostAsyncTest()
        {
            LdapConfigForm ldapConfigForm = default!;
            var response = await _instance.UpdateLdapConfigApiV1AuthsAdminConfigLdapPostAsync(ldapConfigForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UpdateLdapServerApiV1AuthsAdminConfigLdapServerPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateLdapServerApiV1AuthsAdminConfigLdapServerPostAsyncTest()
        {
            LdapServerConfig ldapServerConfig = default!;
            var response = await _instance.UpdateLdapServerApiV1AuthsAdminConfigLdapServerPostAsync(ldapServerConfig);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UpdatePasswordApiV1AuthsUpdatePasswordPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdatePasswordApiV1AuthsUpdatePasswordPostAsyncTest()
        {
            UpdatePasswordForm updatePasswordForm = default!;
            var response = await _instance.UpdatePasswordApiV1AuthsUpdatePasswordPostAsync(updatePasswordForm);
            var model = response.Ok();
            Assert.IsType<bool>(model);
        }

        /// <summary>
        /// Test UpdateProfileApiV1AuthsUpdateProfilePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateProfileApiV1AuthsUpdateProfilePostAsyncTest()
        {
            UpdateProfileForm updateProfileForm = default!;
            var response = await _instance.UpdateProfileApiV1AuthsUpdateProfilePostAsync(updateProfileForm);
            var model = response.Ok();
            Assert.IsType<OpenWebuiModelsAuthsUserResponse>(model);
        }
    }
}
