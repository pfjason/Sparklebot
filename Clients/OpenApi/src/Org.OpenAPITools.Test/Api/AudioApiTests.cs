/*
 * Open WebUI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing AudioApi
    /// </summary>
    public sealed class AudioApiTests : ApiTestsBase
    {
        private readonly IAudioApi _instance;

        public AudioApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IAudioApi>();
        }

        /// <summary>
        /// Test GetAudioConfigApiV1AudioConfigGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetAudioConfigApiV1AudioConfigGetAsyncTest()
        {
            var response = await _instance.GetAudioConfigApiV1AudioConfigGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetModelsApiV1AudioModelsGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetModelsApiV1AudioModelsGetAsyncTest()
        {
            var response = await _instance.GetModelsApiV1AudioModelsGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetVoicesApiV1AudioVoicesGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetVoicesApiV1AudioVoicesGetAsyncTest()
        {
            var response = await _instance.GetVoicesApiV1AudioVoicesGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test SpeechApiV1AudioSpeechPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task SpeechApiV1AudioSpeechPostAsyncTest()
        {
            var response = await _instance.SpeechApiV1AudioSpeechPostAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test TranscriptionApiV1AudioTranscriptionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task TranscriptionApiV1AudioTranscriptionsPostAsyncTest()
        {
            System.IO.Stream file = default!;
            Client.Option<string?> language = default!;
            var response = await _instance.TranscriptionApiV1AudioTranscriptionsPostAsync(file, language);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UpdateAudioConfigApiV1AudioConfigUpdatePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateAudioConfigApiV1AudioConfigUpdatePostAsyncTest()
        {
            AudioConfigUpdateForm audioConfigUpdateForm = default!;
            var response = await _instance.UpdateAudioConfigApiV1AudioConfigUpdatePostAsync(audioConfigUpdateForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }
    }
}
