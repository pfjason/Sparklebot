/*
 * Open WebUI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    public sealed class DefaultApiTests : ApiTestsBase
    {
        private readonly IDefaultApi _instance;

        public DefaultApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IDefaultApi>();
        }

        /// <summary>
        /// Test ChatActionApiChatActionsActionIdPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ChatActionApiChatActionsActionIdPostAsyncTest()
        {
            string actionId = default!;
            Object body = default!;
            var response = await _instance.ChatActionApiChatActionsActionIdPostAsync(actionId, body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ChatCompletedApiChatCompletedPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ChatCompletedApiChatCompletedPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.ChatCompletedApiChatCompletedPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ChatCompletionApiChatCompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ChatCompletionApiChatCompletionsPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.ChatCompletionApiChatCompletionsPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test EmbeddingsApiEmbeddingsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task EmbeddingsApiEmbeddingsPostAsyncTest()
        {
            Object body = default!;
            var response = await _instance.EmbeddingsApiEmbeddingsPostAsync(body);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetAppChangelogApiChangelogGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetAppChangelogApiChangelogGetAsyncTest()
        {
            var response = await _instance.GetAppChangelogApiChangelogGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetAppConfigApiConfigGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetAppConfigApiConfigGetAsyncTest()
        {
            var response = await _instance.GetAppConfigApiConfigGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetAppLatestReleaseVersionApiVersionUpdatesGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetAppLatestReleaseVersionApiVersionUpdatesGetAsyncTest()
        {
            var response = await _instance.GetAppLatestReleaseVersionApiVersionUpdatesGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetAppVersionApiVersionGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetAppVersionApiVersionGetAsyncTest()
        {
            var response = await _instance.GetAppVersionApiVersionGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetBaseModelsApiModelsBaseGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetBaseModelsApiModelsBaseGetAsyncTest()
        {
            var response = await _instance.GetBaseModelsApiModelsBaseGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetCurrentUsageApiUsageGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetCurrentUsageApiUsageGetAsyncTest()
        {
            var response = await _instance.GetCurrentUsageApiUsageGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetManifestJsonManifestJsonGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetManifestJsonManifestJsonGetAsyncTest()
        {
            var response = await _instance.GetManifestJsonManifestJsonGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetModelsApiModelsGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetModelsApiModelsGetAsyncTest()
        {
            var response = await _instance.GetModelsApiModelsGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetOpensearchXmlOpensearchXmlGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetOpensearchXmlOpensearchXmlGetAsyncTest()
        {
            var response = await _instance.GetOpensearchXmlOpensearchXmlGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetWebhookUrlApiWebhookGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetWebhookUrlApiWebhookGetAsyncTest()
        {
            var response = await _instance.GetWebhookUrlApiWebhookGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test HealthcheckHealthGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task HealthcheckHealthGetAsyncTest()
        {
            var response = await _instance.HealthcheckHealthGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test HealthcheckWithDbHealthDbGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task HealthcheckWithDbHealthDbGetAsyncTest()
        {
            var response = await _instance.HealthcheckWithDbHealthDbGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ListTasksByChatIdEndpointApiTasksChatChatIdGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ListTasksByChatIdEndpointApiTasksChatChatIdGetAsyncTest()
        {
            string chatId = default!;
            var response = await _instance.ListTasksByChatIdEndpointApiTasksChatChatIdGetAsync(chatId);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ListTasksEndpointApiTasksGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ListTasksEndpointApiTasksGetAsyncTest()
        {
            var response = await _instance.ListTasksEndpointApiTasksGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test OauthCallbackOauthProviderCallbackGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task OauthCallbackOauthProviderCallbackGetAsyncTest()
        {
            string provider = default!;
            var response = await _instance.OauthCallbackOauthProviderCallbackGetAsync(provider);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test OauthLoginOauthProviderLoginGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task OauthLoginOauthProviderLoginGetAsyncTest()
        {
            string provider = default!;
            var response = await _instance.OauthLoginOauthProviderLoginGetAsync(provider);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ServeCacheFileCachePathGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ServeCacheFileCachePathGetAsyncTest()
        {
            string path = default!;
            var response = await _instance.ServeCacheFileCachePathGetAsync(path);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test StopTaskEndpointApiTasksStopTaskIdPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task StopTaskEndpointApiTasksStopTaskIdPostAsyncTest()
        {
            string taskId = default!;
            var response = await _instance.StopTaskEndpointApiTasksStopTaskIdPostAsync(taskId);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UpdateWebhookUrlApiWebhookPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateWebhookUrlApiWebhookPostAsyncTest()
        {
            UrlForm urlForm = default!;
            var response = await _instance.UpdateWebhookUrlApiWebhookPostAsync(urlForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }
    }
}
