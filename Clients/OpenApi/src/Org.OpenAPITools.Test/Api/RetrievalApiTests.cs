/*
 * Open WebUI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing RetrievalApi
    /// </summary>
    public sealed class RetrievalApiTests : ApiTestsBase
    {
        private readonly IRetrievalApi _instance;

        public RetrievalApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IRetrievalApi>();
        }

        /// <summary>
        /// Test DeleteEntriesFromCollectionApiV1RetrievalDeletePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DeleteEntriesFromCollectionApiV1RetrievalDeletePostAsyncTest()
        {
            DeleteForm deleteForm = default!;
            var response = await _instance.DeleteEntriesFromCollectionApiV1RetrievalDeletePostAsync(deleteForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetEmbeddingConfigApiV1RetrievalEmbeddingGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetEmbeddingConfigApiV1RetrievalEmbeddingGetAsyncTest()
        {
            var response = await _instance.GetEmbeddingConfigApiV1RetrievalEmbeddingGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetEmbeddingsApiV1RetrievalEfTextGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetEmbeddingsApiV1RetrievalEfTextGetAsyncTest()
        {
            string? text = default!;
            var response = await _instance.GetEmbeddingsApiV1RetrievalEfTextGetAsync(text);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetRagConfigApiV1RetrievalConfigGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetRagConfigApiV1RetrievalConfigGetAsyncTest()
        {
            var response = await _instance.GetRagConfigApiV1RetrievalConfigGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetStatusApiV1RetrievalGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetStatusApiV1RetrievalGetAsyncTest()
        {
            var response = await _instance.GetStatusApiV1RetrievalGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ProcessFileApiV1RetrievalProcessFilePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ProcessFileApiV1RetrievalProcessFilePostAsyncTest()
        {
            ProcessFileForm processFileForm = default!;
            var response = await _instance.ProcessFileApiV1RetrievalProcessFilePostAsync(processFileForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ProcessFilesBatchApiV1RetrievalProcessFilesBatchPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ProcessFilesBatchApiV1RetrievalProcessFilesBatchPostAsyncTest()
        {
            BatchProcessFilesForm batchProcessFilesForm = default!;
            var response = await _instance.ProcessFilesBatchApiV1RetrievalProcessFilesBatchPostAsync(batchProcessFilesForm);
            var model = response.Ok();
            Assert.IsType<BatchProcessFilesResponse>(model);
        }

        /// <summary>
        /// Test ProcessTextApiV1RetrievalProcessTextPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ProcessTextApiV1RetrievalProcessTextPostAsyncTest()
        {
            ProcessTextForm processTextForm = default!;
            var response = await _instance.ProcessTextApiV1RetrievalProcessTextPostAsync(processTextForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ProcessWebApiV1RetrievalProcessWebPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ProcessWebApiV1RetrievalProcessWebPostAsyncTest()
        {
            ProcessUrlForm processUrlForm = default!;
            var response = await _instance.ProcessWebApiV1RetrievalProcessWebPostAsync(processUrlForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ProcessWebSearchApiV1RetrievalProcessWebSearchPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ProcessWebSearchApiV1RetrievalProcessWebSearchPostAsyncTest()
        {
            SearchForm searchForm = default!;
            var response = await _instance.ProcessWebSearchApiV1RetrievalProcessWebSearchPostAsync(searchForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ProcessYoutubeVideoApiV1RetrievalProcessYoutubePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ProcessYoutubeVideoApiV1RetrievalProcessYoutubePostAsyncTest()
        {
            ProcessUrlForm processUrlForm = default!;
            var response = await _instance.ProcessYoutubeVideoApiV1RetrievalProcessYoutubePostAsync(processUrlForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test QueryCollectionHandlerApiV1RetrievalQueryCollectionPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task QueryCollectionHandlerApiV1RetrievalQueryCollectionPostAsyncTest()
        {
            QueryCollectionsForm queryCollectionsForm = default!;
            var response = await _instance.QueryCollectionHandlerApiV1RetrievalQueryCollectionPostAsync(queryCollectionsForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test QueryDocHandlerApiV1RetrievalQueryDocPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task QueryDocHandlerApiV1RetrievalQueryDocPostAsyncTest()
        {
            QueryDocForm queryDocForm = default!;
            var response = await _instance.QueryDocHandlerApiV1RetrievalQueryDocPostAsync(queryDocForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ResetUploadDirApiV1RetrievalResetUploadsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ResetUploadDirApiV1RetrievalResetUploadsPostAsyncTest()
        {
            var response = await _instance.ResetUploadDirApiV1RetrievalResetUploadsPostAsync();
            var model = response.Ok();
            Assert.IsType<bool>(model);
        }

        /// <summary>
        /// Test ResetVectorDbApiV1RetrievalResetDbPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ResetVectorDbApiV1RetrievalResetDbPostAsyncTest()
        {
            var response = await _instance.ResetVectorDbApiV1RetrievalResetDbPostAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UpdateEmbeddingConfigApiV1RetrievalEmbeddingUpdatePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateEmbeddingConfigApiV1RetrievalEmbeddingUpdatePostAsyncTest()
        {
            EmbeddingModelUpdateForm embeddingModelUpdateForm = default!;
            var response = await _instance.UpdateEmbeddingConfigApiV1RetrievalEmbeddingUpdatePostAsync(embeddingModelUpdateForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UpdateRagConfigApiV1RetrievalConfigUpdatePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateRagConfigApiV1RetrievalConfigUpdatePostAsyncTest()
        {
            OpenWebuiRoutersRetrievalConfigForm openWebuiRoutersRetrievalConfigForm = default!;
            var response = await _instance.UpdateRagConfigApiV1RetrievalConfigUpdatePostAsync(openWebuiRoutersRetrievalConfigForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }
    }
}
