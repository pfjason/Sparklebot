/*
 * Open WebUI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing EvaluationsApi
    /// </summary>
    public sealed class EvaluationsApiTests : ApiTestsBase
    {
        private readonly IEvaluationsApi _instance;

        public EvaluationsApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IEvaluationsApi>();
        }

        /// <summary>
        /// Test CreateFeedbackApiV1EvaluationsFeedbackPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task CreateFeedbackApiV1EvaluationsFeedbackPostAsyncTest()
        {
            FeedbackForm feedbackForm = default!;
            var response = await _instance.CreateFeedbackApiV1EvaluationsFeedbackPostAsync(feedbackForm);
            var model = response.Ok();
            Assert.IsType<FeedbackModel>(model);
        }

        /// <summary>
        /// Test DeleteAllFeedbacksApiV1EvaluationsFeedbacksAllDelete
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DeleteAllFeedbacksApiV1EvaluationsFeedbacksAllDeleteAsyncTest()
        {
            var response = await _instance.DeleteAllFeedbacksApiV1EvaluationsFeedbacksAllDeleteAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test DeleteFeedbackByIdApiV1EvaluationsFeedbackIdDelete
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DeleteFeedbackByIdApiV1EvaluationsFeedbackIdDeleteAsyncTest()
        {
            string id = default!;
            var response = await _instance.DeleteFeedbackByIdApiV1EvaluationsFeedbackIdDeleteAsync(id);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test DeleteFeedbacksApiV1EvaluationsFeedbacksDelete
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DeleteFeedbacksApiV1EvaluationsFeedbacksDeleteAsyncTest()
        {
            var response = await _instance.DeleteFeedbacksApiV1EvaluationsFeedbacksDeleteAsync();
            var model = response.Ok();
            Assert.IsType<bool>(model);
        }

        /// <summary>
        /// Test GetAllFeedbacksApiV1EvaluationsFeedbacksAllExportGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetAllFeedbacksApiV1EvaluationsFeedbacksAllExportGetAsyncTest()
        {
            var response = await _instance.GetAllFeedbacksApiV1EvaluationsFeedbacksAllExportGetAsync();
            var model = response.Ok();
            Assert.IsType<List<FeedbackModel>>(model);
        }

        /// <summary>
        /// Test GetAllFeedbacksApiV1EvaluationsFeedbacksAllGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetAllFeedbacksApiV1EvaluationsFeedbacksAllGetAsyncTest()
        {
            var response = await _instance.GetAllFeedbacksApiV1EvaluationsFeedbacksAllGetAsync();
            var model = response.Ok();
            Assert.IsType<List<FeedbackUserResponse>>(model);
        }

        /// <summary>
        /// Test GetConfigApiV1EvaluationsConfigGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetConfigApiV1EvaluationsConfigGetAsyncTest()
        {
            var response = await _instance.GetConfigApiV1EvaluationsConfigGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetFeedbackByIdApiV1EvaluationsFeedbackIdGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetFeedbackByIdApiV1EvaluationsFeedbackIdGetAsyncTest()
        {
            string id = default!;
            var response = await _instance.GetFeedbackByIdApiV1EvaluationsFeedbackIdGetAsync(id);
            var model = response.Ok();
            Assert.IsType<FeedbackModel>(model);
        }

        /// <summary>
        /// Test GetFeedbacksApiV1EvaluationsFeedbacksUserGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetFeedbacksApiV1EvaluationsFeedbacksUserGetAsyncTest()
        {
            var response = await _instance.GetFeedbacksApiV1EvaluationsFeedbacksUserGetAsync();
            var model = response.Ok();
            Assert.IsType<List<FeedbackUserResponse>>(model);
        }

        /// <summary>
        /// Test UpdateConfigApiV1EvaluationsConfigPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateConfigApiV1EvaluationsConfigPostAsyncTest()
        {
            UpdateConfigForm updateConfigForm = default!;
            var response = await _instance.UpdateConfigApiV1EvaluationsConfigPostAsync(updateConfigForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UpdateFeedbackByIdApiV1EvaluationsFeedbackIdPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateFeedbackByIdApiV1EvaluationsFeedbackIdPostAsyncTest()
        {
            string id = default!;
            FeedbackForm feedbackForm = default!;
            var response = await _instance.UpdateFeedbackByIdApiV1EvaluationsFeedbackIdPostAsync(id, feedbackForm);
            var model = response.Ok();
            Assert.IsType<FeedbackModel>(model);
        }
    }
}
