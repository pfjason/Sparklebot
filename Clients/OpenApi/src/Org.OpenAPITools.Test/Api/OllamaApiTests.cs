/*
 * Open WebUI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing OllamaApi
    /// </summary>
    public sealed class OllamaApiTests : ApiTestsBase
    {
        private readonly IOllamaApi _instance;

        public OllamaApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IOllamaApi>();
        }

        /// <summary>
        /// Test CopyModelOllamaApiCopyPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task CopyModelOllamaApiCopyPostAsyncTest()
        {
            CopyModelForm copyModelForm = default!;
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.CopyModelOllamaApiCopyPostAsync(copyModelForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test CopyModelOllamaApiCopyUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task CopyModelOllamaApiCopyUrlIdxPostAsyncTest()
        {
            CopyModelForm copyModelForm = default!;
            int? urlIdx = default!;
            var response = await _instance.CopyModelOllamaApiCopyUrlIdxPostAsync(copyModelForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test CreateModelOllamaApiCreatePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task CreateModelOllamaApiCreatePostAsyncTest()
        {
            CreateModelForm createModelForm = default!;
            Client.Option<int> urlIdx = default!;
            var response = await _instance.CreateModelOllamaApiCreatePostAsync(createModelForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test CreateModelOllamaApiCreateUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task CreateModelOllamaApiCreateUrlIdxPostAsyncTest()
        {
            int urlIdx = default!;
            CreateModelForm createModelForm = default!;
            var response = await _instance.CreateModelOllamaApiCreateUrlIdxPostAsync(urlIdx, createModelForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test DeleteModelOllamaApiDeleteDelete
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DeleteModelOllamaApiDeleteDeleteAsyncTest()
        {
            ModelNameForm modelNameForm = default!;
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.DeleteModelOllamaApiDeleteDeleteAsync(modelNameForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test DeleteModelOllamaApiDeleteUrlIdxDelete
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DeleteModelOllamaApiDeleteUrlIdxDeleteAsyncTest()
        {
            ModelNameForm modelNameForm = default!;
            int? urlIdx = default!;
            var response = await _instance.DeleteModelOllamaApiDeleteUrlIdxDeleteAsync(modelNameForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test DownloadModelOllamaModelsDownloadPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DownloadModelOllamaModelsDownloadPostAsyncTest()
        {
            UrlForm urlForm = default!;
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.DownloadModelOllamaModelsDownloadPostAsync(urlForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test DownloadModelOllamaModelsDownloadUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DownloadModelOllamaModelsDownloadUrlIdxPostAsyncTest()
        {
            UrlForm urlForm = default!;
            int? urlIdx = default!;
            var response = await _instance.DownloadModelOllamaModelsDownloadUrlIdxPostAsync(urlForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test EmbedOllamaApiEmbedPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task EmbedOllamaApiEmbedPostAsyncTest()
        {
            GenerateEmbedForm generateEmbedForm = default!;
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.EmbedOllamaApiEmbedPostAsync(generateEmbedForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test EmbedOllamaApiEmbedUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task EmbedOllamaApiEmbedUrlIdxPostAsyncTest()
        {
            GenerateEmbedForm generateEmbedForm = default!;
            int? urlIdx = default!;
            var response = await _instance.EmbedOllamaApiEmbedUrlIdxPostAsync(generateEmbedForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test EmbeddingsOllamaApiEmbeddingsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task EmbeddingsOllamaApiEmbeddingsPostAsyncTest()
        {
            GenerateEmbeddingsForm generateEmbeddingsForm = default!;
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.EmbeddingsOllamaApiEmbeddingsPostAsync(generateEmbeddingsForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test EmbeddingsOllamaApiEmbeddingsUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task EmbeddingsOllamaApiEmbeddingsUrlIdxPostAsyncTest()
        {
            GenerateEmbeddingsForm generateEmbeddingsForm = default!;
            int? urlIdx = default!;
            var response = await _instance.EmbeddingsOllamaApiEmbeddingsUrlIdxPostAsync(generateEmbeddingsForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateChatCompletionOllamaApiChatPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateChatCompletionOllamaApiChatPostAsyncTest()
        {
            Object body = default!;
            Client.Option<int?> urlIdx = default!;
            Client.Option<bool?> bypassFilter = default!;
            var response = await _instance.GenerateChatCompletionOllamaApiChatPostAsync(body, urlIdx, bypassFilter);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateChatCompletionOllamaApiChatUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateChatCompletionOllamaApiChatUrlIdxPostAsyncTest()
        {
            Object body = default!;
            int? urlIdx = default!;
            Client.Option<bool?> bypassFilter = default!;
            var response = await _instance.GenerateChatCompletionOllamaApiChatUrlIdxPostAsync(body, urlIdx, bypassFilter);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateCompletionOllamaApiGeneratePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateCompletionOllamaApiGeneratePostAsyncTest()
        {
            GenerateCompletionForm generateCompletionForm = default!;
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.GenerateCompletionOllamaApiGeneratePostAsync(generateCompletionForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateCompletionOllamaApiGenerateUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateCompletionOllamaApiGenerateUrlIdxPostAsyncTest()
        {
            GenerateCompletionForm generateCompletionForm = default!;
            int? urlIdx = default!;
            var response = await _instance.GenerateCompletionOllamaApiGenerateUrlIdxPostAsync(generateCompletionForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateOpenaiChatCompletionOllamaV1ChatCompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateOpenaiChatCompletionOllamaV1ChatCompletionsPostAsyncTest()
        {
            Object body = default!;
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.GenerateOpenaiChatCompletionOllamaV1ChatCompletionsPostAsync(body, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateOpenaiChatCompletionOllamaV1ChatCompletionsUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateOpenaiChatCompletionOllamaV1ChatCompletionsUrlIdxPostAsyncTest()
        {
            Object body = default!;
            int? urlIdx = default!;
            var response = await _instance.GenerateOpenaiChatCompletionOllamaV1ChatCompletionsUrlIdxPostAsync(body, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateOpenaiCompletionOllamaV1CompletionsPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateOpenaiCompletionOllamaV1CompletionsPostAsyncTest()
        {
            Object body = default!;
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.GenerateOpenaiCompletionOllamaV1CompletionsPostAsync(body, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GenerateOpenaiCompletionOllamaV1CompletionsUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GenerateOpenaiCompletionOllamaV1CompletionsUrlIdxPostAsyncTest()
        {
            Object body = default!;
            int? urlIdx = default!;
            var response = await _instance.GenerateOpenaiCompletionOllamaV1CompletionsUrlIdxPostAsync(body, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetConfigOllamaConfigGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetConfigOllamaConfigGetAsyncTest()
        {
            var response = await _instance.GetConfigOllamaConfigGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetOllamaLoadedModelsOllamaApiPsGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetOllamaLoadedModelsOllamaApiPsGetAsyncTest()
        {
            var response = await _instance.GetOllamaLoadedModelsOllamaApiPsGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetOllamaTagsOllamaApiTagsGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetOllamaTagsOllamaApiTagsGetAsyncTest()
        {
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.GetOllamaTagsOllamaApiTagsGetAsync(urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetOllamaTagsOllamaApiTagsUrlIdxGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetOllamaTagsOllamaApiTagsUrlIdxGetAsyncTest()
        {
            int? urlIdx = default!;
            var response = await _instance.GetOllamaTagsOllamaApiTagsUrlIdxGetAsync(urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetOllamaVersionsOllamaApiVersionGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetOllamaVersionsOllamaApiVersionGetAsyncTest()
        {
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.GetOllamaVersionsOllamaApiVersionGetAsync(urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetOllamaVersionsOllamaApiVersionUrlIdxGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetOllamaVersionsOllamaApiVersionUrlIdxGetAsyncTest()
        {
            int? urlIdx = default!;
            var response = await _instance.GetOllamaVersionsOllamaApiVersionUrlIdxGetAsync(urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetOpenaiModelsOllamaV1ModelsGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetOpenaiModelsOllamaV1ModelsGetAsyncTest()
        {
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.GetOpenaiModelsOllamaV1ModelsGetAsync(urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetOpenaiModelsOllamaV1ModelsUrlIdxGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetOpenaiModelsOllamaV1ModelsUrlIdxGetAsyncTest()
        {
            int? urlIdx = default!;
            var response = await _instance.GetOpenaiModelsOllamaV1ModelsUrlIdxGetAsync(urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetStatusOllamaGet
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetStatusOllamaGetAsyncTest()
        {
            var response = await _instance.GetStatusOllamaGetAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test GetStatusOllamaHead
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetStatusOllamaHeadAsyncTest()
        {
            var response = await _instance.GetStatusOllamaHeadAsync();
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test PullModelOllamaApiPullPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task PullModelOllamaApiPullPostAsyncTest()
        {
            ModelNameForm modelNameForm = default!;
            Client.Option<int> urlIdx = default!;
            var response = await _instance.PullModelOllamaApiPullPostAsync(modelNameForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test PullModelOllamaApiPullUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task PullModelOllamaApiPullUrlIdxPostAsyncTest()
        {
            int urlIdx = default!;
            ModelNameForm modelNameForm = default!;
            var response = await _instance.PullModelOllamaApiPullUrlIdxPostAsync(urlIdx, modelNameForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test PushModelOllamaApiPushDelete
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task PushModelOllamaApiPushDeleteAsyncTest()
        {
            PushModelForm pushModelForm = default!;
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.PushModelOllamaApiPushDeleteAsync(pushModelForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test PushModelOllamaApiPushUrlIdxDelete
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task PushModelOllamaApiPushUrlIdxDeleteAsyncTest()
        {
            PushModelForm pushModelForm = default!;
            int? urlIdx = default!;
            var response = await _instance.PushModelOllamaApiPushUrlIdxDeleteAsync(pushModelForm, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test ShowModelInfoOllamaApiShowPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task ShowModelInfoOllamaApiShowPostAsyncTest()
        {
            ModelNameForm modelNameForm = default!;
            var response = await _instance.ShowModelInfoOllamaApiShowPostAsync(modelNameForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UnloadModelOllamaApiUnloadPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UnloadModelOllamaApiUnloadPostAsyncTest()
        {
            ModelNameForm modelNameForm = default!;
            var response = await _instance.UnloadModelOllamaApiUnloadPostAsync(modelNameForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UpdateConfigOllamaConfigUpdatePost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateConfigOllamaConfigUpdatePostAsyncTest()
        {
            OpenWebuiRoutersOllamaOllamaConfigForm openWebuiRoutersOllamaOllamaConfigForm = default!;
            var response = await _instance.UpdateConfigOllamaConfigUpdatePostAsync(openWebuiRoutersOllamaOllamaConfigForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UploadModelOllamaModelsUploadPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UploadModelOllamaModelsUploadPostAsyncTest()
        {
            System.IO.Stream file = default!;
            Client.Option<int?> urlIdx = default!;
            var response = await _instance.UploadModelOllamaModelsUploadPostAsync(file, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test UploadModelOllamaModelsUploadUrlIdxPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UploadModelOllamaModelsUploadUrlIdxPostAsyncTest()
        {
            System.IO.Stream file = default!;
            int? urlIdx = default!;
            var response = await _instance.UploadModelOllamaModelsUploadUrlIdxPostAsync(file, urlIdx);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }

        /// <summary>
        /// Test VerifyConnectionOllamaVerifyPost
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task VerifyConnectionOllamaVerifyPostAsyncTest()
        {
            OpenWebuiRoutersOllamaConnectionVerificationForm openWebuiRoutersOllamaConnectionVerificationForm = default!;
            var response = await _instance.VerifyConnectionOllamaVerifyPostAsync(openWebuiRoutersOllamaConnectionVerificationForm);
            var model = response.Ok();
            Assert.IsType<Object>(model);
        }
    }
}
