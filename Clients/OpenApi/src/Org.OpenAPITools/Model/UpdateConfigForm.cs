// <auto-generated>
/*
 * Open WebUI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Client;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// UpdateConfigForm
    /// </summary>
    public partial class UpdateConfigForm : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateConfigForm" /> class.
        /// </summary>
        /// <param name="eNABLEEVALUATIONARENAMODELS">eNABLEEVALUATIONARENAMODELS</param>
        /// <param name="eVALUATIONARENAMODELS">eVALUATIONARENAMODELS</param>
        [JsonConstructor]
        public UpdateConfigForm(Option<bool?> eNABLEEVALUATIONARENAMODELS = default, Option<List<Object>?> eVALUATIONARENAMODELS = default)
        {
            ENABLE_EVALUATION_ARENA_MODELSOption = eNABLEEVALUATIONARENAMODELS;
            EVALUATION_ARENA_MODELSOption = eVALUATIONARENAMODELS;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of ENABLE_EVALUATION_ARENA_MODELS
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> ENABLE_EVALUATION_ARENA_MODELSOption { get; private set; }

        /// <summary>
        /// Gets or Sets ENABLE_EVALUATION_ARENA_MODELS
        /// </summary>
        [JsonPropertyName("ENABLE_EVALUATION_ARENA_MODELS")]
        public bool? ENABLE_EVALUATION_ARENA_MODELS { get { return this.ENABLE_EVALUATION_ARENA_MODELSOption; } set { this.ENABLE_EVALUATION_ARENA_MODELSOption = new(value); } }

        /// <summary>
        /// Used to track the state of EVALUATION_ARENA_MODELS
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<Object>?> EVALUATION_ARENA_MODELSOption { get; private set; }

        /// <summary>
        /// Gets or Sets EVALUATION_ARENA_MODELS
        /// </summary>
        [JsonPropertyName("EVALUATION_ARENA_MODELS")]
        public List<Object>? EVALUATION_ARENA_MODELS { get { return this.EVALUATION_ARENA_MODELSOption; } set { this.EVALUATION_ARENA_MODELSOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateConfigForm {\n");
            sb.Append("  ENABLE_EVALUATION_ARENA_MODELS: ").Append(ENABLE_EVALUATION_ARENA_MODELS).Append("\n");
            sb.Append("  EVALUATION_ARENA_MODELS: ").Append(EVALUATION_ARENA_MODELS).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="UpdateConfigForm" />
    /// </summary>
    public class UpdateConfigFormJsonConverter : JsonConverter<UpdateConfigForm>
    {
        /// <summary>
        /// Deserializes json to <see cref="UpdateConfigForm" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override UpdateConfigForm Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<bool?> eNABLEEVALUATIONARENAMODELS = default;
            Option<List<Object>?> eVALUATIONARENAMODELS = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "ENABLE_EVALUATION_ARENA_MODELS":
                            eNABLEEVALUATIONARENAMODELS = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "EVALUATION_ARENA_MODELS":
                            eVALUATIONARENAMODELS = new Option<List<Object>?>(JsonSerializer.Deserialize<List<Object>>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        default:
                            break;
                    }
                }
            }

            return new UpdateConfigForm(eNABLEEVALUATIONARENAMODELS, eVALUATIONARENAMODELS);
        }

        /// <summary>
        /// Serializes a <see cref="UpdateConfigForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="updateConfigForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, UpdateConfigForm updateConfigForm, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, updateConfigForm, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="UpdateConfigForm" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="updateConfigForm"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, UpdateConfigForm updateConfigForm, JsonSerializerOptions jsonSerializerOptions)
        {
            if (updateConfigForm.ENABLE_EVALUATION_ARENA_MODELSOption.IsSet)
                if (updateConfigForm.ENABLE_EVALUATION_ARENA_MODELSOption.Value != null)
                    writer.WriteBoolean("ENABLE_EVALUATION_ARENA_MODELS", updateConfigForm.ENABLE_EVALUATION_ARENA_MODELSOption.Value!.Value);
                else
                    writer.WriteNull("ENABLE_EVALUATION_ARENA_MODELS");

            if (updateConfigForm.EVALUATION_ARENA_MODELSOption.IsSet)
                if (updateConfigForm.EVALUATION_ARENA_MODELSOption.Value != null)
                {
                    writer.WritePropertyName("EVALUATION_ARENA_MODELS");
                    JsonSerializer.Serialize(writer, updateConfigForm.EVALUATION_ARENA_MODELS, jsonSerializerOptions);
                }
                else
                    writer.WriteNull("EVALUATION_ARENA_MODELS");
        }
    }
}
