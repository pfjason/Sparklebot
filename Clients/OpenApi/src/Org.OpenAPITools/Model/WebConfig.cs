// <auto-generated>
/*
 * Open WebUI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Client;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// WebConfig
    /// </summary>
    public partial class WebConfig : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WebConfig" /> class.
        /// </summary>
        /// <param name="eNABLEWEBSEARCH">eNABLEWEBSEARCH</param>
        /// <param name="wEBSEARCHENGINE">wEBSEARCHENGINE</param>
        /// <param name="wEBSEARCHTRUSTENV">wEBSEARCHTRUSTENV</param>
        /// <param name="wEBSEARCHRESULTCOUNT">wEBSEARCHRESULTCOUNT</param>
        /// <param name="wEBSEARCHCONCURRENTREQUESTS">wEBSEARCHCONCURRENTREQUESTS</param>
        /// <param name="wEBSEARCHDOMAINFILTERLIST">wEBSEARCHDOMAINFILTERLIST</param>
        /// <param name="bYPASSWEBSEARCHEMBEDDINGANDRETRIEVAL">bYPASSWEBSEARCHEMBEDDINGANDRETRIEVAL</param>
        /// <param name="bYPASSWEBSEARCHWEBLOADER">bYPASSWEBSEARCHWEBLOADER</param>
        /// <param name="sEARXNGQUERYURL">sEARXNGQUERYURL</param>
        /// <param name="yACYQUERYURL">yACYQUERYURL</param>
        /// <param name="yACYUSERNAME">yACYUSERNAME</param>
        /// <param name="yACYPASSWORD">yACYPASSWORD</param>
        /// <param name="gOOGLEPSEAPIKEY">gOOGLEPSEAPIKEY</param>
        /// <param name="gOOGLEPSEENGINEID">gOOGLEPSEENGINEID</param>
        /// <param name="bRAVESEARCHAPIKEY">bRAVESEARCHAPIKEY</param>
        /// <param name="kAGISEARCHAPIKEY">kAGISEARCHAPIKEY</param>
        /// <param name="mOJEEKSEARCHAPIKEY">mOJEEKSEARCHAPIKEY</param>
        /// <param name="bOCHASEARCHAPIKEY">bOCHASEARCHAPIKEY</param>
        /// <param name="sERPSTACKAPIKEY">sERPSTACKAPIKEY</param>
        /// <param name="sERPSTACKHTTPS">sERPSTACKHTTPS</param>
        /// <param name="sERPERAPIKEY">sERPERAPIKEY</param>
        /// <param name="sERPLYAPIKEY">sERPLYAPIKEY</param>
        /// <param name="tAVILYAPIKEY">tAVILYAPIKEY</param>
        /// <param name="sEARCHAPIAPIKEY">sEARCHAPIAPIKEY</param>
        /// <param name="sEARCHAPIENGINE">sEARCHAPIENGINE</param>
        /// <param name="sERPAPIAPIKEY">sERPAPIAPIKEY</param>
        /// <param name="sERPAPIENGINE">sERPAPIENGINE</param>
        /// <param name="jINAAPIKEY">jINAAPIKEY</param>
        /// <param name="bINGSEARCHV7ENDPOINT">bINGSEARCHV7ENDPOINT</param>
        /// <param name="bINGSEARCHV7SUBSCRIPTIONKEY">bINGSEARCHV7SUBSCRIPTIONKEY</param>
        /// <param name="eXAAPIKEY">eXAAPIKEY</param>
        /// <param name="pERPLEXITYAPIKEY">pERPLEXITYAPIKEY</param>
        /// <param name="pERPLEXITYMODEL">pERPLEXITYMODEL</param>
        /// <param name="pERPLEXITYSEARCHCONTEXTUSAGE">pERPLEXITYSEARCHCONTEXTUSAGE</param>
        /// <param name="sOUGOUAPISID">sOUGOUAPISID</param>
        /// <param name="sOUGOUAPISK">sOUGOUAPISK</param>
        /// <param name="wEBLOADERENGINE">wEBLOADERENGINE</param>
        /// <param name="eNABLEWEBLOADERSSLVERIFICATION">eNABLEWEBLOADERSSLVERIFICATION</param>
        /// <param name="pLAYWRIGHTWSURL">pLAYWRIGHTWSURL</param>
        /// <param name="pLAYWRIGHTTIMEOUT">pLAYWRIGHTTIMEOUT</param>
        /// <param name="fIRECRAWLAPIKEY">fIRECRAWLAPIKEY</param>
        /// <param name="fIRECRAWLAPIBASEURL">fIRECRAWLAPIBASEURL</param>
        /// <param name="tAVILYEXTRACTDEPTH">tAVILYEXTRACTDEPTH</param>
        /// <param name="eXTERNALWEBSEARCHURL">eXTERNALWEBSEARCHURL</param>
        /// <param name="eXTERNALWEBSEARCHAPIKEY">eXTERNALWEBSEARCHAPIKEY</param>
        /// <param name="eXTERNALWEBLOADERURL">eXTERNALWEBLOADERURL</param>
        /// <param name="eXTERNALWEBLOADERAPIKEY">eXTERNALWEBLOADERAPIKEY</param>
        /// <param name="yOUTUBELOADERLANGUAGE">yOUTUBELOADERLANGUAGE</param>
        /// <param name="yOUTUBELOADERPROXYURL">yOUTUBELOADERPROXYURL</param>
        /// <param name="yOUTUBELOADERTRANSLATION">yOUTUBELOADERTRANSLATION</param>
        [JsonConstructor]
        public WebConfig(Option<bool?> eNABLEWEBSEARCH = default, Option<string?> wEBSEARCHENGINE = default, Option<bool?> wEBSEARCHTRUSTENV = default, Option<int?> wEBSEARCHRESULTCOUNT = default, Option<int?> wEBSEARCHCONCURRENTREQUESTS = default, Option<List<string>?> wEBSEARCHDOMAINFILTERLIST = default, Option<bool?> bYPASSWEBSEARCHEMBEDDINGANDRETRIEVAL = default, Option<bool?> bYPASSWEBSEARCHWEBLOADER = default, Option<string?> sEARXNGQUERYURL = default, Option<string?> yACYQUERYURL = default, Option<string?> yACYUSERNAME = default, Option<string?> yACYPASSWORD = default, Option<string?> gOOGLEPSEAPIKEY = default, Option<string?> gOOGLEPSEENGINEID = default, Option<string?> bRAVESEARCHAPIKEY = default, Option<string?> kAGISEARCHAPIKEY = default, Option<string?> mOJEEKSEARCHAPIKEY = default, Option<string?> bOCHASEARCHAPIKEY = default, Option<string?> sERPSTACKAPIKEY = default, Option<bool?> sERPSTACKHTTPS = default, Option<string?> sERPERAPIKEY = default, Option<string?> sERPLYAPIKEY = default, Option<string?> tAVILYAPIKEY = default, Option<string?> sEARCHAPIAPIKEY = default, Option<string?> sEARCHAPIENGINE = default, Option<string?> sERPAPIAPIKEY = default, Option<string?> sERPAPIENGINE = default, Option<string?> jINAAPIKEY = default, Option<string?> bINGSEARCHV7ENDPOINT = default, Option<string?> bINGSEARCHV7SUBSCRIPTIONKEY = default, Option<string?> eXAAPIKEY = default, Option<string?> pERPLEXITYAPIKEY = default, Option<string?> pERPLEXITYMODEL = default, Option<string?> pERPLEXITYSEARCHCONTEXTUSAGE = default, Option<string?> sOUGOUAPISID = default, Option<string?> sOUGOUAPISK = default, Option<string?> wEBLOADERENGINE = default, Option<bool?> eNABLEWEBLOADERSSLVERIFICATION = default, Option<string?> pLAYWRIGHTWSURL = default, Option<int?> pLAYWRIGHTTIMEOUT = default, Option<string?> fIRECRAWLAPIKEY = default, Option<string?> fIRECRAWLAPIBASEURL = default, Option<string?> tAVILYEXTRACTDEPTH = default, Option<string?> eXTERNALWEBSEARCHURL = default, Option<string?> eXTERNALWEBSEARCHAPIKEY = default, Option<string?> eXTERNALWEBLOADERURL = default, Option<string?> eXTERNALWEBLOADERAPIKEY = default, Option<List<string>?> yOUTUBELOADERLANGUAGE = default, Option<string?> yOUTUBELOADERPROXYURL = default, Option<string?> yOUTUBELOADERTRANSLATION = default)
        {
            ENABLE_WEB_SEARCHOption = eNABLEWEBSEARCH;
            WEB_SEARCH_ENGINEOption = wEBSEARCHENGINE;
            WEB_SEARCH_TRUST_ENVOption = wEBSEARCHTRUSTENV;
            WEB_SEARCH_RESULT_COUNTOption = wEBSEARCHRESULTCOUNT;
            WEB_SEARCH_CONCURRENT_REQUESTSOption = wEBSEARCHCONCURRENTREQUESTS;
            WEB_SEARCH_DOMAIN_FILTER_LISTOption = wEBSEARCHDOMAINFILTERLIST;
            BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALOption = bYPASSWEBSEARCHEMBEDDINGANDRETRIEVAL;
            BYPASS_WEB_SEARCH_WEB_LOADEROption = bYPASSWEBSEARCHWEBLOADER;
            SEARXNG_QUERY_URLOption = sEARXNGQUERYURL;
            YACY_QUERY_URLOption = yACYQUERYURL;
            YACY_USERNAMEOption = yACYUSERNAME;
            YACY_PASSWORDOption = yACYPASSWORD;
            GOOGLE_PSE_API_KEYOption = gOOGLEPSEAPIKEY;
            GOOGLE_PSE_ENGINE_IDOption = gOOGLEPSEENGINEID;
            BRAVE_SEARCH_API_KEYOption = bRAVESEARCHAPIKEY;
            KAGI_SEARCH_API_KEYOption = kAGISEARCHAPIKEY;
            MOJEEK_SEARCH_API_KEYOption = mOJEEKSEARCHAPIKEY;
            BOCHA_SEARCH_API_KEYOption = bOCHASEARCHAPIKEY;
            SERPSTACK_API_KEYOption = sERPSTACKAPIKEY;
            SERPSTACK_HTTPSOption = sERPSTACKHTTPS;
            SERPER_API_KEYOption = sERPERAPIKEY;
            SERPLY_API_KEYOption = sERPLYAPIKEY;
            TAVILY_API_KEYOption = tAVILYAPIKEY;
            SEARCHAPI_API_KEYOption = sEARCHAPIAPIKEY;
            SEARCHAPI_ENGINEOption = sEARCHAPIENGINE;
            SERPAPI_API_KEYOption = sERPAPIAPIKEY;
            SERPAPI_ENGINEOption = sERPAPIENGINE;
            JINA_API_KEYOption = jINAAPIKEY;
            BINGSEARCHV7ENDPOINTOption = bINGSEARCHV7ENDPOINT;
            BINGSEARCHV7SUBSCRIPTIONKEYOption = bINGSEARCHV7SUBSCRIPTIONKEY;
            EXA_API_KEYOption = eXAAPIKEY;
            PERPLEXITY_API_KEYOption = pERPLEXITYAPIKEY;
            PERPLEXITY_MODELOption = pERPLEXITYMODEL;
            PERPLEXITY_SEARCH_CONTEXT_USAGEOption = pERPLEXITYSEARCHCONTEXTUSAGE;
            SOUGOU_API_SIDOption = sOUGOUAPISID;
            SOUGOU_API_SKOption = sOUGOUAPISK;
            WEB_LOADER_ENGINEOption = wEBLOADERENGINE;
            ENABLE_WEB_LOADER_SSL_VERIFICATIONOption = eNABLEWEBLOADERSSLVERIFICATION;
            PLAYWRIGHT_WS_URLOption = pLAYWRIGHTWSURL;
            PLAYWRIGHT_TIMEOUTOption = pLAYWRIGHTTIMEOUT;
            FIRECRAWL_API_KEYOption = fIRECRAWLAPIKEY;
            FIRECRAWL_API_BASE_URLOption = fIRECRAWLAPIBASEURL;
            TAVILY_EXTRACT_DEPTHOption = tAVILYEXTRACTDEPTH;
            EXTERNAL_WEB_SEARCH_URLOption = eXTERNALWEBSEARCHURL;
            EXTERNAL_WEB_SEARCH_API_KEYOption = eXTERNALWEBSEARCHAPIKEY;
            EXTERNAL_WEB_LOADER_URLOption = eXTERNALWEBLOADERURL;
            EXTERNAL_WEB_LOADER_API_KEYOption = eXTERNALWEBLOADERAPIKEY;
            YOUTUBE_LOADER_LANGUAGEOption = yOUTUBELOADERLANGUAGE;
            YOUTUBE_LOADER_PROXY_URLOption = yOUTUBELOADERPROXYURL;
            YOUTUBE_LOADER_TRANSLATIONOption = yOUTUBELOADERTRANSLATION;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of ENABLE_WEB_SEARCH
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> ENABLE_WEB_SEARCHOption { get; private set; }

        /// <summary>
        /// Gets or Sets ENABLE_WEB_SEARCH
        /// </summary>
        [JsonPropertyName("ENABLE_WEB_SEARCH")]
        public bool? ENABLE_WEB_SEARCH { get { return this.ENABLE_WEB_SEARCHOption; } set { this.ENABLE_WEB_SEARCHOption = new(value); } }

        /// <summary>
        /// Used to track the state of WEB_SEARCH_ENGINE
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> WEB_SEARCH_ENGINEOption { get; private set; }

        /// <summary>
        /// Gets or Sets WEB_SEARCH_ENGINE
        /// </summary>
        [JsonPropertyName("WEB_SEARCH_ENGINE")]
        public string? WEB_SEARCH_ENGINE { get { return this.WEB_SEARCH_ENGINEOption; } set { this.WEB_SEARCH_ENGINEOption = new(value); } }

        /// <summary>
        /// Used to track the state of WEB_SEARCH_TRUST_ENV
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> WEB_SEARCH_TRUST_ENVOption { get; private set; }

        /// <summary>
        /// Gets or Sets WEB_SEARCH_TRUST_ENV
        /// </summary>
        [JsonPropertyName("WEB_SEARCH_TRUST_ENV")]
        public bool? WEB_SEARCH_TRUST_ENV { get { return this.WEB_SEARCH_TRUST_ENVOption; } set { this.WEB_SEARCH_TRUST_ENVOption = new(value); } }

        /// <summary>
        /// Used to track the state of WEB_SEARCH_RESULT_COUNT
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> WEB_SEARCH_RESULT_COUNTOption { get; private set; }

        /// <summary>
        /// Gets or Sets WEB_SEARCH_RESULT_COUNT
        /// </summary>
        [JsonPropertyName("WEB_SEARCH_RESULT_COUNT")]
        public int? WEB_SEARCH_RESULT_COUNT { get { return this.WEB_SEARCH_RESULT_COUNTOption; } set { this.WEB_SEARCH_RESULT_COUNTOption = new(value); } }

        /// <summary>
        /// Used to track the state of WEB_SEARCH_CONCURRENT_REQUESTS
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> WEB_SEARCH_CONCURRENT_REQUESTSOption { get; private set; }

        /// <summary>
        /// Gets or Sets WEB_SEARCH_CONCURRENT_REQUESTS
        /// </summary>
        [JsonPropertyName("WEB_SEARCH_CONCURRENT_REQUESTS")]
        public int? WEB_SEARCH_CONCURRENT_REQUESTS { get { return this.WEB_SEARCH_CONCURRENT_REQUESTSOption; } set { this.WEB_SEARCH_CONCURRENT_REQUESTSOption = new(value); } }

        /// <summary>
        /// Used to track the state of WEB_SEARCH_DOMAIN_FILTER_LIST
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<string>?> WEB_SEARCH_DOMAIN_FILTER_LISTOption { get; private set; }

        /// <summary>
        /// Gets or Sets WEB_SEARCH_DOMAIN_FILTER_LIST
        /// </summary>
        [JsonPropertyName("WEB_SEARCH_DOMAIN_FILTER_LIST")]
        public List<string>? WEB_SEARCH_DOMAIN_FILTER_LIST { get { return this.WEB_SEARCH_DOMAIN_FILTER_LISTOption; } set { this.WEB_SEARCH_DOMAIN_FILTER_LISTOption = new(value); } }

        /// <summary>
        /// Used to track the state of BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALOption { get; private set; }

        /// <summary>
        /// Gets or Sets BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL
        /// </summary>
        [JsonPropertyName("BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL")]
        public bool? BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL { get { return this.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALOption; } set { this.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALOption = new(value); } }

        /// <summary>
        /// Used to track the state of BYPASS_WEB_SEARCH_WEB_LOADER
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> BYPASS_WEB_SEARCH_WEB_LOADEROption { get; private set; }

        /// <summary>
        /// Gets or Sets BYPASS_WEB_SEARCH_WEB_LOADER
        /// </summary>
        [JsonPropertyName("BYPASS_WEB_SEARCH_WEB_LOADER")]
        public bool? BYPASS_WEB_SEARCH_WEB_LOADER { get { return this.BYPASS_WEB_SEARCH_WEB_LOADEROption; } set { this.BYPASS_WEB_SEARCH_WEB_LOADEROption = new(value); } }

        /// <summary>
        /// Used to track the state of SEARXNG_QUERY_URL
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SEARXNG_QUERY_URLOption { get; private set; }

        /// <summary>
        /// Gets or Sets SEARXNG_QUERY_URL
        /// </summary>
        [JsonPropertyName("SEARXNG_QUERY_URL")]
        public string? SEARXNG_QUERY_URL { get { return this.SEARXNG_QUERY_URLOption; } set { this.SEARXNG_QUERY_URLOption = new(value); } }

        /// <summary>
        /// Used to track the state of YACY_QUERY_URL
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> YACY_QUERY_URLOption { get; private set; }

        /// <summary>
        /// Gets or Sets YACY_QUERY_URL
        /// </summary>
        [JsonPropertyName("YACY_QUERY_URL")]
        public string? YACY_QUERY_URL { get { return this.YACY_QUERY_URLOption; } set { this.YACY_QUERY_URLOption = new(value); } }

        /// <summary>
        /// Used to track the state of YACY_USERNAME
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> YACY_USERNAMEOption { get; private set; }

        /// <summary>
        /// Gets or Sets YACY_USERNAME
        /// </summary>
        [JsonPropertyName("YACY_USERNAME")]
        public string? YACY_USERNAME { get { return this.YACY_USERNAMEOption; } set { this.YACY_USERNAMEOption = new(value); } }

        /// <summary>
        /// Used to track the state of YACY_PASSWORD
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> YACY_PASSWORDOption { get; private set; }

        /// <summary>
        /// Gets or Sets YACY_PASSWORD
        /// </summary>
        [JsonPropertyName("YACY_PASSWORD")]
        public string? YACY_PASSWORD { get { return this.YACY_PASSWORDOption; } set { this.YACY_PASSWORDOption = new(value); } }

        /// <summary>
        /// Used to track the state of GOOGLE_PSE_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> GOOGLE_PSE_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets GOOGLE_PSE_API_KEY
        /// </summary>
        [JsonPropertyName("GOOGLE_PSE_API_KEY")]
        public string? GOOGLE_PSE_API_KEY { get { return this.GOOGLE_PSE_API_KEYOption; } set { this.GOOGLE_PSE_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of GOOGLE_PSE_ENGINE_ID
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> GOOGLE_PSE_ENGINE_IDOption { get; private set; }

        /// <summary>
        /// Gets or Sets GOOGLE_PSE_ENGINE_ID
        /// </summary>
        [JsonPropertyName("GOOGLE_PSE_ENGINE_ID")]
        public string? GOOGLE_PSE_ENGINE_ID { get { return this.GOOGLE_PSE_ENGINE_IDOption; } set { this.GOOGLE_PSE_ENGINE_IDOption = new(value); } }

        /// <summary>
        /// Used to track the state of BRAVE_SEARCH_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> BRAVE_SEARCH_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets BRAVE_SEARCH_API_KEY
        /// </summary>
        [JsonPropertyName("BRAVE_SEARCH_API_KEY")]
        public string? BRAVE_SEARCH_API_KEY { get { return this.BRAVE_SEARCH_API_KEYOption; } set { this.BRAVE_SEARCH_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of KAGI_SEARCH_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> KAGI_SEARCH_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets KAGI_SEARCH_API_KEY
        /// </summary>
        [JsonPropertyName("KAGI_SEARCH_API_KEY")]
        public string? KAGI_SEARCH_API_KEY { get { return this.KAGI_SEARCH_API_KEYOption; } set { this.KAGI_SEARCH_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of MOJEEK_SEARCH_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> MOJEEK_SEARCH_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets MOJEEK_SEARCH_API_KEY
        /// </summary>
        [JsonPropertyName("MOJEEK_SEARCH_API_KEY")]
        public string? MOJEEK_SEARCH_API_KEY { get { return this.MOJEEK_SEARCH_API_KEYOption; } set { this.MOJEEK_SEARCH_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of BOCHA_SEARCH_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> BOCHA_SEARCH_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets BOCHA_SEARCH_API_KEY
        /// </summary>
        [JsonPropertyName("BOCHA_SEARCH_API_KEY")]
        public string? BOCHA_SEARCH_API_KEY { get { return this.BOCHA_SEARCH_API_KEYOption; } set { this.BOCHA_SEARCH_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of SERPSTACK_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SERPSTACK_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets SERPSTACK_API_KEY
        /// </summary>
        [JsonPropertyName("SERPSTACK_API_KEY")]
        public string? SERPSTACK_API_KEY { get { return this.SERPSTACK_API_KEYOption; } set { this.SERPSTACK_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of SERPSTACK_HTTPS
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> SERPSTACK_HTTPSOption { get; private set; }

        /// <summary>
        /// Gets or Sets SERPSTACK_HTTPS
        /// </summary>
        [JsonPropertyName("SERPSTACK_HTTPS")]
        public bool? SERPSTACK_HTTPS { get { return this.SERPSTACK_HTTPSOption; } set { this.SERPSTACK_HTTPSOption = new(value); } }

        /// <summary>
        /// Used to track the state of SERPER_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SERPER_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets SERPER_API_KEY
        /// </summary>
        [JsonPropertyName("SERPER_API_KEY")]
        public string? SERPER_API_KEY { get { return this.SERPER_API_KEYOption; } set { this.SERPER_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of SERPLY_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SERPLY_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets SERPLY_API_KEY
        /// </summary>
        [JsonPropertyName("SERPLY_API_KEY")]
        public string? SERPLY_API_KEY { get { return this.SERPLY_API_KEYOption; } set { this.SERPLY_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of TAVILY_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> TAVILY_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets TAVILY_API_KEY
        /// </summary>
        [JsonPropertyName("TAVILY_API_KEY")]
        public string? TAVILY_API_KEY { get { return this.TAVILY_API_KEYOption; } set { this.TAVILY_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of SEARCHAPI_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SEARCHAPI_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets SEARCHAPI_API_KEY
        /// </summary>
        [JsonPropertyName("SEARCHAPI_API_KEY")]
        public string? SEARCHAPI_API_KEY { get { return this.SEARCHAPI_API_KEYOption; } set { this.SEARCHAPI_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of SEARCHAPI_ENGINE
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SEARCHAPI_ENGINEOption { get; private set; }

        /// <summary>
        /// Gets or Sets SEARCHAPI_ENGINE
        /// </summary>
        [JsonPropertyName("SEARCHAPI_ENGINE")]
        public string? SEARCHAPI_ENGINE { get { return this.SEARCHAPI_ENGINEOption; } set { this.SEARCHAPI_ENGINEOption = new(value); } }

        /// <summary>
        /// Used to track the state of SERPAPI_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SERPAPI_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets SERPAPI_API_KEY
        /// </summary>
        [JsonPropertyName("SERPAPI_API_KEY")]
        public string? SERPAPI_API_KEY { get { return this.SERPAPI_API_KEYOption; } set { this.SERPAPI_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of SERPAPI_ENGINE
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SERPAPI_ENGINEOption { get; private set; }

        /// <summary>
        /// Gets or Sets SERPAPI_ENGINE
        /// </summary>
        [JsonPropertyName("SERPAPI_ENGINE")]
        public string? SERPAPI_ENGINE { get { return this.SERPAPI_ENGINEOption; } set { this.SERPAPI_ENGINEOption = new(value); } }

        /// <summary>
        /// Used to track the state of JINA_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> JINA_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets JINA_API_KEY
        /// </summary>
        [JsonPropertyName("JINA_API_KEY")]
        public string? JINA_API_KEY { get { return this.JINA_API_KEYOption; } set { this.JINA_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of BINGSEARCHV7ENDPOINT
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> BINGSEARCHV7ENDPOINTOption { get; private set; }

        /// <summary>
        /// Gets or Sets BINGSEARCHV7ENDPOINT
        /// </summary>
        [JsonPropertyName("BING_SEARCH_V7_ENDPOINT")]
        public string? BINGSEARCHV7ENDPOINT { get { return this.BINGSEARCHV7ENDPOINTOption; } set { this.BINGSEARCHV7ENDPOINTOption = new(value); } }

        /// <summary>
        /// Used to track the state of BINGSEARCHV7SUBSCRIPTIONKEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> BINGSEARCHV7SUBSCRIPTIONKEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets BINGSEARCHV7SUBSCRIPTIONKEY
        /// </summary>
        [JsonPropertyName("BING_SEARCH_V7_SUBSCRIPTION_KEY")]
        public string? BINGSEARCHV7SUBSCRIPTIONKEY { get { return this.BINGSEARCHV7SUBSCRIPTIONKEYOption; } set { this.BINGSEARCHV7SUBSCRIPTIONKEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of EXA_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EXA_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets EXA_API_KEY
        /// </summary>
        [JsonPropertyName("EXA_API_KEY")]
        public string? EXA_API_KEY { get { return this.EXA_API_KEYOption; } set { this.EXA_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of PERPLEXITY_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PERPLEXITY_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets PERPLEXITY_API_KEY
        /// </summary>
        [JsonPropertyName("PERPLEXITY_API_KEY")]
        public string? PERPLEXITY_API_KEY { get { return this.PERPLEXITY_API_KEYOption; } set { this.PERPLEXITY_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of PERPLEXITY_MODEL
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PERPLEXITY_MODELOption { get; private set; }

        /// <summary>
        /// Gets or Sets PERPLEXITY_MODEL
        /// </summary>
        [JsonPropertyName("PERPLEXITY_MODEL")]
        public string? PERPLEXITY_MODEL { get { return this.PERPLEXITY_MODELOption; } set { this.PERPLEXITY_MODELOption = new(value); } }

        /// <summary>
        /// Used to track the state of PERPLEXITY_SEARCH_CONTEXT_USAGE
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PERPLEXITY_SEARCH_CONTEXT_USAGEOption { get; private set; }

        /// <summary>
        /// Gets or Sets PERPLEXITY_SEARCH_CONTEXT_USAGE
        /// </summary>
        [JsonPropertyName("PERPLEXITY_SEARCH_CONTEXT_USAGE")]
        public string? PERPLEXITY_SEARCH_CONTEXT_USAGE { get { return this.PERPLEXITY_SEARCH_CONTEXT_USAGEOption; } set { this.PERPLEXITY_SEARCH_CONTEXT_USAGEOption = new(value); } }

        /// <summary>
        /// Used to track the state of SOUGOU_API_SID
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SOUGOU_API_SIDOption { get; private set; }

        /// <summary>
        /// Gets or Sets SOUGOU_API_SID
        /// </summary>
        [JsonPropertyName("SOUGOU_API_SID")]
        public string? SOUGOU_API_SID { get { return this.SOUGOU_API_SIDOption; } set { this.SOUGOU_API_SIDOption = new(value); } }

        /// <summary>
        /// Used to track the state of SOUGOU_API_SK
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> SOUGOU_API_SKOption { get; private set; }

        /// <summary>
        /// Gets or Sets SOUGOU_API_SK
        /// </summary>
        [JsonPropertyName("SOUGOU_API_SK")]
        public string? SOUGOU_API_SK { get { return this.SOUGOU_API_SKOption; } set { this.SOUGOU_API_SKOption = new(value); } }

        /// <summary>
        /// Used to track the state of WEB_LOADER_ENGINE
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> WEB_LOADER_ENGINEOption { get; private set; }

        /// <summary>
        /// Gets or Sets WEB_LOADER_ENGINE
        /// </summary>
        [JsonPropertyName("WEB_LOADER_ENGINE")]
        public string? WEB_LOADER_ENGINE { get { return this.WEB_LOADER_ENGINEOption; } set { this.WEB_LOADER_ENGINEOption = new(value); } }

        /// <summary>
        /// Used to track the state of ENABLE_WEB_LOADER_SSL_VERIFICATION
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<bool?> ENABLE_WEB_LOADER_SSL_VERIFICATIONOption { get; private set; }

        /// <summary>
        /// Gets or Sets ENABLE_WEB_LOADER_SSL_VERIFICATION
        /// </summary>
        [JsonPropertyName("ENABLE_WEB_LOADER_SSL_VERIFICATION")]
        public bool? ENABLE_WEB_LOADER_SSL_VERIFICATION { get { return this.ENABLE_WEB_LOADER_SSL_VERIFICATIONOption; } set { this.ENABLE_WEB_LOADER_SSL_VERIFICATIONOption = new(value); } }

        /// <summary>
        /// Used to track the state of PLAYWRIGHT_WS_URL
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PLAYWRIGHT_WS_URLOption { get; private set; }

        /// <summary>
        /// Gets or Sets PLAYWRIGHT_WS_URL
        /// </summary>
        [JsonPropertyName("PLAYWRIGHT_WS_URL")]
        public string? PLAYWRIGHT_WS_URL { get { return this.PLAYWRIGHT_WS_URLOption; } set { this.PLAYWRIGHT_WS_URLOption = new(value); } }

        /// <summary>
        /// Used to track the state of PLAYWRIGHT_TIMEOUT
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> PLAYWRIGHT_TIMEOUTOption { get; private set; }

        /// <summary>
        /// Gets or Sets PLAYWRIGHT_TIMEOUT
        /// </summary>
        [JsonPropertyName("PLAYWRIGHT_TIMEOUT")]
        public int? PLAYWRIGHT_TIMEOUT { get { return this.PLAYWRIGHT_TIMEOUTOption; } set { this.PLAYWRIGHT_TIMEOUTOption = new(value); } }

        /// <summary>
        /// Used to track the state of FIRECRAWL_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> FIRECRAWL_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets FIRECRAWL_API_KEY
        /// </summary>
        [JsonPropertyName("FIRECRAWL_API_KEY")]
        public string? FIRECRAWL_API_KEY { get { return this.FIRECRAWL_API_KEYOption; } set { this.FIRECRAWL_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of FIRECRAWL_API_BASE_URL
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> FIRECRAWL_API_BASE_URLOption { get; private set; }

        /// <summary>
        /// Gets or Sets FIRECRAWL_API_BASE_URL
        /// </summary>
        [JsonPropertyName("FIRECRAWL_API_BASE_URL")]
        public string? FIRECRAWL_API_BASE_URL { get { return this.FIRECRAWL_API_BASE_URLOption; } set { this.FIRECRAWL_API_BASE_URLOption = new(value); } }

        /// <summary>
        /// Used to track the state of TAVILY_EXTRACT_DEPTH
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> TAVILY_EXTRACT_DEPTHOption { get; private set; }

        /// <summary>
        /// Gets or Sets TAVILY_EXTRACT_DEPTH
        /// </summary>
        [JsonPropertyName("TAVILY_EXTRACT_DEPTH")]
        public string? TAVILY_EXTRACT_DEPTH { get { return this.TAVILY_EXTRACT_DEPTHOption; } set { this.TAVILY_EXTRACT_DEPTHOption = new(value); } }

        /// <summary>
        /// Used to track the state of EXTERNAL_WEB_SEARCH_URL
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EXTERNAL_WEB_SEARCH_URLOption { get; private set; }

        /// <summary>
        /// Gets or Sets EXTERNAL_WEB_SEARCH_URL
        /// </summary>
        [JsonPropertyName("EXTERNAL_WEB_SEARCH_URL")]
        public string? EXTERNAL_WEB_SEARCH_URL { get { return this.EXTERNAL_WEB_SEARCH_URLOption; } set { this.EXTERNAL_WEB_SEARCH_URLOption = new(value); } }

        /// <summary>
        /// Used to track the state of EXTERNAL_WEB_SEARCH_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EXTERNAL_WEB_SEARCH_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets EXTERNAL_WEB_SEARCH_API_KEY
        /// </summary>
        [JsonPropertyName("EXTERNAL_WEB_SEARCH_API_KEY")]
        public string? EXTERNAL_WEB_SEARCH_API_KEY { get { return this.EXTERNAL_WEB_SEARCH_API_KEYOption; } set { this.EXTERNAL_WEB_SEARCH_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of EXTERNAL_WEB_LOADER_URL
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EXTERNAL_WEB_LOADER_URLOption { get; private set; }

        /// <summary>
        /// Gets or Sets EXTERNAL_WEB_LOADER_URL
        /// </summary>
        [JsonPropertyName("EXTERNAL_WEB_LOADER_URL")]
        public string? EXTERNAL_WEB_LOADER_URL { get { return this.EXTERNAL_WEB_LOADER_URLOption; } set { this.EXTERNAL_WEB_LOADER_URLOption = new(value); } }

        /// <summary>
        /// Used to track the state of EXTERNAL_WEB_LOADER_API_KEY
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> EXTERNAL_WEB_LOADER_API_KEYOption { get; private set; }

        /// <summary>
        /// Gets or Sets EXTERNAL_WEB_LOADER_API_KEY
        /// </summary>
        [JsonPropertyName("EXTERNAL_WEB_LOADER_API_KEY")]
        public string? EXTERNAL_WEB_LOADER_API_KEY { get { return this.EXTERNAL_WEB_LOADER_API_KEYOption; } set { this.EXTERNAL_WEB_LOADER_API_KEYOption = new(value); } }

        /// <summary>
        /// Used to track the state of YOUTUBE_LOADER_LANGUAGE
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<List<string>?> YOUTUBE_LOADER_LANGUAGEOption { get; private set; }

        /// <summary>
        /// Gets or Sets YOUTUBE_LOADER_LANGUAGE
        /// </summary>
        [JsonPropertyName("YOUTUBE_LOADER_LANGUAGE")]
        public List<string>? YOUTUBE_LOADER_LANGUAGE { get { return this.YOUTUBE_LOADER_LANGUAGEOption; } set { this.YOUTUBE_LOADER_LANGUAGEOption = new(value); } }

        /// <summary>
        /// Used to track the state of YOUTUBE_LOADER_PROXY_URL
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> YOUTUBE_LOADER_PROXY_URLOption { get; private set; }

        /// <summary>
        /// Gets or Sets YOUTUBE_LOADER_PROXY_URL
        /// </summary>
        [JsonPropertyName("YOUTUBE_LOADER_PROXY_URL")]
        public string? YOUTUBE_LOADER_PROXY_URL { get { return this.YOUTUBE_LOADER_PROXY_URLOption; } set { this.YOUTUBE_LOADER_PROXY_URLOption = new(value); } }

        /// <summary>
        /// Used to track the state of YOUTUBE_LOADER_TRANSLATION
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> YOUTUBE_LOADER_TRANSLATIONOption { get; private set; }

        /// <summary>
        /// Gets or Sets YOUTUBE_LOADER_TRANSLATION
        /// </summary>
        [JsonPropertyName("YOUTUBE_LOADER_TRANSLATION")]
        public string? YOUTUBE_LOADER_TRANSLATION { get { return this.YOUTUBE_LOADER_TRANSLATIONOption; } set { this.YOUTUBE_LOADER_TRANSLATIONOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class WebConfig {\n");
            sb.Append("  ENABLE_WEB_SEARCH: ").Append(ENABLE_WEB_SEARCH).Append("\n");
            sb.Append("  WEB_SEARCH_ENGINE: ").Append(WEB_SEARCH_ENGINE).Append("\n");
            sb.Append("  WEB_SEARCH_TRUST_ENV: ").Append(WEB_SEARCH_TRUST_ENV).Append("\n");
            sb.Append("  WEB_SEARCH_RESULT_COUNT: ").Append(WEB_SEARCH_RESULT_COUNT).Append("\n");
            sb.Append("  WEB_SEARCH_CONCURRENT_REQUESTS: ").Append(WEB_SEARCH_CONCURRENT_REQUESTS).Append("\n");
            sb.Append("  WEB_SEARCH_DOMAIN_FILTER_LIST: ").Append(WEB_SEARCH_DOMAIN_FILTER_LIST).Append("\n");
            sb.Append("  BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL: ").Append(BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL).Append("\n");
            sb.Append("  BYPASS_WEB_SEARCH_WEB_LOADER: ").Append(BYPASS_WEB_SEARCH_WEB_LOADER).Append("\n");
            sb.Append("  SEARXNG_QUERY_URL: ").Append(SEARXNG_QUERY_URL).Append("\n");
            sb.Append("  YACY_QUERY_URL: ").Append(YACY_QUERY_URL).Append("\n");
            sb.Append("  YACY_USERNAME: ").Append(YACY_USERNAME).Append("\n");
            sb.Append("  YACY_PASSWORD: ").Append(YACY_PASSWORD).Append("\n");
            sb.Append("  GOOGLE_PSE_API_KEY: ").Append(GOOGLE_PSE_API_KEY).Append("\n");
            sb.Append("  GOOGLE_PSE_ENGINE_ID: ").Append(GOOGLE_PSE_ENGINE_ID).Append("\n");
            sb.Append("  BRAVE_SEARCH_API_KEY: ").Append(BRAVE_SEARCH_API_KEY).Append("\n");
            sb.Append("  KAGI_SEARCH_API_KEY: ").Append(KAGI_SEARCH_API_KEY).Append("\n");
            sb.Append("  MOJEEK_SEARCH_API_KEY: ").Append(MOJEEK_SEARCH_API_KEY).Append("\n");
            sb.Append("  BOCHA_SEARCH_API_KEY: ").Append(BOCHA_SEARCH_API_KEY).Append("\n");
            sb.Append("  SERPSTACK_API_KEY: ").Append(SERPSTACK_API_KEY).Append("\n");
            sb.Append("  SERPSTACK_HTTPS: ").Append(SERPSTACK_HTTPS).Append("\n");
            sb.Append("  SERPER_API_KEY: ").Append(SERPER_API_KEY).Append("\n");
            sb.Append("  SERPLY_API_KEY: ").Append(SERPLY_API_KEY).Append("\n");
            sb.Append("  TAVILY_API_KEY: ").Append(TAVILY_API_KEY).Append("\n");
            sb.Append("  SEARCHAPI_API_KEY: ").Append(SEARCHAPI_API_KEY).Append("\n");
            sb.Append("  SEARCHAPI_ENGINE: ").Append(SEARCHAPI_ENGINE).Append("\n");
            sb.Append("  SERPAPI_API_KEY: ").Append(SERPAPI_API_KEY).Append("\n");
            sb.Append("  SERPAPI_ENGINE: ").Append(SERPAPI_ENGINE).Append("\n");
            sb.Append("  JINA_API_KEY: ").Append(JINA_API_KEY).Append("\n");
            sb.Append("  BINGSEARCHV7ENDPOINT: ").Append(BINGSEARCHV7ENDPOINT).Append("\n");
            sb.Append("  BINGSEARCHV7SUBSCRIPTIONKEY: ").Append(BINGSEARCHV7SUBSCRIPTIONKEY).Append("\n");
            sb.Append("  EXA_API_KEY: ").Append(EXA_API_KEY).Append("\n");
            sb.Append("  PERPLEXITY_API_KEY: ").Append(PERPLEXITY_API_KEY).Append("\n");
            sb.Append("  PERPLEXITY_MODEL: ").Append(PERPLEXITY_MODEL).Append("\n");
            sb.Append("  PERPLEXITY_SEARCH_CONTEXT_USAGE: ").Append(PERPLEXITY_SEARCH_CONTEXT_USAGE).Append("\n");
            sb.Append("  SOUGOU_API_SID: ").Append(SOUGOU_API_SID).Append("\n");
            sb.Append("  SOUGOU_API_SK: ").Append(SOUGOU_API_SK).Append("\n");
            sb.Append("  WEB_LOADER_ENGINE: ").Append(WEB_LOADER_ENGINE).Append("\n");
            sb.Append("  ENABLE_WEB_LOADER_SSL_VERIFICATION: ").Append(ENABLE_WEB_LOADER_SSL_VERIFICATION).Append("\n");
            sb.Append("  PLAYWRIGHT_WS_URL: ").Append(PLAYWRIGHT_WS_URL).Append("\n");
            sb.Append("  PLAYWRIGHT_TIMEOUT: ").Append(PLAYWRIGHT_TIMEOUT).Append("\n");
            sb.Append("  FIRECRAWL_API_KEY: ").Append(FIRECRAWL_API_KEY).Append("\n");
            sb.Append("  FIRECRAWL_API_BASE_URL: ").Append(FIRECRAWL_API_BASE_URL).Append("\n");
            sb.Append("  TAVILY_EXTRACT_DEPTH: ").Append(TAVILY_EXTRACT_DEPTH).Append("\n");
            sb.Append("  EXTERNAL_WEB_SEARCH_URL: ").Append(EXTERNAL_WEB_SEARCH_URL).Append("\n");
            sb.Append("  EXTERNAL_WEB_SEARCH_API_KEY: ").Append(EXTERNAL_WEB_SEARCH_API_KEY).Append("\n");
            sb.Append("  EXTERNAL_WEB_LOADER_URL: ").Append(EXTERNAL_WEB_LOADER_URL).Append("\n");
            sb.Append("  EXTERNAL_WEB_LOADER_API_KEY: ").Append(EXTERNAL_WEB_LOADER_API_KEY).Append("\n");
            sb.Append("  YOUTUBE_LOADER_LANGUAGE: ").Append(YOUTUBE_LOADER_LANGUAGE).Append("\n");
            sb.Append("  YOUTUBE_LOADER_PROXY_URL: ").Append(YOUTUBE_LOADER_PROXY_URL).Append("\n");
            sb.Append("  YOUTUBE_LOADER_TRANSLATION: ").Append(YOUTUBE_LOADER_TRANSLATION).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="WebConfig" />
    /// </summary>
    public class WebConfigJsonConverter : JsonConverter<WebConfig>
    {
        /// <summary>
        /// Deserializes json to <see cref="WebConfig" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override WebConfig Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<bool?> eNABLEWEBSEARCH = default;
            Option<string?> wEBSEARCHENGINE = default;
            Option<bool?> wEBSEARCHTRUSTENV = default;
            Option<int?> wEBSEARCHRESULTCOUNT = default;
            Option<int?> wEBSEARCHCONCURRENTREQUESTS = default;
            Option<List<string>?> wEBSEARCHDOMAINFILTERLIST = default;
            Option<bool?> bYPASSWEBSEARCHEMBEDDINGANDRETRIEVAL = default;
            Option<bool?> bYPASSWEBSEARCHWEBLOADER = default;
            Option<string?> sEARXNGQUERYURL = default;
            Option<string?> yACYQUERYURL = default;
            Option<string?> yACYUSERNAME = default;
            Option<string?> yACYPASSWORD = default;
            Option<string?> gOOGLEPSEAPIKEY = default;
            Option<string?> gOOGLEPSEENGINEID = default;
            Option<string?> bRAVESEARCHAPIKEY = default;
            Option<string?> kAGISEARCHAPIKEY = default;
            Option<string?> mOJEEKSEARCHAPIKEY = default;
            Option<string?> bOCHASEARCHAPIKEY = default;
            Option<string?> sERPSTACKAPIKEY = default;
            Option<bool?> sERPSTACKHTTPS = default;
            Option<string?> sERPERAPIKEY = default;
            Option<string?> sERPLYAPIKEY = default;
            Option<string?> tAVILYAPIKEY = default;
            Option<string?> sEARCHAPIAPIKEY = default;
            Option<string?> sEARCHAPIENGINE = default;
            Option<string?> sERPAPIAPIKEY = default;
            Option<string?> sERPAPIENGINE = default;
            Option<string?> jINAAPIKEY = default;
            Option<string?> bINGSEARCHV7ENDPOINT = default;
            Option<string?> bINGSEARCHV7SUBSCRIPTIONKEY = default;
            Option<string?> eXAAPIKEY = default;
            Option<string?> pERPLEXITYAPIKEY = default;
            Option<string?> pERPLEXITYMODEL = default;
            Option<string?> pERPLEXITYSEARCHCONTEXTUSAGE = default;
            Option<string?> sOUGOUAPISID = default;
            Option<string?> sOUGOUAPISK = default;
            Option<string?> wEBLOADERENGINE = default;
            Option<bool?> eNABLEWEBLOADERSSLVERIFICATION = default;
            Option<string?> pLAYWRIGHTWSURL = default;
            Option<int?> pLAYWRIGHTTIMEOUT = default;
            Option<string?> fIRECRAWLAPIKEY = default;
            Option<string?> fIRECRAWLAPIBASEURL = default;
            Option<string?> tAVILYEXTRACTDEPTH = default;
            Option<string?> eXTERNALWEBSEARCHURL = default;
            Option<string?> eXTERNALWEBSEARCHAPIKEY = default;
            Option<string?> eXTERNALWEBLOADERURL = default;
            Option<string?> eXTERNALWEBLOADERAPIKEY = default;
            Option<List<string>?> yOUTUBELOADERLANGUAGE = default;
            Option<string?> yOUTUBELOADERPROXYURL = default;
            Option<string?> yOUTUBELOADERTRANSLATION = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "ENABLE_WEB_SEARCH":
                            eNABLEWEBSEARCH = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "WEB_SEARCH_ENGINE":
                            wEBSEARCHENGINE = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "WEB_SEARCH_TRUST_ENV":
                            wEBSEARCHTRUSTENV = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "WEB_SEARCH_RESULT_COUNT":
                            wEBSEARCHRESULTCOUNT = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "WEB_SEARCH_CONCURRENT_REQUESTS":
                            wEBSEARCHCONCURRENTREQUESTS = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "WEB_SEARCH_DOMAIN_FILTER_LIST":
                            wEBSEARCHDOMAINFILTERLIST = new Option<List<string>?>(JsonSerializer.Deserialize<List<string>>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL":
                            bYPASSWEBSEARCHEMBEDDINGANDRETRIEVAL = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "BYPASS_WEB_SEARCH_WEB_LOADER":
                            bYPASSWEBSEARCHWEBLOADER = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "SEARXNG_QUERY_URL":
                            sEARXNGQUERYURL = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "YACY_QUERY_URL":
                            yACYQUERYURL = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "YACY_USERNAME":
                            yACYUSERNAME = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "YACY_PASSWORD":
                            yACYPASSWORD = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "GOOGLE_PSE_API_KEY":
                            gOOGLEPSEAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "GOOGLE_PSE_ENGINE_ID":
                            gOOGLEPSEENGINEID = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "BRAVE_SEARCH_API_KEY":
                            bRAVESEARCHAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "KAGI_SEARCH_API_KEY":
                            kAGISEARCHAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "MOJEEK_SEARCH_API_KEY":
                            mOJEEKSEARCHAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "BOCHA_SEARCH_API_KEY":
                            bOCHASEARCHAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "SERPSTACK_API_KEY":
                            sERPSTACKAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "SERPSTACK_HTTPS":
                            sERPSTACKHTTPS = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "SERPER_API_KEY":
                            sERPERAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "SERPLY_API_KEY":
                            sERPLYAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "TAVILY_API_KEY":
                            tAVILYAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "SEARCHAPI_API_KEY":
                            sEARCHAPIAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "SEARCHAPI_ENGINE":
                            sEARCHAPIENGINE = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "SERPAPI_API_KEY":
                            sERPAPIAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "SERPAPI_ENGINE":
                            sERPAPIENGINE = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "JINA_API_KEY":
                            jINAAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "BING_SEARCH_V7_ENDPOINT":
                            bINGSEARCHV7ENDPOINT = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "BING_SEARCH_V7_SUBSCRIPTION_KEY":
                            bINGSEARCHV7SUBSCRIPTIONKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "EXA_API_KEY":
                            eXAAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "PERPLEXITY_API_KEY":
                            pERPLEXITYAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "PERPLEXITY_MODEL":
                            pERPLEXITYMODEL = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "PERPLEXITY_SEARCH_CONTEXT_USAGE":
                            pERPLEXITYSEARCHCONTEXTUSAGE = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "SOUGOU_API_SID":
                            sOUGOUAPISID = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "SOUGOU_API_SK":
                            sOUGOUAPISK = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "WEB_LOADER_ENGINE":
                            wEBLOADERENGINE = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "ENABLE_WEB_LOADER_SSL_VERIFICATION":
                            eNABLEWEBLOADERSSLVERIFICATION = new Option<bool?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (bool?)null : utf8JsonReader.GetBoolean());
                            break;
                        case "PLAYWRIGHT_WS_URL":
                            pLAYWRIGHTWSURL = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "PLAYWRIGHT_TIMEOUT":
                            pLAYWRIGHTTIMEOUT = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "FIRECRAWL_API_KEY":
                            fIRECRAWLAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "FIRECRAWL_API_BASE_URL":
                            fIRECRAWLAPIBASEURL = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "TAVILY_EXTRACT_DEPTH":
                            tAVILYEXTRACTDEPTH = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "EXTERNAL_WEB_SEARCH_URL":
                            eXTERNALWEBSEARCHURL = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "EXTERNAL_WEB_SEARCH_API_KEY":
                            eXTERNALWEBSEARCHAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "EXTERNAL_WEB_LOADER_URL":
                            eXTERNALWEBLOADERURL = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "EXTERNAL_WEB_LOADER_API_KEY":
                            eXTERNALWEBLOADERAPIKEY = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "YOUTUBE_LOADER_LANGUAGE":
                            yOUTUBELOADERLANGUAGE = new Option<List<string>?>(JsonSerializer.Deserialize<List<string>>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "YOUTUBE_LOADER_PROXY_URL":
                            yOUTUBELOADERPROXYURL = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        case "YOUTUBE_LOADER_TRANSLATION":
                            yOUTUBELOADERTRANSLATION = new Option<string?>(utf8JsonReader.GetString());
                            break;
                        default:
                            break;
                    }
                }
            }

            return new WebConfig(eNABLEWEBSEARCH, wEBSEARCHENGINE, wEBSEARCHTRUSTENV, wEBSEARCHRESULTCOUNT, wEBSEARCHCONCURRENTREQUESTS, wEBSEARCHDOMAINFILTERLIST, bYPASSWEBSEARCHEMBEDDINGANDRETRIEVAL, bYPASSWEBSEARCHWEBLOADER, sEARXNGQUERYURL, yACYQUERYURL, yACYUSERNAME, yACYPASSWORD, gOOGLEPSEAPIKEY, gOOGLEPSEENGINEID, bRAVESEARCHAPIKEY, kAGISEARCHAPIKEY, mOJEEKSEARCHAPIKEY, bOCHASEARCHAPIKEY, sERPSTACKAPIKEY, sERPSTACKHTTPS, sERPERAPIKEY, sERPLYAPIKEY, tAVILYAPIKEY, sEARCHAPIAPIKEY, sEARCHAPIENGINE, sERPAPIAPIKEY, sERPAPIENGINE, jINAAPIKEY, bINGSEARCHV7ENDPOINT, bINGSEARCHV7SUBSCRIPTIONKEY, eXAAPIKEY, pERPLEXITYAPIKEY, pERPLEXITYMODEL, pERPLEXITYSEARCHCONTEXTUSAGE, sOUGOUAPISID, sOUGOUAPISK, wEBLOADERENGINE, eNABLEWEBLOADERSSLVERIFICATION, pLAYWRIGHTWSURL, pLAYWRIGHTTIMEOUT, fIRECRAWLAPIKEY, fIRECRAWLAPIBASEURL, tAVILYEXTRACTDEPTH, eXTERNALWEBSEARCHURL, eXTERNALWEBSEARCHAPIKEY, eXTERNALWEBLOADERURL, eXTERNALWEBLOADERAPIKEY, yOUTUBELOADERLANGUAGE, yOUTUBELOADERPROXYURL, yOUTUBELOADERTRANSLATION);
        }

        /// <summary>
        /// Serializes a <see cref="WebConfig" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webConfig"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, WebConfig webConfig, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, webConfig, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="WebConfig" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="webConfig"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, WebConfig webConfig, JsonSerializerOptions jsonSerializerOptions)
        {
            if (webConfig.ENABLE_WEB_SEARCHOption.IsSet)
                if (webConfig.ENABLE_WEB_SEARCHOption.Value != null)
                    writer.WriteBoolean("ENABLE_WEB_SEARCH", webConfig.ENABLE_WEB_SEARCHOption.Value!.Value);
                else
                    writer.WriteNull("ENABLE_WEB_SEARCH");

            if (webConfig.WEB_SEARCH_ENGINEOption.IsSet)
                if (webConfig.WEB_SEARCH_ENGINEOption.Value != null)
                    writer.WriteString("WEB_SEARCH_ENGINE", webConfig.WEB_SEARCH_ENGINE);
                else
                    writer.WriteNull("WEB_SEARCH_ENGINE");

            if (webConfig.WEB_SEARCH_TRUST_ENVOption.IsSet)
                if (webConfig.WEB_SEARCH_TRUST_ENVOption.Value != null)
                    writer.WriteBoolean("WEB_SEARCH_TRUST_ENV", webConfig.WEB_SEARCH_TRUST_ENVOption.Value!.Value);
                else
                    writer.WriteNull("WEB_SEARCH_TRUST_ENV");

            if (webConfig.WEB_SEARCH_RESULT_COUNTOption.IsSet)
                if (webConfig.WEB_SEARCH_RESULT_COUNTOption.Value != null)
                    writer.WriteNumber("WEB_SEARCH_RESULT_COUNT", webConfig.WEB_SEARCH_RESULT_COUNTOption.Value!.Value);
                else
                    writer.WriteNull("WEB_SEARCH_RESULT_COUNT");

            if (webConfig.WEB_SEARCH_CONCURRENT_REQUESTSOption.IsSet)
                if (webConfig.WEB_SEARCH_CONCURRENT_REQUESTSOption.Value != null)
                    writer.WriteNumber("WEB_SEARCH_CONCURRENT_REQUESTS", webConfig.WEB_SEARCH_CONCURRENT_REQUESTSOption.Value!.Value);
                else
                    writer.WriteNull("WEB_SEARCH_CONCURRENT_REQUESTS");

            if (webConfig.WEB_SEARCH_DOMAIN_FILTER_LISTOption.IsSet)
                if (webConfig.WEB_SEARCH_DOMAIN_FILTER_LISTOption.Value != null)
                {
                    writer.WritePropertyName("WEB_SEARCH_DOMAIN_FILTER_LIST");
                    JsonSerializer.Serialize(writer, webConfig.WEB_SEARCH_DOMAIN_FILTER_LIST, jsonSerializerOptions);
                }
                else
                    writer.WriteNull("WEB_SEARCH_DOMAIN_FILTER_LIST");
            if (webConfig.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALOption.IsSet)
                if (webConfig.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALOption.Value != null)
                    writer.WriteBoolean("BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL", webConfig.BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVALOption.Value!.Value);
                else
                    writer.WriteNull("BYPASS_WEB_SEARCH_EMBEDDING_AND_RETRIEVAL");

            if (webConfig.BYPASS_WEB_SEARCH_WEB_LOADEROption.IsSet)
                if (webConfig.BYPASS_WEB_SEARCH_WEB_LOADEROption.Value != null)
                    writer.WriteBoolean("BYPASS_WEB_SEARCH_WEB_LOADER", webConfig.BYPASS_WEB_SEARCH_WEB_LOADEROption.Value!.Value);
                else
                    writer.WriteNull("BYPASS_WEB_SEARCH_WEB_LOADER");

            if (webConfig.SEARXNG_QUERY_URLOption.IsSet)
                if (webConfig.SEARXNG_QUERY_URLOption.Value != null)
                    writer.WriteString("SEARXNG_QUERY_URL", webConfig.SEARXNG_QUERY_URL);
                else
                    writer.WriteNull("SEARXNG_QUERY_URL");

            if (webConfig.YACY_QUERY_URLOption.IsSet)
                if (webConfig.YACY_QUERY_URLOption.Value != null)
                    writer.WriteString("YACY_QUERY_URL", webConfig.YACY_QUERY_URL);
                else
                    writer.WriteNull("YACY_QUERY_URL");

            if (webConfig.YACY_USERNAMEOption.IsSet)
                if (webConfig.YACY_USERNAMEOption.Value != null)
                    writer.WriteString("YACY_USERNAME", webConfig.YACY_USERNAME);
                else
                    writer.WriteNull("YACY_USERNAME");

            if (webConfig.YACY_PASSWORDOption.IsSet)
                if (webConfig.YACY_PASSWORDOption.Value != null)
                    writer.WriteString("YACY_PASSWORD", webConfig.YACY_PASSWORD);
                else
                    writer.WriteNull("YACY_PASSWORD");

            if (webConfig.GOOGLE_PSE_API_KEYOption.IsSet)
                if (webConfig.GOOGLE_PSE_API_KEYOption.Value != null)
                    writer.WriteString("GOOGLE_PSE_API_KEY", webConfig.GOOGLE_PSE_API_KEY);
                else
                    writer.WriteNull("GOOGLE_PSE_API_KEY");

            if (webConfig.GOOGLE_PSE_ENGINE_IDOption.IsSet)
                if (webConfig.GOOGLE_PSE_ENGINE_IDOption.Value != null)
                    writer.WriteString("GOOGLE_PSE_ENGINE_ID", webConfig.GOOGLE_PSE_ENGINE_ID);
                else
                    writer.WriteNull("GOOGLE_PSE_ENGINE_ID");

            if (webConfig.BRAVE_SEARCH_API_KEYOption.IsSet)
                if (webConfig.BRAVE_SEARCH_API_KEYOption.Value != null)
                    writer.WriteString("BRAVE_SEARCH_API_KEY", webConfig.BRAVE_SEARCH_API_KEY);
                else
                    writer.WriteNull("BRAVE_SEARCH_API_KEY");

            if (webConfig.KAGI_SEARCH_API_KEYOption.IsSet)
                if (webConfig.KAGI_SEARCH_API_KEYOption.Value != null)
                    writer.WriteString("KAGI_SEARCH_API_KEY", webConfig.KAGI_SEARCH_API_KEY);
                else
                    writer.WriteNull("KAGI_SEARCH_API_KEY");

            if (webConfig.MOJEEK_SEARCH_API_KEYOption.IsSet)
                if (webConfig.MOJEEK_SEARCH_API_KEYOption.Value != null)
                    writer.WriteString("MOJEEK_SEARCH_API_KEY", webConfig.MOJEEK_SEARCH_API_KEY);
                else
                    writer.WriteNull("MOJEEK_SEARCH_API_KEY");

            if (webConfig.BOCHA_SEARCH_API_KEYOption.IsSet)
                if (webConfig.BOCHA_SEARCH_API_KEYOption.Value != null)
                    writer.WriteString("BOCHA_SEARCH_API_KEY", webConfig.BOCHA_SEARCH_API_KEY);
                else
                    writer.WriteNull("BOCHA_SEARCH_API_KEY");

            if (webConfig.SERPSTACK_API_KEYOption.IsSet)
                if (webConfig.SERPSTACK_API_KEYOption.Value != null)
                    writer.WriteString("SERPSTACK_API_KEY", webConfig.SERPSTACK_API_KEY);
                else
                    writer.WriteNull("SERPSTACK_API_KEY");

            if (webConfig.SERPSTACK_HTTPSOption.IsSet)
                if (webConfig.SERPSTACK_HTTPSOption.Value != null)
                    writer.WriteBoolean("SERPSTACK_HTTPS", webConfig.SERPSTACK_HTTPSOption.Value!.Value);
                else
                    writer.WriteNull("SERPSTACK_HTTPS");

            if (webConfig.SERPER_API_KEYOption.IsSet)
                if (webConfig.SERPER_API_KEYOption.Value != null)
                    writer.WriteString("SERPER_API_KEY", webConfig.SERPER_API_KEY);
                else
                    writer.WriteNull("SERPER_API_KEY");

            if (webConfig.SERPLY_API_KEYOption.IsSet)
                if (webConfig.SERPLY_API_KEYOption.Value != null)
                    writer.WriteString("SERPLY_API_KEY", webConfig.SERPLY_API_KEY);
                else
                    writer.WriteNull("SERPLY_API_KEY");

            if (webConfig.TAVILY_API_KEYOption.IsSet)
                if (webConfig.TAVILY_API_KEYOption.Value != null)
                    writer.WriteString("TAVILY_API_KEY", webConfig.TAVILY_API_KEY);
                else
                    writer.WriteNull("TAVILY_API_KEY");

            if (webConfig.SEARCHAPI_API_KEYOption.IsSet)
                if (webConfig.SEARCHAPI_API_KEYOption.Value != null)
                    writer.WriteString("SEARCHAPI_API_KEY", webConfig.SEARCHAPI_API_KEY);
                else
                    writer.WriteNull("SEARCHAPI_API_KEY");

            if (webConfig.SEARCHAPI_ENGINEOption.IsSet)
                if (webConfig.SEARCHAPI_ENGINEOption.Value != null)
                    writer.WriteString("SEARCHAPI_ENGINE", webConfig.SEARCHAPI_ENGINE);
                else
                    writer.WriteNull("SEARCHAPI_ENGINE");

            if (webConfig.SERPAPI_API_KEYOption.IsSet)
                if (webConfig.SERPAPI_API_KEYOption.Value != null)
                    writer.WriteString("SERPAPI_API_KEY", webConfig.SERPAPI_API_KEY);
                else
                    writer.WriteNull("SERPAPI_API_KEY");

            if (webConfig.SERPAPI_ENGINEOption.IsSet)
                if (webConfig.SERPAPI_ENGINEOption.Value != null)
                    writer.WriteString("SERPAPI_ENGINE", webConfig.SERPAPI_ENGINE);
                else
                    writer.WriteNull("SERPAPI_ENGINE");

            if (webConfig.JINA_API_KEYOption.IsSet)
                if (webConfig.JINA_API_KEYOption.Value != null)
                    writer.WriteString("JINA_API_KEY", webConfig.JINA_API_KEY);
                else
                    writer.WriteNull("JINA_API_KEY");

            if (webConfig.BINGSEARCHV7ENDPOINTOption.IsSet)
                if (webConfig.BINGSEARCHV7ENDPOINTOption.Value != null)
                    writer.WriteString("BING_SEARCH_V7_ENDPOINT", webConfig.BINGSEARCHV7ENDPOINT);
                else
                    writer.WriteNull("BING_SEARCH_V7_ENDPOINT");

            if (webConfig.BINGSEARCHV7SUBSCRIPTIONKEYOption.IsSet)
                if (webConfig.BINGSEARCHV7SUBSCRIPTIONKEYOption.Value != null)
                    writer.WriteString("BING_SEARCH_V7_SUBSCRIPTION_KEY", webConfig.BINGSEARCHV7SUBSCRIPTIONKEY);
                else
                    writer.WriteNull("BING_SEARCH_V7_SUBSCRIPTION_KEY");

            if (webConfig.EXA_API_KEYOption.IsSet)
                if (webConfig.EXA_API_KEYOption.Value != null)
                    writer.WriteString("EXA_API_KEY", webConfig.EXA_API_KEY);
                else
                    writer.WriteNull("EXA_API_KEY");

            if (webConfig.PERPLEXITY_API_KEYOption.IsSet)
                if (webConfig.PERPLEXITY_API_KEYOption.Value != null)
                    writer.WriteString("PERPLEXITY_API_KEY", webConfig.PERPLEXITY_API_KEY);
                else
                    writer.WriteNull("PERPLEXITY_API_KEY");

            if (webConfig.PERPLEXITY_MODELOption.IsSet)
                if (webConfig.PERPLEXITY_MODELOption.Value != null)
                    writer.WriteString("PERPLEXITY_MODEL", webConfig.PERPLEXITY_MODEL);
                else
                    writer.WriteNull("PERPLEXITY_MODEL");

            if (webConfig.PERPLEXITY_SEARCH_CONTEXT_USAGEOption.IsSet)
                if (webConfig.PERPLEXITY_SEARCH_CONTEXT_USAGEOption.Value != null)
                    writer.WriteString("PERPLEXITY_SEARCH_CONTEXT_USAGE", webConfig.PERPLEXITY_SEARCH_CONTEXT_USAGE);
                else
                    writer.WriteNull("PERPLEXITY_SEARCH_CONTEXT_USAGE");

            if (webConfig.SOUGOU_API_SIDOption.IsSet)
                if (webConfig.SOUGOU_API_SIDOption.Value != null)
                    writer.WriteString("SOUGOU_API_SID", webConfig.SOUGOU_API_SID);
                else
                    writer.WriteNull("SOUGOU_API_SID");

            if (webConfig.SOUGOU_API_SKOption.IsSet)
                if (webConfig.SOUGOU_API_SKOption.Value != null)
                    writer.WriteString("SOUGOU_API_SK", webConfig.SOUGOU_API_SK);
                else
                    writer.WriteNull("SOUGOU_API_SK");

            if (webConfig.WEB_LOADER_ENGINEOption.IsSet)
                if (webConfig.WEB_LOADER_ENGINEOption.Value != null)
                    writer.WriteString("WEB_LOADER_ENGINE", webConfig.WEB_LOADER_ENGINE);
                else
                    writer.WriteNull("WEB_LOADER_ENGINE");

            if (webConfig.ENABLE_WEB_LOADER_SSL_VERIFICATIONOption.IsSet)
                if (webConfig.ENABLE_WEB_LOADER_SSL_VERIFICATIONOption.Value != null)
                    writer.WriteBoolean("ENABLE_WEB_LOADER_SSL_VERIFICATION", webConfig.ENABLE_WEB_LOADER_SSL_VERIFICATIONOption.Value!.Value);
                else
                    writer.WriteNull("ENABLE_WEB_LOADER_SSL_VERIFICATION");

            if (webConfig.PLAYWRIGHT_WS_URLOption.IsSet)
                if (webConfig.PLAYWRIGHT_WS_URLOption.Value != null)
                    writer.WriteString("PLAYWRIGHT_WS_URL", webConfig.PLAYWRIGHT_WS_URL);
                else
                    writer.WriteNull("PLAYWRIGHT_WS_URL");

            if (webConfig.PLAYWRIGHT_TIMEOUTOption.IsSet)
                if (webConfig.PLAYWRIGHT_TIMEOUTOption.Value != null)
                    writer.WriteNumber("PLAYWRIGHT_TIMEOUT", webConfig.PLAYWRIGHT_TIMEOUTOption.Value!.Value);
                else
                    writer.WriteNull("PLAYWRIGHT_TIMEOUT");

            if (webConfig.FIRECRAWL_API_KEYOption.IsSet)
                if (webConfig.FIRECRAWL_API_KEYOption.Value != null)
                    writer.WriteString("FIRECRAWL_API_KEY", webConfig.FIRECRAWL_API_KEY);
                else
                    writer.WriteNull("FIRECRAWL_API_KEY");

            if (webConfig.FIRECRAWL_API_BASE_URLOption.IsSet)
                if (webConfig.FIRECRAWL_API_BASE_URLOption.Value != null)
                    writer.WriteString("FIRECRAWL_API_BASE_URL", webConfig.FIRECRAWL_API_BASE_URL);
                else
                    writer.WriteNull("FIRECRAWL_API_BASE_URL");

            if (webConfig.TAVILY_EXTRACT_DEPTHOption.IsSet)
                if (webConfig.TAVILY_EXTRACT_DEPTHOption.Value != null)
                    writer.WriteString("TAVILY_EXTRACT_DEPTH", webConfig.TAVILY_EXTRACT_DEPTH);
                else
                    writer.WriteNull("TAVILY_EXTRACT_DEPTH");

            if (webConfig.EXTERNAL_WEB_SEARCH_URLOption.IsSet)
                if (webConfig.EXTERNAL_WEB_SEARCH_URLOption.Value != null)
                    writer.WriteString("EXTERNAL_WEB_SEARCH_URL", webConfig.EXTERNAL_WEB_SEARCH_URL);
                else
                    writer.WriteNull("EXTERNAL_WEB_SEARCH_URL");

            if (webConfig.EXTERNAL_WEB_SEARCH_API_KEYOption.IsSet)
                if (webConfig.EXTERNAL_WEB_SEARCH_API_KEYOption.Value != null)
                    writer.WriteString("EXTERNAL_WEB_SEARCH_API_KEY", webConfig.EXTERNAL_WEB_SEARCH_API_KEY);
                else
                    writer.WriteNull("EXTERNAL_WEB_SEARCH_API_KEY");

            if (webConfig.EXTERNAL_WEB_LOADER_URLOption.IsSet)
                if (webConfig.EXTERNAL_WEB_LOADER_URLOption.Value != null)
                    writer.WriteString("EXTERNAL_WEB_LOADER_URL", webConfig.EXTERNAL_WEB_LOADER_URL);
                else
                    writer.WriteNull("EXTERNAL_WEB_LOADER_URL");

            if (webConfig.EXTERNAL_WEB_LOADER_API_KEYOption.IsSet)
                if (webConfig.EXTERNAL_WEB_LOADER_API_KEYOption.Value != null)
                    writer.WriteString("EXTERNAL_WEB_LOADER_API_KEY", webConfig.EXTERNAL_WEB_LOADER_API_KEY);
                else
                    writer.WriteNull("EXTERNAL_WEB_LOADER_API_KEY");

            if (webConfig.YOUTUBE_LOADER_LANGUAGEOption.IsSet)
                if (webConfig.YOUTUBE_LOADER_LANGUAGEOption.Value != null)
                {
                    writer.WritePropertyName("YOUTUBE_LOADER_LANGUAGE");
                    JsonSerializer.Serialize(writer, webConfig.YOUTUBE_LOADER_LANGUAGE, jsonSerializerOptions);
                }
                else
                    writer.WriteNull("YOUTUBE_LOADER_LANGUAGE");
            if (webConfig.YOUTUBE_LOADER_PROXY_URLOption.IsSet)
                if (webConfig.YOUTUBE_LOADER_PROXY_URLOption.Value != null)
                    writer.WriteString("YOUTUBE_LOADER_PROXY_URL", webConfig.YOUTUBE_LOADER_PROXY_URL);
                else
                    writer.WriteNull("YOUTUBE_LOADER_PROXY_URL");

            if (webConfig.YOUTUBE_LOADER_TRANSLATIONOption.IsSet)
                if (webConfig.YOUTUBE_LOADER_TRANSLATIONOption.Value != null)
                    writer.WriteString("YOUTUBE_LOADER_TRANSLATION", webConfig.YOUTUBE_LOADER_TRANSLATION);
                else
                    writer.WriteNull("YOUTUBE_LOADER_TRANSLATION");
        }
    }
}
